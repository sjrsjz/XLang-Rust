<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="4571045047"><g><title>malloc@plt (2,860,568 samples, 0.06%)</title><rect x="0.0000%" y="741" width="0.0626%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2860568"/><text x="0.2500%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,158,341 samples, 0.11%)</title><rect x="0.0000%" y="757" width="0.1128%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5158341"/><text x="0.2500%" y="767.50"></text></g><g><title>memcpy@plt (2,297,773 samples, 0.05%)</title><rect x="0.0626%" y="741" width="0.0503%" height="15" fill="rgb(221,193,54)" fg:x="2860568" fg:w="2297773"/><text x="0.3126%" y="751.50"></text></g><g><title>regex_automata::meta::wrappers::OnePass::new (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="565" width="0.0435%" height="15" fill="rgb(248,212,6)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="575.50"></text></g><g><title>regex_automata::meta::wrappers::OnePassEngine::new (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="549" width="0.0435%" height="15" fill="rgb(208,68,35)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="559.50"></text></g><g><title>regex_automata::dfa::onepass::Builder::build_from_nfa (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="533" width="0.0435%" height="15" fill="rgb(232,128,0)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="543.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::build (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="517" width="0.0435%" height="15" fill="rgb(207,160,47)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="527.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_start_state (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="501" width="0.0435%" height="15" fill="rgb(228,23,34)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="511.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_dfa_state_for_nfa_state (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="485" width="0.0435%" height="15" fill="rgb(218,30,26)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="495.50"></text></g><g><title>regex_automata::dfa::onepass::InternalBuilder::add_empty_state (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="469" width="0.0435%" height="15" fill="rgb(220,122,19)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="453" width="0.0435%" height="15" fill="rgb(250,228,42)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="437" width="0.0435%" height="15" fill="rgb(240,193,28)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="421" width="0.0435%" height="15" fill="rgb(216,20,37)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="405" width="0.0435%" height="15" fill="rgb(206,188,39)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="389" width="0.0435%" height="15" fill="rgb(217,207,13)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="373" width="0.0435%" height="15" fill="rgb(231,73,38)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="357" width="0.0435%" height="15" fill="rgb(225,20,46)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="341" width="0.0435%" height="15" fill="rgb(210,31,41)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="325" width="0.0435%" height="15" fill="rgb(221,200,47)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="309" width="0.0435%" height="15" fill="rgb(226,26,5)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="293" width="0.0435%" height="15" fill="rgb(249,33,26)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="277" width="0.0435%" height="15" fill="rgb(235,183,28)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="287.50"></text></g><g><title>realloc (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="261" width="0.0435%" height="15" fill="rgb(221,5,38)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="271.50"></text></g><g><title>[libc.so.6] (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="245" width="0.0435%" height="15" fill="rgb(247,18,42)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="255.50"></text></g><g><title>[libc.so.6] (1,989,771 samples, 0.04%)</title><rect x="0.1128%" y="229" width="0.0435%" height="15" fill="rgb(241,131,45)" fg:x="5158341" fg:w="1989771"/><text x="0.3628%" y="239.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (2,231,503 samples, 0.05%)</title><rect x="0.1564%" y="293" width="0.0488%" height="15" fill="rgb(249,31,29)" fg:x="7148112" fg:w="2231503"/><text x="0.4064%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2,231,503 samples, 0.05%)</title><rect x="0.1564%" y="277" width="0.0488%" height="15" fill="rgb(225,111,53)" fg:x="7148112" fg:w="2231503"/><text x="0.4064%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::utf8::Utf8Sequences&gt; (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="293" width="0.0478%" height="15" fill="rgb(238,160,17)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::utf8::ScalarRange&gt;&gt; (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="277" width="0.0478%" height="15" fill="rgb(214,148,48)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::utf8::ScalarRange&gt;&gt; (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="261" width="0.0478%" height="15" fill="rgb(232,36,49)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="245" width="0.0478%" height="15" fill="rgb(209,103,24)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="229" width="0.0478%" height="15" fill="rgb(229,88,8)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="213" width="0.0478%" height="15" fill="rgb(213,181,19)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="197" width="0.0478%" height="15" fill="rgb(254,191,54)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="207.50"></text></g><g><title>cfree (2,186,285 samples, 0.05%)</title><rect x="0.2052%" y="181" width="0.0478%" height="15" fill="rgb(241,83,37)" fg:x="9379615" fg:w="2186285"/><text x="0.4552%" y="191.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_range (2,061,116 samples, 0.05%)</title><rect x="0.2530%" y="293" width="0.0451%" height="15" fill="rgb(233,36,39)" fg:x="11565900" fg:w="2061116"/><text x="0.5030%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_range (2,061,116 samples, 0.05%)</title><rect x="0.2530%" y="277" width="0.0451%" height="15" fill="rgb(226,3,54)" fg:x="11565900" fg:w="2061116"/><text x="0.5030%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (2,061,116 samples, 0.05%)</title><rect x="0.2530%" y="261" width="0.0451%" height="15" fill="rgb(245,192,40)" fg:x="11565900" fg:w="2061116"/><text x="0.5030%" y="271.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (2,061,116 samples, 0.05%)</title><rect x="0.2530%" y="245" width="0.0451%" height="15" fill="rgb(238,167,29)" fg:x="11565900" fg:w="2061116"/><text x="0.5030%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,061,116 samples, 0.05%)</title><rect x="0.2530%" y="229" width="0.0451%" height="15" fill="rgb(232,182,51)" fg:x="11565900" fg:w="2061116"/><text x="0.5030%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::patch (1,868,434 samples, 0.04%)</title><rect x="0.2981%" y="293" width="0.0409%" height="15" fill="rgb(231,60,39)" fg:x="13627016" fg:w="1868434"/><text x="0.5481%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (1,868,434 samples, 0.04%)</title><rect x="0.2981%" y="277" width="0.0409%" height="15" fill="rgb(208,69,12)" fg:x="13627016" fg:w="1868434"/><text x="0.5481%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::get (8,258,941 samples, 0.18%)</title><rect x="0.3390%" y="293" width="0.1807%" height="15" fill="rgb(235,93,37)" fg:x="15495450" fg:w="8258941"/><text x="0.5890%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::hash (2,011,389 samples, 0.04%)</title><rect x="0.5197%" y="293" width="0.0440%" height="15" fill="rgb(213,116,39)" fg:x="23754391" fg:w="2011389"/><text x="0.7697%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="453" width="0.4450%" height="15" fill="rgb(222,207,29)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="437" width="0.4450%" height="15" fill="rgb(206,96,30)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="421" width="0.4450%" height="15" fill="rgb(218,138,4)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="405" width="0.4450%" height="15" fill="rgb(250,191,14)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="415.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="389" width="0.4450%" height="15" fill="rgb(239,60,40)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="373" width="0.4450%" height="15" fill="rgb(206,27,48)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="357" width="0.4450%" height="15" fill="rgb(225,35,8)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="341" width="0.4450%" height="15" fill="rgb(250,213,24)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="325" width="0.4450%" height="15" fill="rgb(247,123,22)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (20,340,773 samples, 0.44%)</title><rect x="0.1564%" y="309" width="0.4450%" height="15" fill="rgb(231,138,38)" fg:x="7148112" fg:w="20340773"/><text x="0.4064%" y="319.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (1,723,105 samples, 0.04%)</title><rect x="0.5637%" y="293" width="0.0377%" height="15" fill="rgb(231,145,46)" fg:x="25765780" fg:w="1723105"/><text x="0.8137%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,723,105 samples, 0.04%)</title><rect x="0.5637%" y="277" width="0.0377%" height="15" fill="rgb(251,118,11)" fg:x="25765780" fg:w="1723105"/><text x="0.8137%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,723,105 samples, 0.04%)</title><rect x="0.5637%" y="261" width="0.0377%" height="15" fill="rgb(217,147,25)" fg:x="25765780" fg:w="1723105"/><text x="0.8137%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,723,105 samples, 0.04%)</title><rect x="0.5637%" y="245" width="0.0377%" height="15" fill="rgb(247,81,37)" fg:x="25765780" fg:w="1723105"/><text x="0.8137%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1,723,105 samples, 0.04%)</title><rect x="0.5637%" y="229" width="0.0377%" height="15" fill="rgb(209,12,38)" fg:x="25765780" fg:w="1723105"/><text x="0.8137%" y="239.50"></text></g><g><title>malloc (1,723,105 samples, 0.04%)</title><rect x="0.5637%" y="213" width="0.0377%" height="15" fill="rgb(227,1,9)" fg:x="25765780" fg:w="1723105"/><text x="0.8137%" y="223.50"></text></g><g><title>XLang_Rust::build_code (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="757" width="0.4955%" height="15" fill="rgb(248,47,43)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="767.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="741" width="0.4955%" height="15" fill="rgb(221,10,30)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="751.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="725" width="0.4955%" height="15" fill="rgb(210,229,1)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="735.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="709" width="0.4955%" height="15" fill="rgb(222,148,37)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="719.50"></text></g><g><title>regex::regex::string::Regex::new (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="693" width="0.4955%" height="15" fill="rgb(234,67,33)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="703.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="677" width="0.4955%" height="15" fill="rgb(247,98,35)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="687.50"></text></g><g><title>regex::builders::Builder::build_one_string (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="661" width="0.4955%" height="15" fill="rgb(247,138,52)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="645" width="0.4955%" height="15" fill="rgb(213,79,30)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="655.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="629" width="0.4955%" height="15" fill="rgb(246,177,23)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="639.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="613" width="0.4955%" height="15" fill="rgb(230,62,27)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="623.50"></text></g><g><title>regex_automata::meta::strategy::new (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="597" width="0.4955%" height="15" fill="rgb(216,154,8)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="607.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (22,650,123 samples, 0.50%)</title><rect x="0.1128%" y="581" width="0.4955%" height="15" fill="rgb(244,35,45)" fg:x="5158341" fg:w="22650123"/><text x="0.3628%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (20,660,352 samples, 0.45%)</title><rect x="0.1564%" y="565" width="0.4520%" height="15" fill="rgb(251,115,12)" fg:x="7148112" fg:w="20660352"/><text x="0.4064%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (20,660,352 samples, 0.45%)</title><rect x="0.1564%" y="549" width="0.4520%" height="15" fill="rgb(240,54,50)" fg:x="7148112" fg:w="20660352"/><text x="0.4064%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (20,660,352 samples, 0.45%)</title><rect x="0.1564%" y="533" width="0.4520%" height="15" fill="rgb(233,84,52)" fg:x="7148112" fg:w="20660352"/><text x="0.4064%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20,660,352 samples, 0.45%)</title><rect x="0.1564%" y="517" width="0.4520%" height="15" fill="rgb(207,117,47)" fg:x="7148112" fg:w="20660352"/><text x="0.4064%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20,660,352 samples, 0.45%)</title><rect x="0.1564%" y="501" width="0.4520%" height="15" fill="rgb(249,43,39)" fg:x="7148112" fg:w="20660352"/><text x="0.4064%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20,660,352 samples, 0.45%)</title><rect x="0.1564%" y="485" width="0.4520%" height="15" fill="rgb(209,38,44)" fg:x="7148112" fg:w="20660352"/><text x="0.4064%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (20,660,352 samples, 0.45%)</title><rect x="0.1564%" y="469" width="0.4520%" height="15" fill="rgb(236,212,23)" fg:x="7148112" fg:w="20660352"/><text x="0.4064%" y="479.50"></text></g><g><title>memcpy (1,971,733 samples, 0.04%)</title><rect x="0.6084%" y="485" width="0.0431%" height="15" fill="rgb(242,79,21)" fg:x="27808464" fg:w="1971733"/><text x="0.8584%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::add (2,741,425 samples, 0.06%)</title><rect x="0.6515%" y="485" width="0.0600%" height="15" fill="rgb(211,96,35)" fg:x="29780197" fg:w="2741425"/><text x="0.9015%" y="495.50"></text></g><g><title>regex_automata::util::primitives::StateID::new (2,299,086 samples, 0.05%)</title><rect x="0.6612%" y="469" width="0.0503%" height="15" fill="rgb(253,215,40)" fg:x="30222536" fg:w="2299086"/><text x="0.9112%" y="479.50"></text></g><g><title>regex_automata::util::primitives::SmallIndex::new (2,299,086 samples, 0.05%)</title><rect x="0.6612%" y="453" width="0.0503%" height="15" fill="rgb(211,81,21)" fg:x="30222536" fg:w="2299086"/><text x="0.9112%" y="463.50"></text></g><g><title>&lt;regex_automata::util::primitives::SmallIndex as core::convert::TryFrom&lt;usize&gt;&gt;::try_from (2,299,086 samples, 0.05%)</title><rect x="0.6612%" y="437" width="0.0503%" height="15" fill="rgb(208,190,38)" fg:x="30222536" fg:w="2299086"/><text x="0.9112%" y="447.50"></text></g><g><title>XLang_Rust::main (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="757" width="0.1518%" height="15" fill="rgb(235,213,38)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="767.50"></text></g><g><title>XLang_Rust::run_file (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="741" width="0.1518%" height="15" fill="rgb(237,122,38)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="751.50"></text></g><g><title>XLang_Rust::build_code (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="725" width="0.1518%" height="15" fill="rgb(244,218,35)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="735.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="709" width="0.1518%" height="15" fill="rgb(240,68,47)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="719.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="693" width="0.1518%" height="15" fill="rgb(210,16,53)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="703.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="677" width="0.1518%" height="15" fill="rgb(235,124,12)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="687.50"></text></g><g><title>regex::regex::string::Regex::new (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="661" width="0.1518%" height="15" fill="rgb(224,169,11)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="671.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="645" width="0.1518%" height="15" fill="rgb(250,166,2)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="655.50"></text></g><g><title>regex::builders::Builder::build_one_string (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="629" width="0.1518%" height="15" fill="rgb(242,216,29)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="639.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="613" width="0.1518%" height="15" fill="rgb(230,116,27)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="623.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="597" width="0.1518%" height="15" fill="rgb(228,99,48)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="607.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="581" width="0.1518%" height="15" fill="rgb(253,11,6)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="591.50"></text></g><g><title>regex_automata::meta::strategy::new (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="565" width="0.1518%" height="15" fill="rgb(247,143,39)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="575.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="549" width="0.1518%" height="15" fill="rgb(236,97,10)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="533" width="0.1518%" height="15" fill="rgb(233,208,19)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="517" width="0.1518%" height="15" fill="rgb(216,164,2)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::build (6,941,042 samples, 0.15%)</title><rect x="0.6084%" y="501" width="0.1518%" height="15" fill="rgb(220,129,5)" fg:x="27808464" fg:w="6941042"/><text x="0.8584%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::nfa::Inner::into_nfa (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="485" width="0.0487%" height="15" fill="rgb(242,17,10)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="495.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="469" width="0.0487%" height="15" fill="rgb(242,107,0)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="453" width="0.0487%" height="15" fill="rgb(251,28,31)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="437" width="0.0487%" height="15" fill="rgb(233,223,10)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="421" width="0.0487%" height="15" fill="rgb(215,21,27)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="405" width="0.0487%" height="15" fill="rgb(232,23,21)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="389" width="0.0487%" height="15" fill="rgb(244,5,23)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="399.50"></text></g><g><title>malloc (2,227,884 samples, 0.05%)</title><rect x="0.7115%" y="373" width="0.0487%" height="15" fill="rgb(226,81,46)" fg:x="32521622" fg:w="2227884"/><text x="0.9615%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_range (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="309" width="0.0281%" height="15" fill="rgb(247,70,30)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::add_range (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="293" width="0.0281%" height="15" fill="rgb(212,68,19)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add_range (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="277" width="0.0281%" height="15" fill="rgb(240,187,13)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::add (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="261" width="0.0281%" height="15" fill="rgb(223,113,26)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="245" width="0.0281%" height="15" fill="rgb(206,192,2)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="229" width="0.0281%" height="15" fill="rgb(241,108,4)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="213" width="0.0281%" height="15" fill="rgb(247,173,49)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="197" width="0.0281%" height="15" fill="rgb(224,114,35)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="181" width="0.0281%" height="15" fill="rgb(245,159,27)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="165" width="0.0281%" height="15" fill="rgb(245,172,44)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="149" width="0.0281%" height="15" fill="rgb(236,23,11)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="133" width="0.0281%" height="15" fill="rgb(205,117,38)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="143.50"></text></g><g><title>realloc (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="117" width="0.0281%" height="15" fill="rgb(237,72,25)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="127.50"></text></g><g><title>[libc.so.6] (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="101" width="0.0281%" height="15" fill="rgb(244,70,9)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="111.50"></text></g><g><title>[libc.so.6] (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="85" width="0.0281%" height="15" fill="rgb(217,125,39)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="95.50"></text></g><g><title>[libc.so.6] (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="69" width="0.0281%" height="15" fill="rgb(235,36,10)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="79.50"></text></g><g><title>[libc.so.6] (1,285,956 samples, 0.03%)</title><rect x="0.7602%" y="53" width="0.0281%" height="15" fill="rgb(251,123,47)" fg:x="34749506" fg:w="1285956"/><text x="1.0102%" y="63.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="757" width="0.0659%" height="15" fill="rgb(221,13,13)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="767.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="741" width="0.0659%" height="15" fill="rgb(238,131,9)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="751.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="725" width="0.0659%" height="15" fill="rgb(211,50,8)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="735.50"></text></g><g><title>regex::regex::string::Regex::new (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="709" width="0.0659%" height="15" fill="rgb(245,182,24)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="719.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="693" width="0.0659%" height="15" fill="rgb(242,14,37)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="703.50"></text></g><g><title>regex::builders::Builder::build_one_string (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="677" width="0.0659%" height="15" fill="rgb(246,228,12)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="687.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="661" width="0.0659%" height="15" fill="rgb(213,55,15)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="671.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="645" width="0.0659%" height="15" fill="rgb(209,9,3)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="655.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="629" width="0.0659%" height="15" fill="rgb(230,59,30)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="639.50"></text></g><g><title>regex_automata::meta::strategy::new (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="613" width="0.0659%" height="15" fill="rgb(209,121,21)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="623.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="597" width="0.0659%" height="15" fill="rgb(220,109,13)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="581" width="0.0659%" height="15" fill="rgb(232,18,1)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="565" width="0.0659%" height="15" fill="rgb(215,41,42)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="549" width="0.0659%" height="15" fill="rgb(224,123,36)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="533" width="0.0659%" height="15" fill="rgb(240,125,3)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="517" width="0.0659%" height="15" fill="rgb(205,98,50)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="501" width="0.0659%" height="15" fill="rgb(205,185,37)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="485" width="0.0659%" height="15" fill="rgb(238,207,15)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="469" width="0.0659%" height="15" fill="rgb(213,199,42)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="453" width="0.0659%" height="15" fill="rgb(235,201,11)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="437" width="0.0659%" height="15" fill="rgb(207,46,11)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="421" width="0.0659%" height="15" fill="rgb(241,35,35)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="405" width="0.0659%" height="15" fill="rgb(243,32,47)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="389" width="0.0659%" height="15" fill="rgb(247,202,23)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="373" width="0.0659%" height="15" fill="rgb(219,102,11)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="357" width="0.0659%" height="15" fill="rgb(243,110,44)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="341" width="0.0659%" height="15" fill="rgb(222,74,54)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (3,010,402 samples, 0.07%)</title><rect x="0.7602%" y="325" width="0.0659%" height="15" fill="rgb(216,99,12)" fg:x="34749506" fg:w="3010402"/><text x="1.0102%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::patch (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="309" width="0.0377%" height="15" fill="rgb(226,22,26)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::builder::Builder::patch (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="293" width="0.0377%" height="15" fill="rgb(217,163,10)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="277" width="0.0377%" height="15" fill="rgb(213,25,53)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="261" width="0.0377%" height="15" fill="rgb(252,105,26)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="245" width="0.0377%" height="15" fill="rgb(220,39,43)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="229" width="0.0377%" height="15" fill="rgb(229,68,48)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="213" width="0.0377%" height="15" fill="rgb(252,8,32)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="197" width="0.0377%" height="15" fill="rgb(223,20,43)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="181" width="0.0377%" height="15" fill="rgb(229,81,49)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="165" width="0.0377%" height="15" fill="rgb(236,28,36)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="175.50"></text></g><g><title>realloc (1,724,446 samples, 0.04%)</title><rect x="0.7883%" y="149" width="0.0377%" height="15" fill="rgb(249,185,26)" fg:x="36035462" fg:w="1724446"/><text x="1.0383%" y="159.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMLambda::set_result (14,084,830 samples, 0.31%)</title><rect x="0.8261%" y="757" width="0.3081%" height="15" fill="rgb(249,174,33)" fg:x="37759908" fg:w="14084830"/><text x="1.0761%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14,084,830 samples, 0.31%)</title><rect x="0.8261%" y="741" width="0.3081%" height="15" fill="rgb(233,201,37)" fg:x="37759908" fg:w="14084830"/><text x="1.0761%" y="751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (14,084,830 samples, 0.31%)</title><rect x="0.8261%" y="725" width="0.3081%" height="15" fill="rgb(221,78,26)" fg:x="37759908" fg:w="14084830"/><text x="1.0761%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14,084,830 samples, 0.31%)</title><rect x="0.8261%" y="709" width="0.3081%" height="15" fill="rgb(250,127,30)" fg:x="37759908" fg:w="14084830"/><text x="1.0761%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14,084,830 samples, 0.31%)</title><rect x="0.8261%" y="693" width="0.3081%" height="15" fill="rgb(230,49,44)" fg:x="37759908" fg:w="14084830"/><text x="1.0761%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (14,084,830 samples, 0.31%)</title><rect x="0.8261%" y="677" width="0.3081%" height="15" fill="rgb(229,67,23)" fg:x="37759908" fg:w="14084830"/><text x="1.0761%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11,390,020 samples, 0.25%)</title><rect x="0.8850%" y="661" width="0.2492%" height="15" fill="rgb(249,83,47)" fg:x="40454718" fg:w="11390020"/><text x="1.1350%" y="671.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMTuple::assign_members (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="757" width="0.0624%" height="15" fill="rgb(215,43,3)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="741" width="0.0624%" height="15" fill="rgb(238,154,13)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="725" width="0.0624%" height="15" fill="rgb(219,56,2)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="709" width="0.0624%" height="15" fill="rgb(233,0,4)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="693" width="0.0624%" height="15" fill="rgb(235,30,7)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="677" width="0.0624%" height="15" fill="rgb(250,79,13)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="661" width="0.0624%" height="15" fill="rgb(211,146,34)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="671.50"></text></g><g><title>free@plt (2,852,671 samples, 0.06%)</title><rect x="1.1342%" y="645" width="0.0624%" height="15" fill="rgb(228,22,38)" fg:x="51844738" fg:w="2852671"/><text x="1.3842%" y="655.50"></text></g><g><title>[XLang-Rust] (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="757" width="0.0601%" height="15" fill="rgb(235,168,5)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="767.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::collect (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="741" width="0.0601%" height="15" fill="rgb(221,155,16)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="751.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::sweep (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="725" width="0.0601%" height="15" fill="rgb(215,215,53)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="735.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="709" width="0.0601%" height="15" fill="rgb(223,4,10)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="693" width="0.0601%" height="15" fill="rgb(234,103,6)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="677" width="0.0601%" height="15" fill="rgb(227,97,0)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="661" width="0.0601%" height="15" fill="rgb(234,150,53)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="645" width="0.0601%" height="15" fill="rgb(228,201,54)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="655.50"></text></g><g><title>free@plt (2,746,203 samples, 0.06%)</title><rect x="1.1966%" y="629" width="0.0601%" height="15" fill="rgb(222,22,37)" fg:x="54697409" fg:w="2746203"/><text x="1.4466%" y="639.50"></text></g><g><title>XLang_Rust::vm::executor::variable::try_assign_as_vmobject (2,664,570 samples, 0.06%)</title><rect x="1.2652%" y="741" width="0.0583%" height="15" fill="rgb(237,53,32)" fg:x="57832269" fg:w="2664570"/><text x="1.5152%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,664,570 samples, 0.06%)</title><rect x="1.2652%" y="725" width="0.0583%" height="15" fill="rgb(233,25,53)" fg:x="57832269" fg:w="2664570"/><text x="1.5152%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,664,570 samples, 0.06%)</title><rect x="1.2652%" y="709" width="0.0583%" height="15" fill="rgb(210,40,34)" fg:x="57832269" fg:w="2664570"/><text x="1.5152%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,664,570 samples, 0.06%)</title><rect x="1.2652%" y="693" width="0.0583%" height="15" fill="rgb(241,220,44)" fg:x="57832269" fg:w="2664570"/><text x="1.5152%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,664,570 samples, 0.06%)</title><rect x="1.2652%" y="677" width="0.0583%" height="15" fill="rgb(235,28,35)" fg:x="57832269" fg:w="2664570"/><text x="1.5152%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,654,644 samples, 0.06%)</title><rect x="1.3781%" y="661" width="0.0581%" height="15" fill="rgb(210,56,17)" fg:x="62991840" fg:w="2654644"/><text x="1.6281%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,654,644 samples, 0.06%)</title><rect x="1.3781%" y="645" width="0.0581%" height="15" fill="rgb(224,130,29)" fg:x="62991840" fg:w="2654644"/><text x="1.6281%" y="655.50"></text></g><g><title>[unknown] (7,826,091 samples, 0.17%)</title><rect x="1.3235%" y="741" width="0.1712%" height="15" fill="rgb(235,212,8)" fg:x="60496839" fg:w="7826091"/><text x="1.5735%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,826,091 samples, 0.17%)</title><rect x="1.3235%" y="725" width="0.1712%" height="15" fill="rgb(223,33,50)" fg:x="60496839" fg:w="7826091"/><text x="1.5735%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (7,826,091 samples, 0.17%)</title><rect x="1.3235%" y="709" width="0.1712%" height="15" fill="rgb(219,149,13)" fg:x="60496839" fg:w="7826091"/><text x="1.5735%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7,826,091 samples, 0.17%)</title><rect x="1.3235%" y="693" width="0.1712%" height="15" fill="rgb(250,156,29)" fg:x="60496839" fg:w="7826091"/><text x="1.5735%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7,826,091 samples, 0.17%)</title><rect x="1.3235%" y="677" width="0.1712%" height="15" fill="rgb(216,193,19)" fg:x="60496839" fg:w="7826091"/><text x="1.5735%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,676,446 samples, 0.06%)</title><rect x="1.4361%" y="661" width="0.0586%" height="15" fill="rgb(216,135,14)" fg:x="65646484" fg:w="2676446"/><text x="1.6861%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,676,446 samples, 0.06%)</title><rect x="1.4361%" y="645" width="0.0586%" height="15" fill="rgb(241,47,5)" fg:x="65646484" fg:w="2676446"/><text x="1.6861%" y="655.50"></text></g><g><title>[unknown] (13,319,822 samples, 0.29%)</title><rect x="1.2652%" y="757" width="0.2914%" height="15" fill="rgb(233,42,35)" fg:x="57832269" fg:w="13319822"/><text x="1.5152%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,829,161 samples, 0.06%)</title><rect x="1.4947%" y="741" width="0.0619%" height="15" fill="rgb(231,13,6)" fg:x="68322930" fg:w="2829161"/><text x="1.7447%" y="751.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,829,161 samples, 0.06%)</title><rect x="1.4947%" y="725" width="0.0619%" height="15" fill="rgb(207,181,40)" fg:x="68322930" fg:w="2829161"/><text x="1.7447%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,829,161 samples, 0.06%)</title><rect x="1.4947%" y="709" width="0.0619%" height="15" fill="rgb(254,173,49)" fg:x="68322930" fg:w="2829161"/><text x="1.7447%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,829,161 samples, 0.06%)</title><rect x="1.4947%" y="693" width="0.0619%" height="15" fill="rgb(221,1,38)" fg:x="68322930" fg:w="2829161"/><text x="1.7447%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2,829,161 samples, 0.06%)</title><rect x="1.4947%" y="677" width="0.0619%" height="15" fill="rgb(206,124,46)" fg:x="68322930" fg:w="2829161"/><text x="1.7447%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,829,161 samples, 0.06%)</title><rect x="1.4947%" y="661" width="0.0619%" height="15" fill="rgb(249,21,11)" fg:x="68322930" fg:w="2829161"/><text x="1.7447%" y="671.50"></text></g><g><title>alloc::string::String::reserve (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="469" width="0.0432%" height="15" fill="rgb(222,201,40)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="453" width="0.0432%" height="15" fill="rgb(235,61,29)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="437" width="0.0432%" height="15" fill="rgb(219,207,3)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="421" width="0.0432%" height="15" fill="rgb(222,56,46)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="405" width="0.0432%" height="15" fill="rgb(239,76,54)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="389" width="0.0432%" height="15" fill="rgb(231,124,27)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="373" width="0.0432%" height="15" fill="rgb(249,195,6)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="383.50"></text></g><g><title>malloc (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="357" width="0.0432%" height="15" fill="rgb(237,174,47)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="367.50"></text></g><g><title>[libc.so.6] (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="341" width="0.0432%" height="15" fill="rgb(206,201,31)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="351.50"></text></g><g><title>[libc.so.6] (1,974,998 samples, 0.04%)</title><rect x="1.5566%" y="325" width="0.0432%" height="15" fill="rgb(231,57,52)" fg:x="71152091" fg:w="1974998"/><text x="1.8066%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,768,339 samples, 0.08%)</title><rect x="1.5566%" y="533" width="0.0824%" height="15" fill="rgb(248,177,22)" fg:x="71152091" fg:w="3768339"/><text x="1.8066%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;&amp;char&gt;&gt;::from_iter (3,768,339 samples, 0.08%)</title><rect x="1.5566%" y="517" width="0.0824%" height="15" fill="rgb(215,211,37)" fg:x="71152091" fg:w="3768339"/><text x="1.8066%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;&amp;char&gt;&gt;::extend (3,768,339 samples, 0.08%)</title><rect x="1.5566%" y="501" width="0.0824%" height="15" fill="rgb(241,128,51)" fg:x="71152091" fg:w="3768339"/><text x="1.8066%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (3,768,339 samples, 0.08%)</title><rect x="1.5566%" y="485" width="0.0824%" height="15" fill="rgb(227,165,31)" fg:x="71152091" fg:w="3768339"/><text x="1.8066%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="469" width="0.0392%" height="15" fill="rgb(228,167,24)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="453" width="0.0392%" height="15" fill="rgb(228,143,12)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="437" width="0.0392%" height="15" fill="rgb(249,149,8)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="421" width="0.0392%" height="15" fill="rgb(243,35,44)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="405" width="0.0392%" height="15" fill="rgb(246,89,9)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="389" width="0.0392%" height="15" fill="rgb(233,213,13)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::_{{closure}} (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="373" width="0.0392%" height="15" fill="rgb(233,141,41)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="383.50"></text></g><g><title>alloc::string::String::push (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="357" width="0.0392%" height="15" fill="rgb(239,167,4)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="341" width="0.0392%" height="15" fill="rgb(209,217,16)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="325" width="0.0392%" height="15" fill="rgb(219,88,35)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="309" width="0.0392%" height="15" fill="rgb(220,193,23)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="293" width="0.0392%" height="15" fill="rgb(230,90,52)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,793,341 samples, 0.04%)</title><rect x="1.5998%" y="277" width="0.0392%" height="15" fill="rgb(252,106,19)" fg:x="73127089" fg:w="1793341"/><text x="1.8498%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::RefUnwindSafe+core::marker::Sync+core::marker::Send+core::panic::unwind_safe::UnwindSafe&gt;&gt; (1,248,776 samples, 0.03%)</title><rect x="1.6390%" y="453" width="0.0273%" height="15" fill="rgb(206,74,20)" fg:x="74920430" fg:w="1248776"/><text x="1.8890%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;regex_automata::meta::regex::Regex as core::clone::Clone&gt;::clone::{{closure}}&gt; (1,248,776 samples, 0.03%)</title><rect x="1.6390%" y="437" width="0.0273%" height="15" fill="rgb(230,138,44)" fg:x="74920430" fg:w="1248776"/><text x="1.8890%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::regex::string::Regex&gt; (1,618,860 samples, 0.04%)</title><rect x="1.6390%" y="533" width="0.0354%" height="15" fill="rgb(235,182,43)" fg:x="74920430" fg:w="1618860"/><text x="1.8890%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::meta::regex::Regex&gt; (1,618,860 samples, 0.04%)</title><rect x="1.6390%" y="517" width="0.0354%" height="15" fill="rgb(242,16,51)" fg:x="74920430" fg:w="1618860"/><text x="1.8890%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::RefUnwindSafe+core::marker::Sync+core::marker::Send+core::panic::unwind_safe::UnwindSafe&gt;&gt;&gt; (1,618,860 samples, 0.04%)</title><rect x="1.6390%" y="501" width="0.0354%" height="15" fill="rgb(248,9,4)" fg:x="74920430" fg:w="1618860"/><text x="1.8890%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_automata::util::pool::inner::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::RefUnwindSafe+core::marker::Sync+core::marker::Send+core::panic::unwind_safe::UnwindSafe&gt;&gt;&gt;&gt; (1,618,860 samples, 0.04%)</title><rect x="1.6390%" y="485" width="0.0354%" height="15" fill="rgb(210,31,22)" fg:x="74920430" fg:w="1618860"/><text x="1.8890%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::util::pool::inner::Pool&lt;regex_automata::meta::regex::Cache,alloc::boxed::Box&lt;dyn core::ops::function::Fn&lt;()&gt;+Output = regex_automata::meta::regex::Cache+core::panic::unwind_safe::RefUnwindSafe+core::marker::Sync+core::marker::Send+core::panic::unwind_safe::UnwindSafe&gt;&gt;&gt; (1,618,860 samples, 0.04%)</title><rect x="1.6390%" y="469" width="0.0354%" height="15" fill="rgb(239,54,39)" fg:x="74920430" fg:w="1618860"/><text x="1.8890%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="261" width="0.0415%" height="15" fill="rgb(230,99,41)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="245" width="0.0415%" height="15" fill="rgb(253,106,12)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="229" width="0.0415%" height="15" fill="rgb(213,46,41)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="213" width="0.0415%" height="15" fill="rgb(215,133,35)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="197" width="0.0415%" height="15" fill="rgb(213,28,5)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="181" width="0.0415%" height="15" fill="rgb(215,77,49)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="165" width="0.0415%" height="15" fill="rgb(248,100,22)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="149" width="0.0415%" height="15" fill="rgb(208,67,9)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="133" width="0.0415%" height="15" fill="rgb(219,133,21)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="117" width="0.0415%" height="15" fill="rgb(246,46,29)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="101" width="0.0415%" height="15" fill="rgb(246,185,52)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="85" width="0.0415%" height="15" fill="rgb(252,136,11)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="95.50"></text></g><g><title>realloc (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="69" width="0.0415%" height="15" fill="rgb(219,138,53)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="79.50"></text></g><g><title>[libc.so.6] (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="53" width="0.0415%" height="15" fill="rgb(211,51,23)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="63.50"></text></g><g><title>memcpy (1,897,706 samples, 0.04%)</title><rect x="1.6744%" y="37" width="0.0415%" height="15" fill="rgb(247,221,28)" fg:x="76539290" fg:w="1897706"/><text x="1.9244%" y="47.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::add_state (3,868,826 samples, 0.08%)</title><rect x="1.6744%" y="277" width="0.0846%" height="15" fill="rgb(251,222,45)" fg:x="76539290" fg:w="3868826"/><text x="1.9244%" y="287.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::next_state_id (1,971,120 samples, 0.04%)</title><rect x="1.7160%" y="261" width="0.0431%" height="15" fill="rgb(217,162,53)" fg:x="78436996" fg:w="1971120"/><text x="1.9660%" y="271.50"></text></g><g><title>regex_automata::hybrid::id::LazyStateID::new (1,971,120 samples, 0.04%)</title><rect x="1.7160%" y="245" width="0.0431%" height="15" fill="rgb(229,93,14)" fg:x="78436996" fg:w="1971120"/><text x="1.9660%" y="255.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::create_cache (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="405" width="0.1663%" height="15" fill="rgb(209,67,49)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="415.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="389" width="0.1663%" height="15" fill="rgb(213,87,29)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="373" width="0.1663%" height="15" fill="rgb(205,151,52)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="383.50"></text></g><g><title>regex_automata::meta::wrappers::HybridCache::new::_{{closure}} (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="357" width="0.1663%" height="15" fill="rgb(253,215,39)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="367.50"></text></g><g><title>regex_automata::hybrid::regex::Regex::create_cache (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="341" width="0.1663%" height="15" fill="rgb(221,220,41)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="351.50"></text></g><g><title>regex_automata::hybrid::regex::Cache::new (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="325" width="0.1663%" height="15" fill="rgb(218,133,21)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="335.50"></text></g><g><title>regex_automata::hybrid::dfa::Cache::new (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="309" width="0.1663%" height="15" fill="rgb(221,193,43)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="319.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::init_cache (7,600,659 samples, 0.17%)</title><rect x="1.6744%" y="293" width="0.1663%" height="15" fill="rgb(240,128,52)" fg:x="76539290" fg:w="7600659"/><text x="1.9244%" y="303.50"></text></g><g><title>regex_automata::hybrid::dfa::Lazy::set_all_transitions (3,731,833 samples, 0.08%)</title><rect x="1.7591%" y="277" width="0.0816%" height="15" fill="rgb(253,114,12)" fg:x="80408116" fg:w="3731833"/><text x="2.0091%" y="287.50"></text></g><g><title>&lt;regex_automata::util::alphabet::ByteClassRepresentatives as core::iter::traits::iterator::Iterator&gt;::next (3,731,833 samples, 0.08%)</title><rect x="1.7591%" y="261" width="0.0816%" height="15" fill="rgb(215,223,47)" fg:x="80408116" fg:w="3731833"/><text x="2.0091%" y="271.50"></text></g><g><title>regex_automata::util::alphabet::ByteClasses::get (1,757,403 samples, 0.04%)</title><rect x="1.8023%" y="245" width="0.0384%" height="15" fill="rgb(248,225,23)" fg:x="82382546" fg:w="1757403"/><text x="2.0523%" y="255.50"></text></g><g><title>regex::regex::string::Regex::find (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="533" width="0.1733%" height="15" fill="rgb(250,108,0)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="543.50"></text></g><g><title>regex::regex::string::Regex::find_at (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="517" width="0.1733%" height="15" fill="rgb(228,208,7)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="527.50"></text></g><g><title>regex_automata::meta::regex::Regex::search (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="501" width="0.1733%" height="15" fill="rgb(244,45,10)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="511.50"></text></g><g><title>regex_automata::util::pool::Pool&lt;T,F&gt;::get (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="485" width="0.1733%" height="15" fill="rgb(207,125,25)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="495.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="469" width="0.1733%" height="15" fill="rgb(210,195,18)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="479.50"></text></g><g><title>regex_automata::util::pool::inner::Pool&lt;T,F&gt;::get_slow (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="453" width="0.1733%" height="15" fill="rgb(249,80,12)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="437" width="0.1733%" height="15" fill="rgb(221,65,9)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="447.50"></text></g><g><title>&lt;regex_automata::meta::strategy::Core as regex_automata::meta::strategy::Strategy&gt;::create_cache (7,919,743 samples, 0.17%)</title><rect x="1.6744%" y="421" width="0.1733%" height="15" fill="rgb(235,49,36)" fg:x="76539290" fg:w="7919743"/><text x="1.9244%" y="431.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop::_{{closure}} (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="373" width="0.0350%" height="15" fill="rgb(225,32,20)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="383.50"></text></g><g><title>regex_syntax::ast::Ast::empty (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="357" width="0.0350%" height="15" fill="rgb(215,141,46)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="341" width="0.0350%" height="15" fill="rgb(250,160,47)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="351.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="325" width="0.0350%" height="15" fill="rgb(216,222,40)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="309" width="0.0350%" height="15" fill="rgb(234,217,39)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="293" width="0.0350%" height="15" fill="rgb(207,178,40)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="277" width="0.0350%" height="15" fill="rgb(221,136,13)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="287.50"></text></g><g><title>__rdl_alloc (1,601,809 samples, 0.04%)</title><rect x="1.8477%" y="261" width="0.0350%" height="15" fill="rgb(249,199,10)" fg:x="84459033" fg:w="1601809"/><text x="2.0977%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::ast::Ast&gt;&gt; (3,606,564 samples, 0.08%)</title><rect x="1.8477%" y="453" width="0.0789%" height="15" fill="rgb(249,222,13)" fg:x="84459033" fg:w="3606564"/><text x="2.0977%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,606,564 samples, 0.08%)</title><rect x="1.8477%" y="437" width="0.0789%" height="15" fill="rgb(244,185,38)" fg:x="84459033" fg:w="3606564"/><text x="2.0977%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_syntax::ast::Ast]&gt; (3,606,564 samples, 0.08%)</title><rect x="1.8477%" y="421" width="0.0789%" height="15" fill="rgb(236,202,9)" fg:x="84459033" fg:w="3606564"/><text x="2.0977%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::Ast&gt; (3,606,564 samples, 0.08%)</title><rect x="1.8477%" y="405" width="0.0789%" height="15" fill="rgb(250,229,37)" fg:x="84459033" fg:w="3606564"/><text x="2.0977%" y="415.50"></text></g><g><title>&lt;regex_syntax::ast::Ast as core::ops::drop::Drop&gt;::drop (3,606,564 samples, 0.08%)</title><rect x="1.8477%" y="389" width="0.0789%" height="15" fill="rgb(206,174,23)" fg:x="84459033" fg:w="3606564"/><text x="2.0977%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;regex_syntax::ast::ClassBracketed&gt;&gt; (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="373" width="0.0439%" height="15" fill="rgb(211,33,43)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassBracketed&gt; (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="357" width="0.0439%" height="15" fill="rgb(245,58,50)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::ast::ClassSet&gt; (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="341" width="0.0439%" height="15" fill="rgb(244,68,36)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="351.50"></text></g><g><title>&lt;regex_syntax::ast::ClassSet as core::ops::drop::Drop&gt;::drop (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="325" width="0.0439%" height="15" fill="rgb(232,229,15)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="309" width="0.0439%" height="15" fill="rgb(254,30,23)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="293" width="0.0439%" height="15" fill="rgb(235,160,14)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="277" width="0.0439%" height="15" fill="rgb(212,155,44)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="261" width="0.0439%" height="15" fill="rgb(226,2,50)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="245" width="0.0439%" height="15" fill="rgb(234,177,6)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="229" width="0.0439%" height="15" fill="rgb(217,24,9)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="213" width="0.0439%" height="15" fill="rgb(220,13,46)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="197" width="0.0439%" height="15" fill="rgb(239,221,27)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="207.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,004,755 samples, 0.04%)</title><rect x="1.8827%" y="181" width="0.0439%" height="15" fill="rgb(222,198,25)" fg:x="86060842" fg:w="2004755"/><text x="2.1327%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="389" width="0.0808%" height="15" fill="rgb(211,99,13)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::builder::Builder&gt;&gt; (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="373" width="0.0808%" height="15" fill="rgb(232,111,31)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::Builder&gt; (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="357" width="0.0808%" height="15" fill="rgb(245,82,37)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::builder::State&gt;&gt; (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="341" width="0.0808%" height="15" fill="rgb(227,149,46)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="325" width="0.0808%" height="15" fill="rgb(218,36,50)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::builder::State]&gt; (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="309" width="0.0808%" height="15" fill="rgb(226,80,48)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::builder::State&gt; (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="293" width="0.0808%" height="15" fill="rgb(238,224,15)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="303.50"></text></g><g><title>cfree (3,691,542 samples, 0.08%)</title><rect x="1.9266%" y="277" width="0.0808%" height="15" fill="rgb(241,136,10)" fg:x="88065597" fg:w="3691542"/><text x="2.1766%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,341,097 samples, 0.03%)</title><rect x="2.1617%" y="197" width="0.0293%" height="15" fill="rgb(208,32,45)" fg:x="98812260" fg:w="1341097"/><text x="2.4117%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (1,341,097 samples, 0.03%)</title><rect x="2.1617%" y="181" width="0.0293%" height="15" fill="rgb(207,135,9)" fg:x="98812260" fg:w="1341097"/><text x="2.4117%" y="191.50"></text></g><g><title>cfree (1,341,097 samples, 0.03%)</title><rect x="2.1617%" y="165" width="0.0293%" height="15" fill="rgb(206,86,44)" fg:x="98812260" fg:w="1341097"/><text x="2.4117%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Compiler&gt; (13,838,463 samples, 0.30%)</title><rect x="1.9266%" y="405" width="0.3027%" height="15" fill="rgb(245,177,15)" fg:x="88065597" fg:w="13838463"/><text x="2.1766%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (10,146,921 samples, 0.22%)</title><rect x="2.0074%" y="389" width="0.2220%" height="15" fill="rgb(206,64,50)" fg:x="91757139" fg:w="10146921"/><text x="2.2574%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt;&gt; (10,146,921 samples, 0.22%)</title><rect x="2.0074%" y="373" width="0.2220%" height="15" fill="rgb(234,36,40)" fg:x="91757139" fg:w="10146921"/><text x="2.2574%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::compiler::Utf8State&gt; (10,146,921 samples, 0.22%)</title><rect x="2.0074%" y="357" width="0.2220%" height="15" fill="rgb(213,64,8)" fg:x="91757139" fg:w="10146921"/><text x="2.2574%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedMap&gt; (10,146,921 samples, 0.22%)</title><rect x="2.0074%" y="341" width="0.2220%" height="15" fill="rgb(210,75,36)" fg:x="91757139" fg:w="10146921"/><text x="2.2574%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt;&gt; (10,146,921 samples, 0.22%)</title><rect x="2.0074%" y="325" width="0.2220%" height="15" fill="rgb(229,88,21)" fg:x="91757139" fg:w="10146921"/><text x="2.2574%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,146,921 samples, 0.22%)</title><rect x="2.0074%" y="309" width="0.2220%" height="15" fill="rgb(252,204,47)" fg:x="91757139" fg:w="10146921"/><text x="2.2574%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex_automata::nfa::thompson::map::Utf8BoundedEntry]&gt; (10,146,921 samples, 0.22%)</title><rect x="2.0074%" y="293" width="0.2220%" height="15" fill="rgb(208,77,27)" fg:x="91757139" fg:w="10146921"/><text x="2.2574%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_automata::nfa::thompson::map::Utf8BoundedEntry&gt; (8,346,954 samples, 0.18%)</title><rect x="2.0467%" y="277" width="0.1826%" height="15" fill="rgb(221,76,26)" fg:x="93557106" fg:w="8346954"/><text x="2.2967%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (8,346,954 samples, 0.18%)</title><rect x="2.0467%" y="261" width="0.1826%" height="15" fill="rgb(225,139,18)" fg:x="93557106" fg:w="8346954"/><text x="2.2967%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_automata::nfa::thompson::nfa::Transition&gt;&gt; (8,346,954 samples, 0.18%)</title><rect x="2.0467%" y="245" width="0.1826%" height="15" fill="rgb(230,137,11)" fg:x="93557106" fg:w="8346954"/><text x="2.2967%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,346,954 samples, 0.18%)</title><rect x="2.0467%" y="229" width="0.1826%" height="15" fill="rgb(212,28,1)" fg:x="93557106" fg:w="8346954"/><text x="2.2967%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,091,800 samples, 0.07%)</title><rect x="2.1617%" y="213" width="0.0676%" height="15" fill="rgb(248,164,17)" fg:x="98812260" fg:w="3091800"/><text x="2.4117%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (1,750,703 samples, 0.04%)</title><rect x="2.1910%" y="197" width="0.0383%" height="15" fill="rgb(222,171,42)" fg:x="100153357" fg:w="1750703"/><text x="2.4410%" y="207.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (15,944,539 samples, 0.35%)</title><rect x="1.9266%" y="453" width="0.3488%" height="15" fill="rgb(243,84,45)" fg:x="88065597" fg:w="15944539"/><text x="2.1766%" y="463.50"></text></g><g><title>regex_automata::meta::strategy::new (15,944,539 samples, 0.35%)</title><rect x="1.9266%" y="437" width="0.3488%" height="15" fill="rgb(252,49,23)" fg:x="88065597" fg:w="15944539"/><text x="2.1766%" y="447.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (15,944,539 samples, 0.35%)</title><rect x="1.9266%" y="421" width="0.3488%" height="15" fill="rgb(215,19,7)" fg:x="88065597" fg:w="15944539"/><text x="2.1766%" y="431.50"></text></g><g><title>memcpy (2,106,076 samples, 0.05%)</title><rect x="2.2293%" y="405" width="0.0461%" height="15" fill="rgb(238,81,41)" fg:x="101904060" fg:w="2106076"/><text x="2.4793%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::bump_space (1,673,178 samples, 0.04%)</title><rect x="2.2754%" y="405" width="0.0366%" height="15" fill="rgb(210,199,37)" fg:x="104010136" fg:w="1673178"/><text x="2.5254%" y="415.50"></text></g><g><title>regex_syntax::ast::parse::Parser::parse (3,287,928 samples, 0.07%)</title><rect x="2.2754%" y="453" width="0.0719%" height="15" fill="rgb(244,192,49)" fg:x="104010136" fg:w="3287928"/><text x="2.5254%" y="463.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse (3,287,928 samples, 0.07%)</title><rect x="2.2754%" y="437" width="0.0719%" height="15" fill="rgb(226,211,11)" fg:x="104010136" fg:w="3287928"/><text x="2.5254%" y="447.50"></text></g><g><title>regex_syntax::ast::parse::ParserI&lt;P&gt;::parse_with_comments (3,287,928 samples, 0.07%)</title><rect x="2.2754%" y="421" width="0.0719%" height="15" fill="rgb(236,162,54)" fg:x="104010136" fg:w="3287928"/><text x="2.5254%" y="431.50"></text></g><g><title>regex_syntax::ast::parse::Primitive::into_ast (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="405" width="0.0353%" height="15" fill="rgb(220,229,9)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="415.50"></text></g><g><title>regex_syntax::ast::Ast::assertion (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="389" width="0.0353%" height="15" fill="rgb(250,87,22)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="373" width="0.0353%" height="15" fill="rgb(239,43,17)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="383.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="357" width="0.0353%" height="15" fill="rgb(231,177,25)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="341" width="0.0353%" height="15" fill="rgb(219,179,1)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="325" width="0.0353%" height="15" fill="rgb(238,219,53)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="309" width="0.0353%" height="15" fill="rgb(232,167,36)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="319.50"></text></g><g><title>__rust_alloc (1,614,750 samples, 0.04%)</title><rect x="2.3120%" y="293" width="0.0353%" height="15" fill="rgb(244,19,51)" fg:x="105683314" fg:w="1614750"/><text x="2.5620%" y="303.50"></text></g><g><title>regex_syntax::hir::Hir::class (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="389" width="0.0459%" height="15" fill="rgb(224,6,22)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="399.50"></text></g><g><title>regex_syntax::hir::Properties::class (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="373" width="0.0459%" height="15" fill="rgb(224,145,5)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="357" width="0.0459%" height="15" fill="rgb(234,130,49)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="341" width="0.0459%" height="15" fill="rgb(254,6,2)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="325" width="0.0459%" height="15" fill="rgb(208,96,46)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="309" width="0.0459%" height="15" fill="rgb(239,3,39)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="293" width="0.0459%" height="15" fill="rgb(233,210,1)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="303.50"></text></g><g><title>core::ptr::read_volatile (2,099,528 samples, 0.05%)</title><rect x="2.3473%" y="277" width="0.0459%" height="15" fill="rgb(244,137,37)" fg:x="107298064" fg:w="2099528"/><text x="2.5973%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="293" width="0.0490%" height="15" fill="rgb(240,136,2)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="277" width="0.0490%" height="15" fill="rgb(239,18,37)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::from_iter (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="261" width="0.0490%" height="15" fill="rgb(218,185,22)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="271.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="245" width="0.0490%" height="15" fill="rgb(225,218,4)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="229" width="0.0490%" height="15" fill="rgb(230,182,32)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="213" width="0.0490%" height="15" fill="rgb(242,56,43)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="223.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub_ptr (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="197" width="0.0490%" height="15" fill="rgb(233,99,24)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2,239,385 samples, 0.05%)</title><rect x="2.3933%" y="181" width="0.0490%" height="15" fill="rgb(234,209,42)" fg:x="109397592" fg:w="2239385"/><text x="2.6433%" y="191.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (42,459,622 samples, 0.93%)</title><rect x="1.5566%" y="565" width="0.9289%" height="15" fill="rgb(227,7,12)" fg:x="71152091" fg:w="42459622"/><text x="1.8066%" y="575.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize::_{{closure}} (42,459,622 samples, 0.93%)</title><rect x="1.5566%" y="549" width="0.9289%" height="15" fill="rgb(245,203,43)" fg:x="71152091" fg:w="42459622"/><text x="1.8066%" y="559.50"></text></g><g><title>regex::regex::string::Regex::new (29,152,680 samples, 0.64%)</title><rect x="1.8477%" y="533" width="0.6378%" height="15" fill="rgb(238,205,33)" fg:x="84459033" fg:w="29152680"/><text x="2.0977%" y="543.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (29,152,680 samples, 0.64%)</title><rect x="1.8477%" y="517" width="0.6378%" height="15" fill="rgb(231,56,7)" fg:x="84459033" fg:w="29152680"/><text x="2.0977%" y="527.50"></text></g><g><title>regex::builders::Builder::build_one_string (29,152,680 samples, 0.64%)</title><rect x="1.8477%" y="501" width="0.6378%" height="15" fill="rgb(244,186,29)" fg:x="84459033" fg:w="29152680"/><text x="2.0977%" y="511.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (29,152,680 samples, 0.64%)</title><rect x="1.8477%" y="485" width="0.6378%" height="15" fill="rgb(234,111,31)" fg:x="84459033" fg:w="29152680"/><text x="2.0977%" y="495.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (29,152,680 samples, 0.64%)</title><rect x="1.8477%" y="469" width="0.6378%" height="15" fill="rgb(241,149,10)" fg:x="84459033" fg:w="29152680"/><text x="2.0977%" y="479.50"></text></g><g><title>regex_syntax::hir::translate::Translator::translate (6,313,649 samples, 0.14%)</title><rect x="2.3473%" y="453" width="0.1381%" height="15" fill="rgb(249,206,44)" fg:x="107298064" fg:w="6313649"/><text x="2.5973%" y="463.50"></text></g><g><title>regex_syntax::ast::visitor::visit (6,313,649 samples, 0.14%)</title><rect x="2.3473%" y="437" width="0.1381%" height="15" fill="rgb(251,153,30)" fg:x="107298064" fg:w="6313649"/><text x="2.5973%" y="447.50"></text></g><g><title>regex_syntax::ast::visitor::HeapVisitor::visit (6,313,649 samples, 0.14%)</title><rect x="2.3473%" y="421" width="0.1381%" height="15" fill="rgb(239,152,38)" fg:x="107298064" fg:w="6313649"/><text x="2.5973%" y="431.50"></text></g><g><title>&lt;regex_syntax::hir::translate::TranslatorI as regex_syntax::ast::visitor::Visitor&gt;::visit_post (6,313,649 samples, 0.14%)</title><rect x="2.3473%" y="405" width="0.1381%" height="15" fill="rgb(249,139,47)" fg:x="107298064" fg:w="6313649"/><text x="2.5973%" y="415.50"></text></g><g><title>regex_syntax::hir::translate::TranslatorI::hir_perl_unicode_class (4,214,121 samples, 0.09%)</title><rect x="2.3933%" y="389" width="0.0922%" height="15" fill="rgb(244,64,35)" fg:x="109397592" fg:w="4214121"/><text x="2.6433%" y="399.50"></text></g><g><title>regex_syntax::unicode::perl_digit (4,214,121 samples, 0.09%)</title><rect x="2.3933%" y="373" width="0.0922%" height="15" fill="rgb(216,46,15)" fg:x="109397592" fg:w="4214121"/><text x="2.6433%" y="383.50"></text></g><g><title>regex_syntax::unicode::perl_digit::imp (4,214,121 samples, 0.09%)</title><rect x="2.3933%" y="357" width="0.0922%" height="15" fill="rgb(250,74,19)" fg:x="109397592" fg:w="4214121"/><text x="2.6433%" y="367.50"></text></g><g><title>regex_syntax::unicode::hir_class (4,214,121 samples, 0.09%)</title><rect x="2.3933%" y="341" width="0.0922%" height="15" fill="rgb(249,42,33)" fg:x="109397592" fg:w="4214121"/><text x="2.6433%" y="351.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::new (4,214,121 samples, 0.09%)</title><rect x="2.3933%" y="325" width="0.0922%" height="15" fill="rgb(242,149,17)" fg:x="109397592" fg:w="4214121"/><text x="2.6433%" y="335.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::new (4,214,121 samples, 0.09%)</title><rect x="2.3933%" y="309" width="0.0922%" height="15" fill="rgb(244,29,21)" fg:x="109397592" fg:w="4214121"/><text x="2.6433%" y="319.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::canonicalize (1,974,736 samples, 0.04%)</title><rect x="2.4423%" y="293" width="0.0432%" height="15" fill="rgb(220,130,37)" fg:x="111636977" fg:w="1974736"/><text x="2.6923%" y="303.50"></text></g><g><title>regex_syntax::hir::interval::IntervalSet&lt;I&gt;::is_canonical (1,974,736 samples, 0.04%)</title><rect x="2.4423%" y="277" width="0.0432%" height="15" fill="rgb(211,67,2)" fg:x="111636977" fg:w="1974736"/><text x="2.6923%" y="287.50"></text></g><g><title>regex_syntax::hir::interval::Interval::is_contiguous (1,974,736 samples, 0.04%)</title><rect x="2.4423%" y="261" width="0.0432%" height="15" fill="rgb(235,68,52)" fg:x="111636977" fg:w="1974736"/><text x="2.6923%" y="271.50"></text></g><g><title>core::cmp::max (1,974,736 samples, 0.04%)</title><rect x="2.4423%" y="245" width="0.0432%" height="15" fill="rgb(246,142,3)" fg:x="111636977" fg:w="1974736"/><text x="2.6923%" y="255.50"></text></g><g><title>core::cmp::Ord::max (1,974,736 samples, 0.04%)</title><rect x="2.4423%" y="229" width="0.0432%" height="15" fill="rgb(241,25,7)" fg:x="111636977" fg:w="1974736"/><text x="2.6923%" y="239.50"></text></g><g><title>core::cmp::max_by (1,974,736 samples, 0.04%)</title><rect x="2.4423%" y="213" width="0.0432%" height="15" fill="rgb(242,119,39)" fg:x="111636977" fg:w="1974736"/><text x="2.6923%" y="223.50"></text></g><g><title>XLang_Rust::build_code (42,778,230 samples, 0.94%)</title><rect x="1.5566%" y="597" width="0.9359%" height="15" fill="rgb(241,98,45)" fg:x="71152091" fg:w="42778230"/><text x="1.8066%" y="607.50"></text></g><g><title>XLang_Rust::parser::lexer::lexer::tokenize (42,778,230 samples, 0.94%)</title><rect x="1.5566%" y="581" width="0.9359%" height="15" fill="rgb(254,28,30)" fg:x="71152091" fg:w="42778230"/><text x="1.8066%" y="591.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMInstructions::new (2,343,394 samples, 0.05%)</title><rect x="2.4924%" y="581" width="0.0513%" height="15" fill="rgb(241,142,54)" fg:x="113930321" fg:w="2343394"/><text x="2.7424%" y="591.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (2,343,394 samples, 0.05%)</title><rect x="2.4924%" y="565" width="0.0513%" height="15" fill="rgb(222,85,15)" fg:x="113930321" fg:w="2343394"/><text x="2.7424%" y="575.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,179,738 samples, 0.05%)</title><rect x="4.0470%" y="549" width="0.0477%" height="15" fill="rgb(210,85,47)" fg:x="184990819" fg:w="2179738"/><text x="4.2970%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,179,738 samples, 0.05%)</title><rect x="4.0470%" y="533" width="0.0477%" height="15" fill="rgb(224,206,25)" fg:x="184990819" fg:w="2179738"/><text x="4.2970%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,179,738 samples, 0.05%)</title><rect x="4.0470%" y="517" width="0.0477%" height="15" fill="rgb(243,201,19)" fg:x="184990819" fg:w="2179738"/><text x="4.2970%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2,179,738 samples, 0.05%)</title><rect x="4.0470%" y="501" width="0.0477%" height="15" fill="rgb(236,59,4)" fg:x="184990819" fg:w="2179738"/><text x="4.2970%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,179,738 samples, 0.05%)</title><rect x="4.0470%" y="485" width="0.0477%" height="15" fill="rgb(254,179,45)" fg:x="184990819" fg:w="2179738"/><text x="4.2970%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,179,738 samples, 0.05%)</title><rect x="4.0470%" y="469" width="0.0477%" height="15" fill="rgb(226,14,10)" fg:x="184990819" fg:w="2179738"/><text x="4.2970%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,179,738 samples, 0.05%)</title><rect x="4.0470%" y="453" width="0.0477%" height="15" fill="rgb(244,27,41)" fg:x="184990819" fg:w="2179738"/><text x="4.2970%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,504,964 samples, 0.34%)</title><rect x="4.0947%" y="549" width="0.3392%" height="15" fill="rgb(235,35,32)" fg:x="187170557" fg:w="15504964"/><text x="4.3447%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (15,504,964 samples, 0.34%)</title><rect x="4.0947%" y="533" width="0.3392%" height="15" fill="rgb(218,68,31)" fg:x="187170557" fg:w="15504964"/><text x="4.3447%" y="543.50"></text></g><g><title>&lt;XLang_Rust::vm::ir::DebugInfo as core::clone::Clone&gt;::clone (2,828,059 samples, 0.06%)</title><rect x="9.9782%" y="517" width="0.0619%" height="15" fill="rgb(207,120,37)" fg:x="456107992" fg:w="2828059"/><text x="10.2282%" y="527.50"></text></g><g><title>malloc (24,745,005 samples, 0.54%)</title><rect x="10.2928%" y="501" width="0.5413%" height="15" fill="rgb(227,98,0)" fg:x="470490581" fg:w="24745005"/><text x="10.5428%" y="511.50"></text></g><g><title>&lt;XLang_Rust::vm::ir::IR as core::clone::Clone&gt;::clone (216,363,123 samples, 4.73%)</title><rect x="6.4090%" y="533" width="4.7333%" height="15" fill="rgb(207,7,3)" fg:x="292959900" fg:w="216363123"/><text x="6.6590%" y="543.50">&lt;XLang..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (50,386,972 samples, 1.10%)</title><rect x="10.0401%" y="517" width="1.1023%" height="15" fill="rgb(206,98,19)" fg:x="458936051" fg:w="50386972"/><text x="10.2901%" y="527.50"></text></g><g><title>memcpy (14,087,437 samples, 0.31%)</title><rect x="10.8342%" y="501" width="0.3082%" height="15" fill="rgb(217,5,26)" fg:x="495235586" fg:w="14087437"/><text x="11.0842%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5,627,143 samples, 0.12%)</title><rect x="11.1424%" y="533" width="0.1231%" height="15" fill="rgb(235,190,38)" fg:x="509323023" fg:w="5627143"/><text x="11.3924%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (5,627,143 samples, 0.12%)</title><rect x="11.1424%" y="517" width="0.1231%" height="15" fill="rgb(247,86,24)" fg:x="509323023" fg:w="5627143"/><text x="11.3924%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (5,627,143 samples, 0.12%)</title><rect x="11.1424%" y="501" width="0.1231%" height="15" fill="rgb(205,101,16)" fg:x="509323023" fg:w="5627143"/><text x="11.3924%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5,627,143 samples, 0.12%)</title><rect x="11.1424%" y="485" width="0.1231%" height="15" fill="rgb(246,168,33)" fg:x="509323023" fg:w="5627143"/><text x="11.3924%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (5,627,143 samples, 0.12%)</title><rect x="11.1424%" y="469" width="0.1231%" height="15" fill="rgb(231,114,1)" fg:x="509323023" fg:w="5627143"/><text x="11.3924%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (5,627,143 samples, 0.12%)</title><rect x="11.1424%" y="453" width="0.1231%" height="15" fill="rgb(207,184,53)" fg:x="509323023" fg:w="5627143"/><text x="11.3924%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,901,821 samples, 0.06%)</title><rect x="11.2655%" y="533" width="0.0635%" height="15" fill="rgb(224,95,51)" fg:x="514950166" fg:w="2901821"/><text x="11.5155%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2,901,821 samples, 0.06%)</title><rect x="11.2655%" y="517" width="0.0635%" height="15" fill="rgb(212,188,45)" fg:x="514950166" fg:w="2901821"/><text x="11.5155%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,901,821 samples, 0.06%)</title><rect x="11.2655%" y="501" width="0.0635%" height="15" fill="rgb(223,154,38)" fg:x="514950166" fg:w="2901821"/><text x="11.5155%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2,901,821 samples, 0.06%)</title><rect x="11.2655%" y="485" width="0.0635%" height="15" fill="rgb(251,22,52)" fg:x="514950166" fg:w="2901821"/><text x="11.5155%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,901,821 samples, 0.06%)</title><rect x="11.2655%" y="469" width="0.0635%" height="15" fill="rgb(229,209,22)" fg:x="514950166" fg:w="2901821"/><text x="11.5155%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,901,821 samples, 0.06%)</title><rect x="11.2655%" y="453" width="0.0635%" height="15" fill="rgb(234,138,34)" fg:x="514950166" fg:w="2901821"/><text x="11.5155%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,901,821 samples, 0.06%)</title><rect x="11.2655%" y="437" width="0.0635%" height="15" fill="rgb(212,95,11)" fg:x="514950166" fg:w="2901821"/><text x="11.5155%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21,971,466 samples, 0.48%)</title><rect x="11.3290%" y="533" width="0.4807%" height="15" fill="rgb(240,179,47)" fg:x="517851987" fg:w="21971466"/><text x="11.5790%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11,045,559 samples, 0.24%)</title><rect x="14.8226%" y="517" width="0.2416%" height="15" fill="rgb(240,163,11)" fg:x="677547171" fg:w="11045559"/><text x="15.0726%" y="527.50"></text></g><g><title>malloc (5,256,779 samples, 0.12%)</title><rect x="14.9492%" y="501" width="0.1150%" height="15" fill="rgb(236,37,12)" fg:x="683335951" fg:w="5256779"/><text x="15.1992%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2,315,158 samples, 0.05%)</title><rect x="15.0642%" y="517" width="0.0506%" height="15" fill="rgb(232,164,16)" fg:x="688592730" fg:w="2315158"/><text x="15.3142%" y="527.50"></text></g><g><title>alloc::string::String::as_str (2,315,158 samples, 0.05%)</title><rect x="15.0642%" y="501" width="0.0506%" height="15" fill="rgb(244,205,15)" fg:x="688592730" fg:w="2315158"/><text x="15.3142%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (2,315,158 samples, 0.05%)</title><rect x="15.0642%" y="485" width="0.0506%" height="15" fill="rgb(223,117,47)" fg:x="688592730" fg:w="2315158"/><text x="15.3142%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2,315,158 samples, 0.05%)</title><rect x="15.0642%" y="469" width="0.0506%" height="15" fill="rgb(244,107,35)" fg:x="688592730" fg:w="2315158"/><text x="15.3142%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,315,158 samples, 0.05%)</title><rect x="15.0642%" y="453" width="0.0506%" height="15" fill="rgb(205,140,8)" fg:x="688592730" fg:w="2315158"/><text x="15.3142%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,315,158 samples, 0.05%)</title><rect x="15.0642%" y="437" width="0.0506%" height="15" fill="rgb(228,84,46)" fg:x="688592730" fg:w="2315158"/><text x="15.3142%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,315,158 samples, 0.05%)</title><rect x="15.0642%" y="421" width="0.0506%" height="15" fill="rgb(254,188,9)" fg:x="688592730" fg:w="2315158"/><text x="15.3142%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5,304,769 samples, 0.12%)</title><rect x="15.1149%" y="517" width="0.1161%" height="15" fill="rgb(206,112,54)" fg:x="690907888" fg:w="5304769"/><text x="15.3649%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (5,304,769 samples, 0.12%)</title><rect x="15.1149%" y="501" width="0.1161%" height="15" fill="rgb(216,84,49)" fg:x="690907888" fg:w="5304769"/><text x="15.3649%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5,099,527 samples, 0.11%)</title><rect x="15.2309%" y="517" width="0.1116%" height="15" fill="rgb(214,194,35)" fg:x="696212657" fg:w="5099527"/><text x="15.4809%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34,283,861 samples, 0.75%)</title><rect x="15.4654%" y="501" width="0.7500%" height="15" fill="rgb(249,28,3)" fg:x="706932538" fg:w="34283861"/><text x="15.7154%" y="511.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (34,283,861 samples, 0.75%)</title><rect x="15.4654%" y="485" width="0.7500%" height="15" fill="rgb(222,56,52)" fg:x="706932538" fg:w="34283861"/><text x="15.7154%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::clone_ref (8,540,816 samples, 0.19%)</title><rect x="16.2155%" y="501" width="0.1868%" height="15" fill="rgb(245,217,50)" fg:x="741216399" fg:w="8540816"/><text x="16.4655%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::is_online (5,644,467 samples, 0.12%)</title><rect x="16.2788%" y="485" width="0.1235%" height="15" fill="rgb(213,201,24)" fg:x="744112748" fg:w="5644467"/><text x="16.5288%" y="495.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMVariableWrapper as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (2,800,615 samples, 0.06%)</title><rect x="16.3410%" y="469" width="0.0613%" height="15" fill="rgb(248,116,28)" fg:x="746956600" fg:w="2800615"/><text x="16.5910%" y="479.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4,402,828 samples, 0.10%)</title><rect x="16.8598%" y="421" width="0.0963%" height="15" fill="rgb(219,72,43)" fg:x="770668181" fg:w="4402828"/><text x="17.1098%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4,402,828 samples, 0.10%)</title><rect x="16.8598%" y="405" width="0.0963%" height="15" fill="rgb(209,138,14)" fg:x="770668181" fg:w="4402828"/><text x="17.1098%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4,402,828 samples, 0.10%)</title><rect x="16.8598%" y="389" width="0.0963%" height="15" fill="rgb(222,18,33)" fg:x="770668181" fg:w="4402828"/><text x="17.1098%" y="399.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (7,749,122 samples, 0.17%)</title><rect x="16.9561%" y="421" width="0.1695%" height="15" fill="rgb(213,199,7)" fg:x="775071009" fg:w="7749122"/><text x="17.2061%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (7,749,122 samples, 0.17%)</title><rect x="16.9561%" y="405" width="0.1695%" height="15" fill="rgb(250,110,10)" fg:x="775071009" fg:w="7749122"/><text x="17.2061%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7,749,122 samples, 0.17%)</title><rect x="16.9561%" y="389" width="0.1695%" height="15" fill="rgb(248,123,6)" fg:x="775071009" fg:w="7749122"/><text x="17.2061%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (7,749,122 samples, 0.17%)</title><rect x="16.9561%" y="373" width="0.1695%" height="15" fill="rgb(206,91,31)" fg:x="775071009" fg:w="7749122"/><text x="17.2061%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (21,887,150 samples, 0.48%)</title><rect x="17.1887%" y="341" width="0.4788%" height="15" fill="rgb(211,154,13)" fg:x="785705055" fg:w="21887150"/><text x="17.4387%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (16,196,218 samples, 0.35%)</title><rect x="17.3132%" y="325" width="0.3543%" height="15" fill="rgb(225,148,7)" fg:x="791395987" fg:w="16196218"/><text x="17.5632%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (87,675,148 samples, 1.92%)</title><rect x="16.6839%" y="453" width="1.9181%" height="15" fill="rgb(220,160,43)" fg:x="762630605" fg:w="87675148"/><text x="16.9339%" y="463.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (87,675,148 samples, 1.92%)</title><rect x="16.6839%" y="437" width="1.9181%" height="15" fill="rgb(213,52,39)" fg:x="762630605" fg:w="87675148"/><text x="16.9339%" y="447.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (67,485,622 samples, 1.48%)</title><rect x="17.1256%" y="421" width="1.4764%" height="15" fill="rgb(243,137,7)" fg:x="782820131" fg:w="67485622"/><text x="17.3756%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (67,485,622 samples, 1.48%)</title><rect x="17.1256%" y="405" width="1.4764%" height="15" fill="rgb(230,79,13)" fg:x="782820131" fg:w="67485622"/><text x="17.3756%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (67,485,622 samples, 1.48%)</title><rect x="17.1256%" y="389" width="1.4764%" height="15" fill="rgb(247,105,23)" fg:x="782820131" fg:w="67485622"/><text x="17.3756%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (67,485,622 samples, 1.48%)</title><rect x="17.1256%" y="373" width="1.4764%" height="15" fill="rgb(223,179,41)" fg:x="782820131" fg:w="67485622"/><text x="17.3756%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (67,485,622 samples, 1.48%)</title><rect x="17.1256%" y="357" width="1.4764%" height="15" fill="rgb(218,9,34)" fg:x="782820131" fg:w="67485622"/><text x="17.3756%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (42,713,548 samples, 0.93%)</title><rect x="17.6676%" y="341" width="0.9344%" height="15" fill="rgb(222,106,8)" fg:x="807592205" fg:w="42713548"/><text x="17.9176%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37,137,388 samples, 0.81%)</title><rect x="17.7896%" y="325" width="0.8124%" height="15" fill="rgb(211,220,0)" fg:x="813168365" fg:w="37137388"/><text x="18.0396%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (7,874,358 samples, 0.17%)</title><rect x="18.4297%" y="309" width="0.1723%" height="15" fill="rgb(229,52,16)" fg:x="842431395" fg:w="7874358"/><text x="18.6797%" y="319.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5,441,939 samples, 0.12%)</title><rect x="18.6020%" y="405" width="0.1191%" height="15" fill="rgb(212,155,18)" fg:x="850305753" fg:w="5441939"/><text x="18.8520%" y="415.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (5,441,939 samples, 0.12%)</title><rect x="18.6020%" y="389" width="0.1191%" height="15" fill="rgb(242,21,14)" fg:x="850305753" fg:w="5441939"/><text x="18.8520%" y="399.50"></text></g><g><title>core::intrinsics::likely (23,238,802 samples, 0.51%)</title><rect x="18.7211%" y="405" width="0.5084%" height="15" fill="rgb(222,19,48)" fg:x="855747692" fg:w="23238802"/><text x="18.9711%" y="415.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (99,481,699 samples, 2.18%)</title><rect x="19.2294%" y="405" width="2.1763%" height="15" fill="rgb(232,45,27)" fg:x="878986494" fg:w="99481699"/><text x="19.4794%" y="415.50">h..</text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (99,481,699 samples, 2.18%)</title><rect x="19.2294%" y="389" width="2.1763%" height="15" fill="rgb(249,103,42)" fg:x="878986494" fg:w="99481699"/><text x="19.4794%" y="399.50">c..</text></g><g><title>hashbrown::control::tag::Tag::full (5,252,127 samples, 0.11%)</title><rect x="21.4058%" y="405" width="0.1149%" height="15" fill="rgb(246,81,33)" fg:x="978468193" fg:w="5252127"/><text x="21.6558%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (21,173,690 samples, 0.46%)</title><rect x="21.5207%" y="405" width="0.4632%" height="15" fill="rgb(252,33,42)" fg:x="983720320" fg:w="21173690"/><text x="21.7707%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (21,173,690 samples, 0.46%)</title><rect x="21.5207%" y="389" width="0.4632%" height="15" fill="rgb(209,212,41)" fg:x="983720320" fg:w="21173690"/><text x="21.7707%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (21,173,690 samples, 0.46%)</title><rect x="21.5207%" y="373" width="0.4632%" height="15" fill="rgb(207,154,6)" fg:x="983720320" fg:w="21173690"/><text x="21.7707%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18,274,602 samples, 0.40%)</title><rect x="21.5841%" y="357" width="0.3998%" height="15" fill="rgb(223,64,47)" fg:x="986619408" fg:w="18274602"/><text x="21.8341%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (18,274,602 samples, 0.40%)</title><rect x="21.5841%" y="341" width="0.3998%" height="15" fill="rgb(211,161,38)" fg:x="986619408" fg:w="18274602"/><text x="21.8341%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (18,274,602 samples, 0.40%)</title><rect x="21.5841%" y="325" width="0.3998%" height="15" fill="rgb(219,138,40)" fg:x="986619408" fg:w="18274602"/><text x="21.8341%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (18,274,602 samples, 0.40%)</title><rect x="21.5841%" y="309" width="0.3998%" height="15" fill="rgb(241,228,46)" fg:x="986619408" fg:w="18274602"/><text x="21.8341%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18,274,602 samples, 0.40%)</title><rect x="21.5841%" y="293" width="0.3998%" height="15" fill="rgb(223,209,38)" fg:x="986619408" fg:w="18274602"/><text x="21.8341%" y="303.50"></text></g><g><title>memcmp (4,922,484 samples, 0.11%)</title><rect x="21.8762%" y="277" width="0.1077%" height="15" fill="rgb(236,164,45)" fg:x="999971526" fg:w="4922484"/><text x="22.1262%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (168,072,285 samples, 3.68%)</title><rect x="18.6020%" y="453" width="3.6769%" height="15" fill="rgb(231,15,5)" fg:x="850305753" fg:w="168072285"/><text x="18.8520%" y="463.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (168,072,285 samples, 3.68%)</title><rect x="18.6020%" y="437" width="3.6769%" height="15" fill="rgb(252,35,15)" fg:x="850305753" fg:w="168072285"/><text x="18.8520%" y="447.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::find_inner (168,072,285 samples, 3.68%)</title><rect x="18.6020%" y="421" width="3.6769%" height="15" fill="rgb(248,181,18)" fg:x="850305753" fg:w="168072285"/><text x="18.8520%" y="431.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (13,484,028 samples, 0.29%)</title><rect x="21.9839%" y="405" width="0.2950%" height="15" fill="rgb(233,39,42)" fg:x="1004894010" fg:w="13484028"/><text x="22.2339%" y="415.50"></text></g><g><title>XLang_Rust::vm::executor::context::Context::get_var (319,826,795 samples, 7.00%)</title><rect x="15.3425%" y="517" width="6.9968%" height="15" fill="rgb(238,110,33)" fg:x="701312184" fg:w="319826795"/><text x="15.5925%" y="527.50">XLang_Rus..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (271,381,764 samples, 5.94%)</title><rect x="16.4023%" y="501" width="5.9370%" height="15" fill="rgb(233,195,10)" fg:x="749757215" fg:w="271381764"/><text x="16.6523%" y="511.50">std::col..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (271,381,764 samples, 5.94%)</title><rect x="16.4023%" y="485" width="5.9370%" height="15" fill="rgb(254,105,3)" fg:x="749757215" fg:w="271381764"/><text x="16.6523%" y="495.50">hashbrow..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (271,381,764 samples, 5.94%)</title><rect x="16.4023%" y="469" width="5.9370%" height="15" fill="rgb(221,225,9)" fg:x="749757215" fg:w="271381764"/><text x="16.6523%" y="479.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (2,760,941 samples, 0.06%)</title><rect x="22.2789%" y="453" width="0.0604%" height="15" fill="rgb(224,227,45)" fg:x="1018378038" fg:w="2760941"/><text x="22.5289%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (2,760,941 samples, 0.06%)</title><rect x="22.2789%" y="437" width="0.0604%" height="15" fill="rgb(229,198,43)" fg:x="1018378038" fg:w="2760941"/><text x="22.5289%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2,827,927 samples, 0.06%)</title><rect x="22.3393%" y="485" width="0.0619%" height="15" fill="rgb(206,209,35)" fg:x="1021138979" fg:w="2827927"/><text x="22.5893%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (2,827,927 samples, 0.06%)</title><rect x="22.3393%" y="469" width="0.0619%" height="15" fill="rgb(245,195,53)" fg:x="1021138979" fg:w="2827927"/><text x="22.5893%" y="479.50"></text></g><g><title>XLang_Rust::vm::executor::context::Context::new_frame (7,771,596 samples, 0.17%)</title><rect x="22.3393%" y="517" width="0.1700%" height="15" fill="rgb(240,92,26)" fg:x="1021138979" fg:w="7771596"/><text x="22.5893%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7,771,596 samples, 0.17%)</title><rect x="22.3393%" y="501" width="0.1700%" height="15" fill="rgb(207,40,23)" fg:x="1021138979" fg:w="7771596"/><text x="22.5893%" y="511.50"></text></g><g><title>core::ptr::write (4,943,669 samples, 0.11%)</title><rect x="22.4012%" y="485" width="0.1082%" height="15" fill="rgb(223,111,35)" fg:x="1023966906" fg:w="4943669"/><text x="22.6512%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (2,764,092 samples, 0.06%)</title><rect x="22.6334%" y="501" width="0.0605%" height="15" fill="rgb(229,147,28)" fg:x="1034583029" fg:w="2764092"/><text x="22.8834%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,567,343 samples, 0.06%)</title><rect x="22.8588%" y="437" width="0.0562%" height="15" fill="rgb(211,29,28)" fg:x="1044884786" fg:w="2567343"/><text x="23.1088%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,567,343 samples, 0.06%)</title><rect x="22.8588%" y="421" width="0.0562%" height="15" fill="rgb(228,72,33)" fg:x="1044884786" fg:w="2567343"/><text x="23.1088%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,567,343 samples, 0.06%)</title><rect x="22.8588%" y="405" width="0.0562%" height="15" fill="rgb(205,214,31)" fg:x="1044884786" fg:w="2567343"/><text x="23.1088%" y="415.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,567,343 samples, 0.06%)</title><rect x="22.8588%" y="389" width="0.0562%" height="15" fill="rgb(224,111,15)" fg:x="1044884786" fg:w="2567343"/><text x="23.1088%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,567,343 samples, 0.06%)</title><rect x="22.8588%" y="373" width="0.0562%" height="15" fill="rgb(253,21,26)" fg:x="1044884786" fg:w="2567343"/><text x="23.1088%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12,937,222 samples, 0.28%)</title><rect x="22.6939%" y="501" width="0.2830%" height="15" fill="rgb(245,139,43)" fg:x="1037347121" fg:w="12937222"/><text x="22.9439%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12,937,222 samples, 0.28%)</title><rect x="22.6939%" y="485" width="0.2830%" height="15" fill="rgb(252,170,7)" fg:x="1037347121" fg:w="12937222"/><text x="22.9439%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12,937,222 samples, 0.28%)</title><rect x="22.6939%" y="469" width="0.2830%" height="15" fill="rgb(231,118,14)" fg:x="1037347121" fg:w="12937222"/><text x="22.9439%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5,399,557 samples, 0.12%)</title><rect x="22.8588%" y="453" width="0.1181%" height="15" fill="rgb(238,83,0)" fg:x="1044884786" fg:w="5399557"/><text x="23.1088%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,832,214 samples, 0.06%)</title><rect x="22.9149%" y="437" width="0.0620%" height="15" fill="rgb(221,39,39)" fg:x="1047452129" fg:w="2832214"/><text x="23.1649%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,832,214 samples, 0.06%)</title><rect x="22.9149%" y="421" width="0.0620%" height="15" fill="rgb(222,119,46)" fg:x="1047452129" fg:w="2832214"/><text x="23.1649%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,832,214 samples, 0.06%)</title><rect x="22.9149%" y="405" width="0.0620%" height="15" fill="rgb(222,165,49)" fg:x="1047452129" fg:w="2832214"/><text x="23.1649%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,832,214 samples, 0.06%)</title><rect x="22.9149%" y="389" width="0.0620%" height="15" fill="rgb(219,113,52)" fg:x="1047452129" fg:w="2832214"/><text x="23.1649%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,832,214 samples, 0.06%)</title><rect x="22.9149%" y="373" width="0.0620%" height="15" fill="rgb(214,7,15)" fg:x="1047452129" fg:w="2832214"/><text x="23.1649%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,413,426 samples, 0.12%)</title><rect x="22.9769%" y="501" width="0.1184%" height="15" fill="rgb(235,32,4)" fg:x="1050284343" fg:w="5413426"/><text x="23.2269%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,413,426 samples, 0.12%)</title><rect x="22.9769%" y="485" width="0.1184%" height="15" fill="rgb(238,90,54)" fg:x="1050284343" fg:w="5413426"/><text x="23.2269%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,413,426 samples, 0.12%)</title><rect x="22.9769%" y="469" width="0.1184%" height="15" fill="rgb(213,208,19)" fg:x="1050284343" fg:w="5413426"/><text x="23.2269%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,896,305 samples, 0.06%)</title><rect x="23.0320%" y="453" width="0.0634%" height="15" fill="rgb(233,156,4)" fg:x="1052801464" fg:w="2896305"/><text x="23.2820%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,896,305 samples, 0.06%)</title><rect x="23.0320%" y="437" width="0.0634%" height="15" fill="rgb(207,194,5)" fg:x="1052801464" fg:w="2896305"/><text x="23.2820%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (2,896,305 samples, 0.06%)</title><rect x="23.0320%" y="421" width="0.0634%" height="15" fill="rgb(206,111,30)" fg:x="1052801464" fg:w="2896305"/><text x="23.2820%" y="431.50"></text></g><g><title>cfree (2,896,305 samples, 0.06%)</title><rect x="23.0320%" y="405" width="0.0634%" height="15" fill="rgb(243,70,54)" fg:x="1052801464" fg:w="2896305"/><text x="23.2820%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,797,669 samples, 0.13%)</title><rect x="23.0953%" y="373" width="0.1268%" height="15" fill="rgb(242,28,8)" fg:x="1055697769" fg:w="5797669"/><text x="23.3453%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (5,797,669 samples, 0.13%)</title><rect x="23.0953%" y="357" width="0.1268%" height="15" fill="rgb(219,106,18)" fg:x="1055697769" fg:w="5797669"/><text x="23.3453%" y="367.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5,797,669 samples, 0.13%)</title><rect x="23.0953%" y="341" width="0.1268%" height="15" fill="rgb(244,222,10)" fg:x="1055697769" fg:w="5797669"/><text x="23.3453%" y="351.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (5,797,669 samples, 0.13%)</title><rect x="23.0953%" y="325" width="0.1268%" height="15" fill="rgb(236,179,52)" fg:x="1055697769" fg:w="5797669"/><text x="23.3453%" y="335.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (5,797,669 samples, 0.13%)</title><rect x="23.0953%" y="309" width="0.1268%" height="15" fill="rgb(213,23,39)" fg:x="1055697769" fg:w="5797669"/><text x="23.3453%" y="319.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (5,797,669 samples, 0.13%)</title><rect x="23.0953%" y="293" width="0.1268%" height="15" fill="rgb(238,48,10)" fg:x="1055697769" fg:w="5797669"/><text x="23.3453%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,247,466 samples, 0.11%)</title><rect x="23.2222%" y="245" width="0.1148%" height="15" fill="rgb(251,196,23)" fg:x="1061495438" fg:w="5247466"/><text x="23.4722%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (5,247,466 samples, 0.11%)</title><rect x="23.2222%" y="229" width="0.1148%" height="15" fill="rgb(250,152,24)" fg:x="1061495438" fg:w="5247466"/><text x="23.4722%" y="239.50"></text></g><g><title>cfree (5,247,466 samples, 0.11%)</title><rect x="23.2222%" y="213" width="0.1148%" height="15" fill="rgb(209,150,17)" fg:x="1061495438" fg:w="5247466"/><text x="23.4722%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (13,901,271 samples, 0.30%)</title><rect x="23.0953%" y="389" width="0.3041%" height="15" fill="rgb(234,202,34)" fg:x="1055697769" fg:w="13901271"/><text x="23.3453%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="373" width="0.1773%" height="15" fill="rgb(253,148,53)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="357" width="0.1773%" height="15" fill="rgb(218,129,16)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,XLang_Rust::vm::gc::gc::GCRef)&gt; (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="341" width="0.1773%" height="15" fill="rgb(216,85,19)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="325" width="0.1773%" height="15" fill="rgb(235,228,7)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="309" width="0.1773%" height="15" fill="rgb(245,175,0)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="293" width="0.1773%" height="15" fill="rgb(208,168,36)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="277" width="0.1773%" height="15" fill="rgb(246,171,24)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (8,103,602 samples, 0.18%)</title><rect x="23.2222%" y="261" width="0.1773%" height="15" fill="rgb(215,142,24)" fg:x="1061495438" fg:w="8103602"/><text x="23.4722%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (2,856,136 samples, 0.06%)</title><rect x="23.3370%" y="245" width="0.0625%" height="15" fill="rgb(250,187,7)" fg:x="1066742904" fg:w="2856136"/><text x="23.5870%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,735,005 samples, 0.13%)</title><rect x="23.3994%" y="373" width="0.1255%" height="15" fill="rgb(228,66,33)" fg:x="1069599040" fg:w="5735005"/><text x="23.6494%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (5,735,005 samples, 0.13%)</title><rect x="23.3994%" y="357" width="0.1255%" height="15" fill="rgb(234,215,21)" fg:x="1069599040" fg:w="5735005"/><text x="23.6494%" y="367.50"></text></g><g><title>cfree (5,735,005 samples, 0.13%)</title><rect x="23.3994%" y="341" width="0.1255%" height="15" fill="rgb(222,191,20)" fg:x="1069599040" fg:w="5735005"/><text x="23.6494%" y="351.50"></text></g><g><title>[libc.so.6] (2,906,135 samples, 0.06%)</title><rect x="23.4613%" y="325" width="0.0636%" height="15" fill="rgb(245,79,54)" fg:x="1072427910" fg:w="2906135"/><text x="23.7113%" y="335.50"></text></g><g><title>[libc.so.6] (2,906,135 samples, 0.06%)</title><rect x="23.4613%" y="309" width="0.0636%" height="15" fill="rgb(240,10,37)" fg:x="1072427910" fg:w="2906135"/><text x="23.7113%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(std::collections::hash::map::HashMap&lt;alloc::string::String,XLang_Rust::vm::gc::gc::GCRef&gt;,bool,usize,bool)&gt;&gt; (22,454,403 samples, 0.49%)</title><rect x="23.0953%" y="501" width="0.4912%" height="15" fill="rgb(214,192,32)" fg:x="1055697769" fg:w="22454403"/><text x="23.3453%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(std::collections::hash::map::HashMap&lt;alloc::string::String,XLang_Rust::vm::gc::gc::GCRef&gt;,bool,usize,bool)&gt; (22,454,403 samples, 0.49%)</title><rect x="23.0953%" y="485" width="0.4912%" height="15" fill="rgb(209,36,54)" fg:x="1055697769" fg:w="22454403"/><text x="23.3453%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (22,454,403 samples, 0.49%)</title><rect x="23.0953%" y="469" width="0.4912%" height="15" fill="rgb(220,10,11)" fg:x="1055697769" fg:w="22454403"/><text x="23.3453%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,XLang_Rust::vm::gc::gc::GCRef,std::hash::random::RandomState&gt;&gt; (22,454,403 samples, 0.49%)</title><rect x="23.0953%" y="453" width="0.4912%" height="15" fill="rgb(221,106,17)" fg:x="1055697769" fg:w="22454403"/><text x="23.3453%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,XLang_Rust::vm::gc::gc::GCRef)&gt;&gt; (22,454,403 samples, 0.49%)</title><rect x="23.0953%" y="437" width="0.4912%" height="15" fill="rgb(251,142,44)" fg:x="1055697769" fg:w="22454403"/><text x="23.3453%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,454,403 samples, 0.49%)</title><rect x="23.0953%" y="421" width="0.4912%" height="15" fill="rgb(238,13,15)" fg:x="1055697769" fg:w="22454403"/><text x="23.3453%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (22,454,403 samples, 0.49%)</title><rect x="23.0953%" y="405" width="0.4912%" height="15" fill="rgb(208,107,27)" fg:x="1055697769" fg:w="22454403"/><text x="23.3453%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (8,553,132 samples, 0.19%)</title><rect x="23.3994%" y="389" width="0.1871%" height="15" fill="rgb(205,136,37)" fg:x="1069599040" fg:w="8553132"/><text x="23.6494%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::allocation_info (2,818,127 samples, 0.06%)</title><rect x="23.5249%" y="373" width="0.0617%" height="15" fill="rgb(250,205,27)" fg:x="1075334045" fg:w="2818127"/><text x="23.7749%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2,818,127 samples, 0.06%)</title><rect x="23.5249%" y="357" width="0.0617%" height="15" fill="rgb(210,80,43)" fg:x="1075334045" fg:w="2818127"/><text x="23.7749%" y="367.50"></text></g><g><title>XLang_Rust::vm::executor::context::Context::pop_frame (52,119,225 samples, 1.14%)</title><rect x="22.5093%" y="517" width="1.1402%" height="15" fill="rgb(247,160,36)" fg:x="1028910575" fg:w="52119225"/><text x="22.7593%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (2,877,628 samples, 0.06%)</title><rect x="23.5866%" y="501" width="0.0630%" height="15" fill="rgb(234,13,49)" fg:x="1078152172" fg:w="2877628"/><text x="23.8366%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (2,877,628 samples, 0.06%)</title><rect x="23.5866%" y="485" width="0.0630%" height="15" fill="rgb(234,122,0)" fg:x="1078152172" fg:w="2877628"/><text x="23.8366%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2,877,628 samples, 0.06%)</title><rect x="23.5866%" y="469" width="0.0630%" height="15" fill="rgb(207,146,38)" fg:x="1078152172" fg:w="2877628"/><text x="23.8366%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2,877,628 samples, 0.06%)</title><rect x="23.5866%" y="453" width="0.0630%" height="15" fill="rgb(207,177,25)" fg:x="1078152172" fg:w="2877628"/><text x="23.8366%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,877,628 samples, 0.06%)</title><rect x="23.5866%" y="437" width="0.0630%" height="15" fill="rgb(211,178,42)" fg:x="1078152172" fg:w="2877628"/><text x="23.8366%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2,877,628 samples, 0.06%)</title><rect x="23.5866%" y="421" width="0.0630%" height="15" fill="rgb(230,69,54)" fg:x="1078152172" fg:w="2877628"/><text x="23.8366%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2,877,628 samples, 0.06%)</title><rect x="23.5866%" y="405" width="0.0630%" height="15" fill="rgb(214,135,41)" fg:x="1078152172" fg:w="2877628"/><text x="23.8366%" y="415.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMBoolean::new (19,363,218 samples, 0.42%)</title><rect x="23.6495%" y="517" width="0.4236%" height="15" fill="rgb(237,67,25)" fg:x="1081029800" fg:w="19363218"/><text x="23.8995%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (19,363,218 samples, 0.42%)</title><rect x="23.6495%" y="501" width="0.4236%" height="15" fill="rgb(222,189,50)" fg:x="1081029800" fg:w="19363218"/><text x="23.8995%" y="511.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMInt::new (28,218,902 samples, 0.62%)</title><rect x="24.0731%" y="517" width="0.6173%" height="15" fill="rgb(245,148,34)" fg:x="1100393018" fg:w="28218902"/><text x="24.3231%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (28,218,902 samples, 0.62%)</title><rect x="24.0731%" y="501" width="0.6173%" height="15" fill="rgb(222,29,6)" fg:x="1100393018" fg:w="28218902"/><text x="24.3231%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="485" width="0.0630%" height="15" fill="rgb(221,189,43)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="469" width="0.0630%" height="15" fill="rgb(207,36,27)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="479.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="453" width="0.0630%" height="15" fill="rgb(217,90,24)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="463.50"></text></g><g><title>std::hash::random::RandomState::new (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="437" width="0.0630%" height="15" fill="rgb(224,66,35)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="421" width="0.0630%" height="15" fill="rgb(221,13,50)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="405" width="0.0630%" height="15" fill="rgb(236,68,49)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="415.50"></text></g><g><title>std::hash::random::RandomState::new::_{{closure}} (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="389" width="0.0630%" height="15" fill="rgb(229,146,28)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="373" width="0.0630%" height="15" fill="rgb(225,31,38)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="357" width="0.0630%" height="15" fill="rgb(250,208,3)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="367.50"></text></g><g><title>core::mem::replace (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="341" width="0.0630%" height="15" fill="rgb(246,54,23)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="351.50"></text></g><g><title>core::ptr::write (2,877,689 samples, 0.06%)</title><rect x="24.6275%" y="325" width="0.0630%" height="15" fill="rgb(243,76,11)" fg:x="1125734231" fg:w="2877689"/><text x="24.8775%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (2,550,064 samples, 0.06%)</title><rect x="24.8799%" y="453" width="0.0558%" height="15" fill="rgb(245,21,50)" fg:x="1137271112" fg:w="2550064"/><text x="25.1299%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,550,064 samples, 0.06%)</title><rect x="24.8799%" y="437" width="0.0558%" height="15" fill="rgb(228,9,43)" fg:x="1137271112" fg:w="2550064"/><text x="25.1299%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,550,064 samples, 0.06%)</title><rect x="24.8799%" y="421" width="0.0558%" height="15" fill="rgb(208,100,47)" fg:x="1137271112" fg:w="2550064"/><text x="25.1299%" y="431.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (2,550,064 samples, 0.06%)</title><rect x="24.8799%" y="405" width="0.0558%" height="15" fill="rgb(232,26,8)" fg:x="1137271112" fg:w="2550064"/><text x="25.1299%" y="415.50"></text></g><g><title>core::intrinsics::likely (2,045,145 samples, 0.04%)</title><rect x="24.9357%" y="421" width="0.0447%" height="15" fill="rgb(216,166,38)" fg:x="1139821176" fg:w="2045145"/><text x="25.1857%" y="431.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::add_reference (13,336,645 samples, 0.29%)</title><rect x="24.8159%" y="501" width="0.2918%" height="15" fill="rgb(251,202,51)" fg:x="1134345315" fg:w="13336645"/><text x="25.0659%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10,410,848 samples, 0.23%)</title><rect x="24.8799%" y="485" width="0.2278%" height="15" fill="rgb(254,216,34)" fg:x="1137271112" fg:w="10410848"/><text x="25.1299%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10,410,848 samples, 0.23%)</title><rect x="24.8799%" y="469" width="0.2278%" height="15" fill="rgb(251,32,27)" fg:x="1137271112" fg:w="10410848"/><text x="25.1299%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7,860,784 samples, 0.17%)</title><rect x="24.9357%" y="453" width="0.1720%" height="15" fill="rgb(208,127,28)" fg:x="1139821176" fg:w="7860784"/><text x="25.1857%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7,860,784 samples, 0.17%)</title><rect x="24.9357%" y="437" width="0.1720%" height="15" fill="rgb(224,137,22)" fg:x="1139821176" fg:w="7860784"/><text x="25.1857%" y="447.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (5,815,639 samples, 0.13%)</title><rect x="24.9804%" y="421" width="0.1272%" height="15" fill="rgb(254,70,32)" fg:x="1141866321" fg:w="5815639"/><text x="25.2304%" y="431.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (5,815,639 samples, 0.13%)</title><rect x="24.9804%" y="405" width="0.1272%" height="15" fill="rgb(229,75,37)" fg:x="1141866321" fg:w="5815639"/><text x="25.2304%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (5,819,675 samples, 0.13%)</title><rect x="25.1076%" y="437" width="0.1273%" height="15" fill="rgb(252,64,23)" fg:x="1147681960" fg:w="5819675"/><text x="25.3576%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,819,675 samples, 0.13%)</title><rect x="25.1076%" y="421" width="0.1273%" height="15" fill="rgb(232,162,48)" fg:x="1147681960" fg:w="5819675"/><text x="25.3576%" y="431.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,903,081 samples, 0.06%)</title><rect x="25.1715%" y="405" width="0.0635%" height="15" fill="rgb(246,160,12)" fg:x="1150598554" fg:w="2903081"/><text x="25.4215%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,903,081 samples, 0.06%)</title><rect x="25.1715%" y="389" width="0.0635%" height="15" fill="rgb(247,166,0)" fg:x="1150598554" fg:w="2903081"/><text x="25.4215%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,903,081 samples, 0.06%)</title><rect x="25.1715%" y="373" width="0.0635%" height="15" fill="rgb(249,219,21)" fg:x="1150598554" fg:w="2903081"/><text x="25.4215%" y="383.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,002,774 samples, 0.04%)</title><rect x="25.2800%" y="389" width="0.0438%" height="15" fill="rgb(205,209,3)" fg:x="1155558865" fg:w="2002774"/><text x="25.5300%" y="399.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,002,774 samples, 0.04%)</title><rect x="25.2800%" y="373" width="0.0438%" height="15" fill="rgb(243,44,1)" fg:x="1155558865" fg:w="2002774"/><text x="25.5300%" y="383.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (2,002,774 samples, 0.04%)</title><rect x="25.2800%" y="357" width="0.0438%" height="15" fill="rgb(206,159,16)" fg:x="1155558865" fg:w="2002774"/><text x="25.5300%" y="367.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (2,002,774 samples, 0.04%)</title><rect x="25.2800%" y="341" width="0.0438%" height="15" fill="rgb(244,77,30)" fg:x="1155558865" fg:w="2002774"/><text x="25.5300%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15,092,488 samples, 0.33%)</title><rect x="25.1076%" y="485" width="0.3302%" height="15" fill="rgb(218,69,12)" fg:x="1147681960" fg:w="15092488"/><text x="25.3576%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15,092,488 samples, 0.33%)</title><rect x="25.1076%" y="469" width="0.3302%" height="15" fill="rgb(212,87,7)" fg:x="1147681960" fg:w="15092488"/><text x="25.3576%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15,092,488 samples, 0.33%)</title><rect x="25.1076%" y="453" width="0.3302%" height="15" fill="rgb(245,114,25)" fg:x="1147681960" fg:w="15092488"/><text x="25.3576%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9,272,813 samples, 0.20%)</title><rect x="25.2350%" y="437" width="0.2029%" height="15" fill="rgb(210,61,42)" fg:x="1153501635" fg:w="9272813"/><text x="25.4850%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,272,813 samples, 0.20%)</title><rect x="25.2350%" y="421" width="0.2029%" height="15" fill="rgb(211,52,33)" fg:x="1153501635" fg:w="9272813"/><text x="25.4850%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7,215,583 samples, 0.16%)</title><rect x="25.2800%" y="405" width="0.1579%" height="15" fill="rgb(234,58,33)" fg:x="1155558865" fg:w="7215583"/><text x="25.5300%" y="415.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (5,212,809 samples, 0.11%)</title><rect x="25.3238%" y="389" width="0.1140%" height="15" fill="rgb(220,115,36)" fg:x="1157561639" fg:w="5212809"/><text x="25.5738%" y="399.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (5,212,809 samples, 0.11%)</title><rect x="25.3238%" y="373" width="0.1140%" height="15" fill="rgb(243,153,54)" fg:x="1157561639" fg:w="5212809"/><text x="25.5738%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (2,900,175 samples, 0.06%)</title><rect x="25.4378%" y="437" width="0.0634%" height="15" fill="rgb(251,47,18)" fg:x="1162774448" fg:w="2900175"/><text x="25.6878%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,900,175 samples, 0.06%)</title><rect x="25.4378%" y="421" width="0.0634%" height="15" fill="rgb(242,102,42)" fg:x="1162774448" fg:w="2900175"/><text x="25.6878%" y="431.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (2,900,175 samples, 0.06%)</title><rect x="25.4378%" y="405" width="0.0634%" height="15" fill="rgb(234,31,38)" fg:x="1162774448" fg:w="2900175"/><text x="25.6878%" y="415.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMLambda::set_result (39,246,815 samples, 0.86%)</title><rect x="24.6905%" y="517" width="0.8586%" height="15" fill="rgb(221,117,51)" fg:x="1128611920" fg:w="39246815"/><text x="24.9405%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (20,176,775 samples, 0.44%)</title><rect x="25.1076%" y="501" width="0.4414%" height="15" fill="rgb(212,20,18)" fg:x="1147681960" fg:w="20176775"/><text x="25.3576%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (5,084,287 samples, 0.11%)</title><rect x="25.4378%" y="485" width="0.1112%" height="15" fill="rgb(245,133,36)" fg:x="1162774448" fg:w="5084287"/><text x="25.6878%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (5,084,287 samples, 0.11%)</title><rect x="25.4378%" y="469" width="0.1112%" height="15" fill="rgb(212,6,19)" fg:x="1162774448" fg:w="5084287"/><text x="25.6878%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (5,084,287 samples, 0.11%)</title><rect x="25.4378%" y="453" width="0.1112%" height="15" fill="rgb(218,1,36)" fg:x="1162774448" fg:w="5084287"/><text x="25.6878%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2,184,112 samples, 0.05%)</title><rect x="25.5013%" y="437" width="0.0478%" height="15" fill="rgb(246,84,54)" fg:x="1165674623" fg:w="2184112"/><text x="25.7513%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (2,184,112 samples, 0.05%)</title><rect x="25.5013%" y="421" width="0.0478%" height="15" fill="rgb(242,110,6)" fg:x="1165674623" fg:w="2184112"/><text x="25.7513%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (2,184,112 samples, 0.05%)</title><rect x="25.5013%" y="405" width="0.0478%" height="15" fill="rgb(214,47,5)" fg:x="1165674623" fg:w="2184112"/><text x="25.7513%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (2,184,112 samples, 0.05%)</title><rect x="25.5013%" y="389" width="0.0478%" height="15" fill="rgb(218,159,25)" fg:x="1165674623" fg:w="2184112"/><text x="25.7513%" y="399.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMNativeFunction::call (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="517" width="0.0612%" height="15" fill="rgb(215,211,28)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="527.50"></text></g><g><title>XLang_Rust::vm::executor::vm::native_functions::print (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="501" width="0.0612%" height="15" fill="rgb(238,59,32)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="511.50"></text></g><g><title>std::io::stdio::_print (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="485" width="0.0612%" height="15" fill="rgb(226,82,3)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="495.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="469" width="0.0612%" height="15" fill="rgb(240,164,32)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="479.50"></text></g><g><title>core::fmt::write (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="453" width="0.0612%" height="15" fill="rgb(232,46,7)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="463.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="437" width="0.0612%" height="15" fill="rgb(229,129,53)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="447.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="421" width="0.0612%" height="15" fill="rgb(234,188,29)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="431.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="405" width="0.0612%" height="15" fill="rgb(246,141,4)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="415.50"></text></g><g><title>[libc.so.6] (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="389" width="0.0612%" height="15" fill="rgb(229,23,39)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="399.50"></text></g><g><title>[libc.so.6] (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="373" width="0.0612%" height="15" fill="rgb(206,12,3)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="383.50"></text></g><g><title>[unknown] (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="357" width="0.0612%" height="15" fill="rgb(252,226,20)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="367.50"></text></g><g><title>[unknown] (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="341" width="0.0612%" height="15" fill="rgb(216,123,35)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="351.50"></text></g><g><title>[unknown] (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="325" width="0.0612%" height="15" fill="rgb(212,68,40)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="335.50"></text></g><g><title>[unknown] (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="309" width="0.0612%" height="15" fill="rgb(254,125,32)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="319.50"></text></g><g><title>[unknown] (2,799,199 samples, 0.06%)</title><rect x="25.5491%" y="293" width="0.0612%" height="15" fill="rgb(253,97,22)" fg:x="1167858735" fg:w="2799199"/><text x="25.7991%" y="303.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_type (2,888,368 samples, 0.06%)</title><rect x="25.8621%" y="485" width="0.0632%" height="15" fill="rgb(241,101,14)" fg:x="1182166170" fg:w="2888368"/><text x="26.1121%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (2,888,368 samples, 0.06%)</title><rect x="25.8621%" y="469" width="0.0632%" height="15" fill="rgb(238,103,29)" fg:x="1182166170" fg:w="2888368"/><text x="26.1121%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (2,888,368 samples, 0.06%)</title><rect x="25.8621%" y="453" width="0.0632%" height="15" fill="rgb(233,195,47)" fg:x="1182166170" fg:w="2888368"/><text x="26.1121%" y="463.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (2,902,688 samples, 0.06%)</title><rect x="25.9252%" y="485" width="0.0635%" height="15" fill="rgb(246,218,30)" fg:x="1185054538" fg:w="2902688"/><text x="26.1752%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (2,902,688 samples, 0.06%)</title><rect x="25.9252%" y="469" width="0.0635%" height="15" fill="rgb(219,145,47)" fg:x="1185054538" fg:w="2902688"/><text x="26.1752%" y="479.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::clone::Clone&gt;::clone (2,327,410 samples, 0.05%)</title><rect x="26.0522%" y="469" width="0.0509%" height="15" fill="rgb(243,12,26)" fg:x="1190858521" fg:w="2327410"/><text x="26.3022%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (4,825,659 samples, 0.11%)</title><rect x="26.1031%" y="437" width="0.1056%" height="15" fill="rgb(214,87,16)" fg:x="1193185931" fg:w="4825659"/><text x="26.3531%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,825,659 samples, 0.11%)</title><rect x="26.1031%" y="421" width="0.1056%" height="15" fill="rgb(208,99,42)" fg:x="1193185931" fg:w="4825659"/><text x="26.3531%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="405" width="0.0630%" height="15" fill="rgb(253,99,2)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="415.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="389" width="0.0630%" height="15" fill="rgb(220,168,23)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="373" width="0.0630%" height="15" fill="rgb(242,38,24)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="357" width="0.0630%" height="15" fill="rgb(225,182,9)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="341" width="0.0630%" height="15" fill="rgb(243,178,37)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="325" width="0.0630%" height="15" fill="rgb(232,139,19)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="309" width="0.0630%" height="15" fill="rgb(225,201,24)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="293" width="0.0630%" height="15" fill="rgb(221,47,46)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,877,726 samples, 0.06%)</title><rect x="26.1457%" y="277" width="0.0630%" height="15" fill="rgb(249,23,13)" fg:x="1195133864" fg:w="2877726"/><text x="26.3957%" y="287.50"></text></g><g><title>core::intrinsics::likely (2,761,565 samples, 0.06%)</title><rect x="26.2087%" y="405" width="0.0604%" height="15" fill="rgb(219,9,5)" fg:x="1198011590" fg:w="2761565"/><text x="26.4587%" y="415.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::add_reference (15,718,891 samples, 0.34%)</title><rect x="25.9887%" y="485" width="0.3439%" height="15" fill="rgb(254,171,16)" fg:x="1187957226" fg:w="15718891"/><text x="26.2387%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10,490,186 samples, 0.23%)</title><rect x="26.1031%" y="469" width="0.2295%" height="15" fill="rgb(230,171,20)" fg:x="1193185931" fg:w="10490186"/><text x="26.3531%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10,490,186 samples, 0.23%)</title><rect x="26.1031%" y="453" width="0.2295%" height="15" fill="rgb(210,71,41)" fg:x="1193185931" fg:w="10490186"/><text x="26.3531%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,664,527 samples, 0.12%)</title><rect x="26.2087%" y="437" width="0.1239%" height="15" fill="rgb(206,173,20)" fg:x="1198011590" fg:w="5664527"/><text x="26.4587%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,664,527 samples, 0.12%)</title><rect x="26.2087%" y="421" width="0.1239%" height="15" fill="rgb(233,88,34)" fg:x="1198011590" fg:w="5664527"/><text x="26.4587%" y="431.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,902,962 samples, 0.06%)</title><rect x="26.2691%" y="405" width="0.0635%" height="15" fill="rgb(223,209,46)" fg:x="1200773155" fg:w="2902962"/><text x="26.5191%" y="415.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,902,962 samples, 0.06%)</title><rect x="26.2691%" y="389" width="0.0635%" height="15" fill="rgb(250,43,18)" fg:x="1200773155" fg:w="2902962"/><text x="26.5191%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (2,234,177 samples, 0.05%)</title><rect x="26.3759%" y="421" width="0.0489%" height="15" fill="rgb(208,13,10)" fg:x="1205654268" fg:w="2234177"/><text x="26.6259%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,234,177 samples, 0.05%)</title><rect x="26.3759%" y="405" width="0.0489%" height="15" fill="rgb(212,200,36)" fg:x="1205654268" fg:w="2234177"/><text x="26.6259%" y="415.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (2,234,177 samples, 0.05%)</title><rect x="26.3759%" y="389" width="0.0489%" height="15" fill="rgb(225,90,30)" fg:x="1205654268" fg:w="2234177"/><text x="26.6259%" y="399.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2,234,177 samples, 0.05%)</title><rect x="26.3759%" y="373" width="0.0489%" height="15" fill="rgb(236,182,39)" fg:x="1205654268" fg:w="2234177"/><text x="26.6259%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2,234,177 samples, 0.05%)</title><rect x="26.3759%" y="357" width="0.0489%" height="15" fill="rgb(212,144,35)" fg:x="1205654268" fg:w="2234177"/><text x="26.6259%" y="367.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2,234,177 samples, 0.05%)</title><rect x="26.3759%" y="341" width="0.0489%" height="15" fill="rgb(228,63,44)" fg:x="1205654268" fg:w="2234177"/><text x="26.6259%" y="351.50"></text></g><g><title>core::intrinsics::likely (5,709,455 samples, 0.12%)</title><rect x="26.4248%" y="373" width="0.1249%" height="15" fill="rgb(228,109,6)" fg:x="1207888445" fg:w="5709455"/><text x="26.6748%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12,766,248 samples, 0.28%)</title><rect x="26.3759%" y="469" width="0.2793%" height="15" fill="rgb(238,117,24)" fg:x="1205654268" fg:w="12766248"/><text x="26.6259%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12,766,248 samples, 0.28%)</title><rect x="26.3759%" y="453" width="0.2793%" height="15" fill="rgb(242,26,26)" fg:x="1205654268" fg:w="12766248"/><text x="26.6259%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12,766,248 samples, 0.28%)</title><rect x="26.3759%" y="437" width="0.2793%" height="15" fill="rgb(221,92,48)" fg:x="1205654268" fg:w="12766248"/><text x="26.6259%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10,532,071 samples, 0.23%)</title><rect x="26.4248%" y="421" width="0.2304%" height="15" fill="rgb(209,209,32)" fg:x="1207888445" fg:w="10532071"/><text x="26.6748%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10,532,071 samples, 0.23%)</title><rect x="26.4248%" y="405" width="0.2304%" height="15" fill="rgb(221,70,22)" fg:x="1207888445" fg:w="10532071"/><text x="26.6748%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (10,532,071 samples, 0.23%)</title><rect x="26.4248%" y="389" width="0.2304%" height="15" fill="rgb(248,145,5)" fg:x="1207888445" fg:w="10532071"/><text x="26.6748%" y="399.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (4,822,616 samples, 0.11%)</title><rect x="26.5497%" y="373" width="0.1055%" height="15" fill="rgb(226,116,26)" fg:x="1213597900" fg:w="4822616"/><text x="26.7997%" y="383.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (4,822,616 samples, 0.11%)</title><rect x="26.5497%" y="357" width="0.1055%" height="15" fill="rgb(244,5,17)" fg:x="1213597900" fg:w="4822616"/><text x="26.7997%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (2,903,092 samples, 0.06%)</title><rect x="26.6552%" y="421" width="0.0635%" height="15" fill="rgb(252,159,33)" fg:x="1218420516" fg:w="2903092"/><text x="26.9052%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,903,092 samples, 0.06%)</title><rect x="26.6552%" y="405" width="0.0635%" height="15" fill="rgb(206,71,0)" fg:x="1218420516" fg:w="2903092"/><text x="26.9052%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,903,092 samples, 0.06%)</title><rect x="26.6552%" y="389" width="0.0635%" height="15" fill="rgb(233,118,54)" fg:x="1218420516" fg:w="2903092"/><text x="26.9052%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (2,903,092 samples, 0.06%)</title><rect x="26.6552%" y="373" width="0.0635%" height="15" fill="rgb(234,83,48)" fg:x="1218420516" fg:w="2903092"/><text x="26.9052%" y="383.50"></text></g><g><title>core::intrinsics::likely (2,158,812 samples, 0.05%)</title><rect x="26.7187%" y="373" width="0.0472%" height="15" fill="rgb(228,3,54)" fg:x="1221323608" fg:w="2158812"/><text x="26.9687%" y="383.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (5,783,702 samples, 0.13%)</title><rect x="26.7659%" y="373" width="0.1265%" height="15" fill="rgb(226,155,13)" fg:x="1223482420" fg:w="5783702"/><text x="27.0159%" y="383.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (5,783,702 samples, 0.13%)</title><rect x="26.7659%" y="357" width="0.1265%" height="15" fill="rgb(241,28,37)" fg:x="1223482420" fg:w="5783702"/><text x="27.0159%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10,809,792 samples, 0.24%)</title><rect x="26.7187%" y="405" width="0.2365%" height="15" fill="rgb(233,93,10)" fg:x="1221323608" fg:w="10809792"/><text x="26.9687%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (10,809,792 samples, 0.24%)</title><rect x="26.7187%" y="389" width="0.2365%" height="15" fill="rgb(225,113,19)" fg:x="1221323608" fg:w="10809792"/><text x="26.9687%" y="399.50"></text></g><g><title>hashbrown::control::tag::Tag::full (2,867,278 samples, 0.06%)</title><rect x="26.8925%" y="373" width="0.0627%" height="15" fill="rgb(241,2,18)" fg:x="1229266122" fg:w="2867278"/><text x="27.1425%" y="383.50"></text></g><g><title>XLang_Rust::vm::executor::variable::try_assign_as_vmobject (64,276,921 samples, 1.41%)</title><rect x="25.8006%" y="501" width="1.4062%" height="15" fill="rgb(228,207,21)" fg:x="1179357625" fg:w="64276921"/><text x="26.0506%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (39,958,429 samples, 0.87%)</title><rect x="26.3326%" y="485" width="0.8742%" height="15" fill="rgb(213,211,35)" fg:x="1203676117" fg:w="39958429"/><text x="26.5826%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (25,214,030 samples, 0.55%)</title><rect x="26.6552%" y="469" width="0.5516%" height="15" fill="rgb(209,83,10)" fg:x="1218420516" fg:w="25214030"/><text x="26.9052%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (25,214,030 samples, 0.55%)</title><rect x="26.6552%" y="453" width="0.5516%" height="15" fill="rgb(209,164,1)" fg:x="1218420516" fg:w="25214030"/><text x="26.9052%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (25,214,030 samples, 0.55%)</title><rect x="26.6552%" y="437" width="0.5516%" height="15" fill="rgb(213,184,43)" fg:x="1218420516" fg:w="25214030"/><text x="26.9052%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (22,310,938 samples, 0.49%)</title><rect x="26.7187%" y="421" width="0.4881%" height="15" fill="rgb(231,61,34)" fg:x="1221323608" fg:w="22310938"/><text x="26.9687%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (11,501,146 samples, 0.25%)</title><rect x="26.9552%" y="405" width="0.2516%" height="15" fill="rgb(235,75,3)" fg:x="1232133400" fg:w="11501146"/><text x="27.2052%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (11,501,146 samples, 0.25%)</title><rect x="26.9552%" y="389" width="0.2516%" height="15" fill="rgb(220,106,47)" fg:x="1232133400" fg:w="11501146"/><text x="27.2052%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (11,501,146 samples, 0.25%)</title><rect x="26.9552%" y="373" width="0.2516%" height="15" fill="rgb(210,196,33)" fg:x="1232133400" fg:w="11501146"/><text x="27.2052%" y="383.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_empty (2,832,621 samples, 0.06%)</title><rect x="27.1448%" y="357" width="0.0620%" height="15" fill="rgb(229,154,42)" fg:x="1240801925" fg:w="2832621"/><text x="27.3948%" y="367.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,832,621 samples, 0.06%)</title><rect x="27.1448%" y="341" width="0.0620%" height="15" fill="rgb(228,114,26)" fg:x="1240801925" fg:w="2832621"/><text x="27.3948%" y="351.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (2,832,621 samples, 0.06%)</title><rect x="27.1448%" y="325" width="0.0620%" height="15" fill="rgb(208,144,1)" fg:x="1240801925" fg:w="2832621"/><text x="27.3948%" y="335.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (5,769,347 samples, 0.13%)</title><rect x="27.2068%" y="501" width="0.1262%" height="15" fill="rgb(239,112,37)" fg:x="1243634546" fg:w="5769347"/><text x="27.4568%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (5,769,347 samples, 0.13%)</title><rect x="27.2068%" y="485" width="0.1262%" height="15" fill="rgb(210,96,50)" fg:x="1243634546" fg:w="5769347"/><text x="27.4568%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10,619,936 samples, 0.23%)</title><rect x="27.3330%" y="501" width="0.2323%" height="15" fill="rgb(222,178,2)" fg:x="1249403893" fg:w="10619936"/><text x="27.5830%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10,619,936 samples, 0.23%)</title><rect x="27.3330%" y="485" width="0.2323%" height="15" fill="rgb(226,74,18)" fg:x="1249403893" fg:w="10619936"/><text x="27.5830%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (7,785,923 samples, 0.17%)</title><rect x="27.3950%" y="469" width="0.1703%" height="15" fill="rgb(225,67,54)" fg:x="1252237906" fg:w="7785923"/><text x="27.6450%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (7,785,923 samples, 0.17%)</title><rect x="27.3950%" y="453" width="0.1703%" height="15" fill="rgb(251,92,32)" fg:x="1252237906" fg:w="7785923"/><text x="27.6450%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,898,239 samples, 0.11%)</title><rect x="27.4582%" y="437" width="0.1072%" height="15" fill="rgb(228,149,22)" fg:x="1255125590" fg:w="4898239"/><text x="27.7082%" y="447.50"></text></g><g><title>malloc (4,898,239 samples, 0.11%)</title><rect x="27.4582%" y="421" width="0.1072%" height="15" fill="rgb(243,54,13)" fg:x="1255125590" fg:w="4898239"/><text x="27.7082%" y="431.50"></text></g><g><title>__libc_calloc (16,164,258 samples, 0.35%)</title><rect x="27.5653%" y="373" width="0.3536%" height="15" fill="rgb(243,180,28)" fg:x="1260023829" fg:w="16164258"/><text x="27.8153%" y="383.50"></text></g><g><title>alloc::vec::from_elem (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="501" width="0.3942%" height="15" fill="rgb(208,167,24)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="511.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="485" width="0.3942%" height="15" fill="rgb(245,73,45)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="469" width="0.3942%" height="15" fill="rgb(237,203,48)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="453" width="0.3942%" height="15" fill="rgb(211,197,16)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="437" width="0.3942%" height="15" fill="rgb(243,99,51)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="421" width="0.3942%" height="15" fill="rgb(215,123,29)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="405" width="0.3942%" height="15" fill="rgb(239,186,37)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="415.50"></text></g><g><title>alloc::alloc::alloc_zeroed (18,019,305 samples, 0.39%)</title><rect x="27.5653%" y="389" width="0.3942%" height="15" fill="rgb(252,136,39)" fg:x="1260023829" fg:w="18019305"/><text x="27.8153%" y="399.50"></text></g><g><title>__rdl_alloc_zeroed (1,855,047 samples, 0.04%)</title><rect x="27.9190%" y="373" width="0.0406%" height="15" fill="rgb(223,213,32)" fg:x="1276188087" fg:w="1855047"/><text x="28.1690%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,779,405 samples, 0.13%)</title><rect x="27.9595%" y="501" width="0.1264%" height="15" fill="rgb(233,115,5)" fg:x="1278043134" fg:w="5779405"/><text x="28.2095%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,779,405 samples, 0.13%)</title><rect x="27.9595%" y="485" width="0.1264%" height="15" fill="rgb(207,226,44)" fg:x="1278043134" fg:w="5779405"/><text x="28.2095%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,779,405 samples, 0.13%)</title><rect x="27.9595%" y="469" width="0.1264%" height="15" fill="rgb(208,126,0)" fg:x="1278043134" fg:w="5779405"/><text x="28.2095%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,779,405 samples, 0.13%)</title><rect x="27.9595%" y="453" width="0.1264%" height="15" fill="rgb(244,66,21)" fg:x="1278043134" fg:w="5779405"/><text x="28.2095%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,779,405 samples, 0.13%)</title><rect x="27.9595%" y="437" width="0.1264%" height="15" fill="rgb(222,97,12)" fg:x="1278043134" fg:w="5779405"/><text x="28.2095%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (5,779,405 samples, 0.13%)</title><rect x="27.9595%" y="421" width="0.1264%" height="15" fill="rgb(219,213,19)" fg:x="1278043134" fg:w="5779405"/><text x="28.2095%" y="431.50"></text></g><g><title>cfree (5,779,405 samples, 0.13%)</title><rect x="27.9595%" y="405" width="0.1264%" height="15" fill="rgb(252,169,30)" fg:x="1278043134" fg:w="5779405"/><text x="28.2095%" y="415.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMTuple::assign_members (118,726,885 samples, 2.60%)</title><rect x="25.6103%" y="517" width="2.5974%" height="15" fill="rgb(206,32,51)" fg:x="1170657934" fg:w="118726885"/><text x="25.8603%" y="527.50">XL..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bool&gt;&gt; (5,562,280 samples, 0.12%)</title><rect x="28.0860%" y="501" width="0.1217%" height="15" fill="rgb(250,172,42)" fg:x="1283822539" fg:w="5562280"/><text x="28.3360%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bool&gt;&gt; (5,562,280 samples, 0.12%)</title><rect x="28.0860%" y="485" width="0.1217%" height="15" fill="rgb(209,34,43)" fg:x="1283822539" fg:w="5562280"/><text x="28.3360%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,562,280 samples, 0.12%)</title><rect x="28.0860%" y="469" width="0.1217%" height="15" fill="rgb(223,11,35)" fg:x="1283822539" fg:w="5562280"/><text x="28.3360%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,562,280 samples, 0.12%)</title><rect x="28.0860%" y="453" width="0.1217%" height="15" fill="rgb(251,219,26)" fg:x="1283822539" fg:w="5562280"/><text x="28.3360%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,562,280 samples, 0.12%)</title><rect x="28.0860%" y="437" width="0.1217%" height="15" fill="rgb(231,119,3)" fg:x="1283822539" fg:w="5562280"/><text x="28.3360%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (5,562,280 samples, 0.12%)</title><rect x="28.0860%" y="421" width="0.1217%" height="15" fill="rgb(216,97,11)" fg:x="1283822539" fg:w="5562280"/><text x="28.3360%" y="431.50"></text></g><g><title>cfree (5,562,280 samples, 0.12%)</title><rect x="28.0860%" y="405" width="0.1217%" height="15" fill="rgb(223,59,9)" fg:x="1283822539" fg:w="5562280"/><text x="28.3360%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="485" width="0.0403%" height="15" fill="rgb(233,93,31)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="469" width="0.0403%" height="15" fill="rgb(239,81,33)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="453" width="0.0403%" height="15" fill="rgb(213,120,34)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="437" width="0.0403%" height="15" fill="rgb(243,49,53)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="447.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="421" width="0.0403%" height="15" fill="rgb(247,216,33)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="431.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="405" width="0.0403%" height="15" fill="rgb(226,26,14)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="415.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="389" width="0.0403%" height="15" fill="rgb(215,49,53)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="399.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (1,842,543 samples, 0.04%)</title><rect x="28.5217%" y="373" width="0.0403%" height="15" fill="rgb(245,162,40)" fg:x="1303739160" fg:w="1842543"/><text x="28.7717%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (25,304,420 samples, 0.55%)</title><rect x="28.5620%" y="453" width="0.5536%" height="15" fill="rgb(229,68,17)" fg:x="1305581703" fg:w="25304420"/><text x="28.8120%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (25,304,420 samples, 0.55%)</title><rect x="28.5620%" y="437" width="0.5536%" height="15" fill="rgb(213,182,10)" fg:x="1305581703" fg:w="25304420"/><text x="28.8120%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (25,304,420 samples, 0.55%)</title><rect x="28.5620%" y="421" width="0.5536%" height="15" fill="rgb(245,125,30)" fg:x="1305581703" fg:w="25304420"/><text x="28.8120%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (23,018,379 samples, 0.50%)</title><rect x="28.6120%" y="405" width="0.5036%" height="15" fill="rgb(232,202,2)" fg:x="1307867744" fg:w="23018379"/><text x="28.8620%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="389" width="0.3138%" height="15" fill="rgb(237,140,51)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="373" width="0.3138%" height="15" fill="rgb(236,157,25)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="357" width="0.3138%" height="15" fill="rgb(219,209,0)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="341" width="0.3138%" height="15" fill="rgb(240,116,54)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="351.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="325" width="0.3138%" height="15" fill="rgb(216,10,36)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="309" width="0.3138%" height="15" fill="rgb(222,72,44)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="293" width="0.3138%" height="15" fill="rgb(232,159,9)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="303.50"></text></g><g><title>alloc::alloc::alloc (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="277" width="0.3138%" height="15" fill="rgb(210,39,32)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="287.50"></text></g><g><title>malloc (14,344,269 samples, 0.31%)</title><rect x="28.8018%" y="261" width="0.3138%" height="15" fill="rgb(216,194,45)" fg:x="1316541854" fg:w="14344269"/><text x="29.0518%" y="271.50"></text></g><g><title>[libc.so.6] (11,477,331 samples, 0.25%)</title><rect x="28.8645%" y="245" width="0.2511%" height="15" fill="rgb(218,18,35)" fg:x="1319408792" fg:w="11477331"/><text x="29.1145%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (5,231,100 samples, 0.11%)</title><rect x="29.1766%" y="421" width="0.1144%" height="15" fill="rgb(207,83,51)" fg:x="1333675059" fg:w="5231100"/><text x="29.4266%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5,231,100 samples, 0.11%)</title><rect x="29.1766%" y="405" width="0.1144%" height="15" fill="rgb(225,63,43)" fg:x="1333675059" fg:w="5231100"/><text x="29.4266%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5,231,100 samples, 0.11%)</title><rect x="29.1766%" y="389" width="0.1144%" height="15" fill="rgb(207,57,36)" fg:x="1333675059" fg:w="5231100"/><text x="29.4266%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (16,717,291 samples, 0.37%)</title><rect x="29.1156%" y="453" width="0.3657%" height="15" fill="rgb(216,99,33)" fg:x="1330886123" fg:w="16717291"/><text x="29.3656%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,717,291 samples, 0.37%)</title><rect x="29.1156%" y="437" width="0.3657%" height="15" fill="rgb(225,42,16)" fg:x="1330886123" fg:w="16717291"/><text x="29.3656%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,697,255 samples, 0.19%)</title><rect x="29.2910%" y="421" width="0.1903%" height="15" fill="rgb(220,201,45)" fg:x="1338906159" fg:w="8697255"/><text x="29.5410%" y="431.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (8,697,255 samples, 0.19%)</title><rect x="29.2910%" y="405" width="0.1903%" height="15" fill="rgb(225,33,4)" fg:x="1338906159" fg:w="8697255"/><text x="29.5410%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (8,697,255 samples, 0.19%)</title><rect x="29.2910%" y="389" width="0.1903%" height="15" fill="rgb(224,33,50)" fg:x="1338906159" fg:w="8697255"/><text x="29.5410%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (8,697,255 samples, 0.19%)</title><rect x="29.2910%" y="373" width="0.1903%" height="15" fill="rgb(246,198,51)" fg:x="1338906159" fg:w="8697255"/><text x="29.5410%" y="383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8,697,255 samples, 0.19%)</title><rect x="29.2910%" y="357" width="0.1903%" height="15" fill="rgb(205,22,4)" fg:x="1338906159" fg:w="8697255"/><text x="29.5410%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8,697,255 samples, 0.19%)</title><rect x="29.2910%" y="341" width="0.1903%" height="15" fill="rgb(206,3,8)" fg:x="1338906159" fg:w="8697255"/><text x="29.5410%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,697,255 samples, 0.19%)</title><rect x="29.2910%" y="325" width="0.1903%" height="15" fill="rgb(251,23,15)" fg:x="1338906159" fg:w="8697255"/><text x="29.5410%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (2,896,118 samples, 0.06%)</title><rect x="29.4179%" y="309" width="0.0634%" height="15" fill="rgb(252,88,28)" fg:x="1344707296" fg:w="2896118"/><text x="29.6679%" y="319.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (61,082,644 samples, 1.34%)</title><rect x="28.3094%" y="501" width="1.3363%" height="15" fill="rgb(212,127,14)" fg:x="1294036539" fg:w="61082644"/><text x="28.5594%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (49,537,480 samples, 1.08%)</title><rect x="28.5620%" y="485" width="1.0837%" height="15" fill="rgb(247,145,37)" fg:x="1305581703" fg:w="49537480"/><text x="28.8120%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (49,537,480 samples, 1.08%)</title><rect x="28.5620%" y="469" width="1.0837%" height="15" fill="rgb(209,117,53)" fg:x="1305581703" fg:w="49537480"/><text x="28.8120%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7,515,769 samples, 0.16%)</title><rect x="29.4813%" y="453" width="0.1644%" height="15" fill="rgb(212,90,42)" fg:x="1347603414" fg:w="7515769"/><text x="29.7313%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7,515,769 samples, 0.16%)</title><rect x="29.4813%" y="437" width="0.1644%" height="15" fill="rgb(218,164,37)" fg:x="1347603414" fg:w="7515769"/><text x="29.7313%" y="447.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (7,515,769 samples, 0.16%)</title><rect x="29.4813%" y="421" width="0.1644%" height="15" fill="rgb(246,65,34)" fg:x="1347603414" fg:w="7515769"/><text x="29.7313%" y="431.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (7,515,769 samples, 0.16%)</title><rect x="29.4813%" y="405" width="0.1644%" height="15" fill="rgb(231,100,33)" fg:x="1347603414" fg:w="7515769"/><text x="29.7313%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,723,495 samples, 0.10%)</title><rect x="29.6457%" y="501" width="0.1033%" height="15" fill="rgb(228,126,14)" fg:x="1355119183" fg:w="4723495"/><text x="29.8957%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4,723,495 samples, 0.10%)</title><rect x="29.6457%" y="485" width="0.1033%" height="15" fill="rgb(215,173,21)" fg:x="1355119183" fg:w="4723495"/><text x="29.8957%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (4,723,495 samples, 0.10%)</title><rect x="29.6457%" y="469" width="0.1033%" height="15" fill="rgb(210,6,40)" fg:x="1355119183" fg:w="4723495"/><text x="29.8957%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (4,723,495 samples, 0.10%)</title><rect x="29.6457%" y="453" width="0.1033%" height="15" fill="rgb(212,48,18)" fg:x="1355119183" fg:w="4723495"/><text x="29.8957%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,723,495 samples, 0.10%)</title><rect x="29.6457%" y="437" width="0.1033%" height="15" fill="rgb(230,214,11)" fg:x="1355119183" fg:w="4723495"/><text x="29.8957%" y="447.50"></text></g><g><title>malloc (4,723,495 samples, 0.10%)</title><rect x="29.6457%" y="421" width="0.1033%" height="15" fill="rgb(254,105,39)" fg:x="1355119183" fg:w="4723495"/><text x="29.8957%" y="431.50"></text></g><g><title>[libc.so.6] (4,723,495 samples, 0.10%)</title><rect x="29.6457%" y="405" width="0.1033%" height="15" fill="rgb(245,158,5)" fg:x="1355119183" fg:w="4723495"/><text x="29.8957%" y="415.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMTuple::new (73,370,357 samples, 1.61%)</title><rect x="28.2077%" y="517" width="1.6051%" height="15" fill="rgb(249,208,11)" fg:x="1289384819" fg:w="73370357"/><text x="28.4577%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;mut XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="501" width="0.0637%" height="15" fill="rgb(210,39,28)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="485" width="0.0637%" height="15" fill="rgb(211,56,53)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;mut XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="469" width="0.0637%" height="15" fill="rgb(226,201,30)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="453" width="0.0637%" height="15" fill="rgb(239,101,34)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;mut XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="437" width="0.0637%" height="15" fill="rgb(226,209,5)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="421" width="0.0637%" height="15" fill="rgb(250,105,47)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="405" width="0.0637%" height="15" fill="rgb(230,72,3)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="389" width="0.0637%" height="15" fill="rgb(232,218,39)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="373" width="0.0637%" height="15" fill="rgb(248,166,6)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="383.50"></text></g><g><title>cfree (2,912,498 samples, 0.06%)</title><rect x="29.7491%" y="357" width="0.0637%" height="15" fill="rgb(247,89,20)" fg:x="1359842678" fg:w="2912498"/><text x="29.9991%" y="367.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMInt::new (8,344,379 samples, 0.18%)</title><rect x="29.8641%" y="485" width="0.1825%" height="15" fill="rgb(248,130,54)" fg:x="1365102201" fg:w="8344379"/><text x="30.1141%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (8,344,379 samples, 0.18%)</title><rect x="29.8641%" y="469" width="0.1825%" height="15" fill="rgb(234,196,4)" fg:x="1365102201" fg:w="8344379"/><text x="30.1141%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="437" width="0.1213%" height="15" fill="rgb(250,143,31)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="421" width="0.1213%" height="15" fill="rgb(211,110,34)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMInt&gt; (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="405" width="0.1213%" height="15" fill="rgb(215,124,48)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="389" width="0.1213%" height="15" fill="rgb(216,46,13)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="373" width="0.1213%" height="15" fill="rgb(205,184,25)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="357" width="0.1213%" height="15" fill="rgb(228,1,10)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="341" width="0.1213%" height="15" fill="rgb(213,116,27)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="325" width="0.1213%" height="15" fill="rgb(241,95,50)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="309" width="0.1213%" height="15" fill="rgb(238,48,32)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (5,546,554 samples, 0.12%)</title><rect x="30.1692%" y="293" width="0.1213%" height="15" fill="rgb(235,113,49)" fg:x="1379049910" fg:w="5546554"/><text x="30.4192%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2,628,838 samples, 0.06%)</title><rect x="30.2331%" y="277" width="0.0575%" height="15" fill="rgb(205,127,43)" fg:x="1381967626" fg:w="2628838"/><text x="30.4831%" y="287.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_full (2,628,838 samples, 0.06%)</title><rect x="30.2331%" y="261" width="0.0575%" height="15" fill="rgb(250,162,2)" fg:x="1381967626" fg:w="2628838"/><text x="30.4831%" y="271.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcgez_s8 (2,628,838 samples, 0.06%)</title><rect x="30.2331%" y="245" width="0.0575%" height="15" fill="rgb(220,13,41)" fg:x="1381967626" fg:w="2628838"/><text x="30.4831%" y="255.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::immediate_collect (16,641,480 samples, 0.36%)</title><rect x="30.0467%" y="453" width="0.3641%" height="15" fill="rgb(249,221,25)" fg:x="1373446580" fg:w="16641480"/><text x="30.2967%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="437" width="0.1201%" height="15" fill="rgb(215,208,19)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="421" width="0.1201%" height="15" fill="rgb(236,175,2)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="405" width="0.1201%" height="15" fill="rgb(241,52,2)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="389" width="0.1201%" height="15" fill="rgb(248,140,14)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="373" width="0.1201%" height="15" fill="rgb(253,22,42)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="357" width="0.1201%" height="15" fill="rgb(234,61,47)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="341" width="0.1201%" height="15" fill="rgb(208,226,15)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="325" width="0.1201%" height="15" fill="rgb(217,221,4)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="309" width="0.1201%" height="15" fill="rgb(212,174,34)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="319.50"></text></g><g><title>cfree (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="293" width="0.1201%" height="15" fill="rgb(253,83,4)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="303.50"></text></g><g><title>[libc.so.6] (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="277" width="0.1201%" height="15" fill="rgb(250,195,49)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="287.50"></text></g><g><title>[libc.so.6] (5,491,596 samples, 0.12%)</title><rect x="30.2906%" y="261" width="0.1201%" height="15" fill="rgb(241,192,25)" fg:x="1384596464" fg:w="5491596"/><text x="30.5406%" y="271.50"></text></g><g><title>alloc::vec::from_elem (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="437" width="0.0638%" height="15" fill="rgb(208,124,10)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="447.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="421" width="0.0638%" height="15" fill="rgb(222,33,0)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="405" width="0.0638%" height="15" fill="rgb(234,209,28)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="389" width="0.0638%" height="15" fill="rgb(224,11,23)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="373" width="0.0638%" height="15" fill="rgb(232,99,1)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="357" width="0.0638%" height="15" fill="rgb(237,95,45)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="341" width="0.0638%" height="15" fill="rgb(208,109,11)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="325" width="0.0638%" height="15" fill="rgb(216,190,48)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="335.50"></text></g><g><title>__libc_calloc (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="309" width="0.0638%" height="15" fill="rgb(251,171,36)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="319.50"></text></g><g><title>[libc.so.6] (2,917,108 samples, 0.06%)</title><rect x="30.5861%" y="293" width="0.0638%" height="15" fill="rgb(230,62,22)" fg:x="1398102993" fg:w="2917108"/><text x="30.8361%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="437" width="0.1211%" height="15" fill="rgb(225,114,35)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="421" width="0.1211%" height="15" fill="rgb(215,118,42)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="405" width="0.1211%" height="15" fill="rgb(243,119,21)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="389" width="0.1211%" height="15" fill="rgb(252,177,53)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="373" width="0.1211%" height="15" fill="rgb(237,209,29)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="357" width="0.1211%" height="15" fill="rgb(212,65,23)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="367.50"></text></g><g><title>cfree (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="341" width="0.1211%" height="15" fill="rgb(230,222,46)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="351.50"></text></g><g><title>[libc.so.6] (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="325" width="0.1211%" height="15" fill="rgb(215,135,32)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="335.50"></text></g><g><title>[libc.so.6] (5,536,553 samples, 0.12%)</title><rect x="30.6499%" y="309" width="0.1211%" height="15" fill="rgb(246,101,22)" fg:x="1401020101" fg:w="5536553"/><text x="30.8999%" y="319.50"></text></g><g><title>core::intrinsics::likely (2,916,411 samples, 0.06%)</title><rect x="30.7710%" y="341" width="0.0638%" height="15" fill="rgb(206,107,13)" fg:x="1406556654" fg:w="2916411"/><text x="31.0210%" y="351.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::mark (21,931,415 samples, 0.48%)</title><rect x="30.4107%" y="453" width="0.4798%" height="15" fill="rgb(250,100,44)" fg:x="1390088060" fg:w="21931415"/><text x="30.6607%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,462,821 samples, 0.12%)</title><rect x="30.7710%" y="437" width="0.1195%" height="15" fill="rgb(231,147,38)" fg:x="1406556654" fg:w="5462821"/><text x="31.0210%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,462,821 samples, 0.12%)</title><rect x="30.7710%" y="421" width="0.1195%" height="15" fill="rgb(229,8,40)" fg:x="1406556654" fg:w="5462821"/><text x="31.0210%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,462,821 samples, 0.12%)</title><rect x="30.7710%" y="405" width="0.1195%" height="15" fill="rgb(221,135,30)" fg:x="1406556654" fg:w="5462821"/><text x="31.0210%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5,462,821 samples, 0.12%)</title><rect x="30.7710%" y="389" width="0.1195%" height="15" fill="rgb(249,193,18)" fg:x="1406556654" fg:w="5462821"/><text x="31.0210%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,462,821 samples, 0.12%)</title><rect x="30.7710%" y="373" width="0.1195%" height="15" fill="rgb(209,133,39)" fg:x="1406556654" fg:w="5462821"/><text x="31.0210%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,462,821 samples, 0.12%)</title><rect x="30.7710%" y="357" width="0.1195%" height="15" fill="rgb(232,100,14)" fg:x="1406556654" fg:w="5462821"/><text x="31.0210%" y="367.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,546,410 samples, 0.06%)</title><rect x="30.8348%" y="341" width="0.0557%" height="15" fill="rgb(224,185,1)" fg:x="1409473065" fg:w="2546410"/><text x="31.0848%" y="351.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,546,410 samples, 0.06%)</title><rect x="30.8348%" y="325" width="0.0557%" height="15" fill="rgb(223,139,8)" fg:x="1409473065" fg:w="2546410"/><text x="31.0848%" y="335.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMTuple as XLang_Rust::vm::gc::gc::GCObject&gt;::free (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="421" width="0.0592%" height="15" fill="rgb(232,213,38)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="431.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="405" width="0.0592%" height="15" fill="rgb(207,94,22)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="389" width="0.0592%" height="15" fill="rgb(219,183,54)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="373" width="0.0592%" height="15" fill="rgb(216,185,54)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="357" width="0.0592%" height="15" fill="rgb(254,217,39)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="341" width="0.0592%" height="15" fill="rgb(240,178,23)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="325" width="0.0592%" height="15" fill="rgb(218,11,47)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="309" width="0.0592%" height="15" fill="rgb(218,51,51)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="319.50"></text></g><g><title>core::intrinsics::likely (2,705,593 samples, 0.06%)</title><rect x="30.8905%" y="293" width="0.0592%" height="15" fill="rgb(238,126,27)" fg:x="1412019475" fg:w="2705593"/><text x="31.1405%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,482,410 samples, 0.19%)</title><rect x="30.9497%" y="405" width="0.1856%" height="15" fill="rgb(249,202,22)" fg:x="1414725068" fg:w="8482410"/><text x="31.1997%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,482,410 samples, 0.19%)</title><rect x="30.9497%" y="389" width="0.1856%" height="15" fill="rgb(254,195,49)" fg:x="1414725068" fg:w="8482410"/><text x="31.1997%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (8,482,410 samples, 0.19%)</title><rect x="30.9497%" y="373" width="0.1856%" height="15" fill="rgb(208,123,14)" fg:x="1414725068" fg:w="8482410"/><text x="31.1997%" y="383.50"></text></g><g><title>cfree (8,482,410 samples, 0.19%)</title><rect x="30.9497%" y="357" width="0.1856%" height="15" fill="rgb(224,200,8)" fg:x="1414725068" fg:w="8482410"/><text x="31.1997%" y="367.50"></text></g><g><title>[libc.so.6] (5,811,907 samples, 0.13%)</title><rect x="31.0081%" y="341" width="0.1271%" height="15" fill="rgb(217,61,36)" fg:x="1417395571" fg:w="5811907"/><text x="31.2581%" y="351.50"></text></g><g><title>[libc.so.6] (5,811,907 samples, 0.13%)</title><rect x="31.0081%" y="325" width="0.1271%" height="15" fill="rgb(206,35,45)" fg:x="1417395571" fg:w="5811907"/><text x="31.2581%" y="335.50"></text></g><g><title>[libc.so.6] (2,903,611 samples, 0.06%)</title><rect x="31.0718%" y="309" width="0.0635%" height="15" fill="rgb(217,65,33)" fg:x="1420303867" fg:w="2903611"/><text x="31.3218%" y="319.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (14,096,076 samples, 0.31%)</title><rect x="30.8905%" y="437" width="0.3084%" height="15" fill="rgb(222,158,48)" fg:x="1412019475" fg:w="14096076"/><text x="31.1405%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (11,390,483 samples, 0.25%)</title><rect x="30.9497%" y="421" width="0.2492%" height="15" fill="rgb(254,2,54)" fg:x="1414725068" fg:w="11390483"/><text x="31.1997%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMTuple&gt; (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="405" width="0.0636%" height="15" fill="rgb(250,143,38)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="389" width="0.0636%" height="15" fill="rgb(248,25,0)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="373" width="0.0636%" height="15" fill="rgb(206,152,27)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="357" width="0.0636%" height="15" fill="rgb(240,77,30)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="341" width="0.0636%" height="15" fill="rgb(231,5,3)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="325" width="0.0636%" height="15" fill="rgb(207,226,32)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="309" width="0.0636%" height="15" fill="rgb(222,207,47)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="319.50"></text></g><g><title>cfree (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="293" width="0.0636%" height="15" fill="rgb(229,115,45)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="303.50"></text></g><g><title>[libc.so.6] (2,908,073 samples, 0.06%)</title><rect x="31.1353%" y="277" width="0.0636%" height="15" fill="rgb(224,191,6)" fg:x="1423207478" fg:w="2908073"/><text x="31.3853%" y="287.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::collect (55,420,962 samples, 1.21%)</title><rect x="30.0467%" y="469" width="1.2124%" height="15" fill="rgb(230,227,24)" fg:x="1373446580" fg:w="55420962"/><text x="30.2967%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::sweep (16,848,067 samples, 0.37%)</title><rect x="30.8905%" y="453" width="0.3686%" height="15" fill="rgb(228,80,19)" fg:x="1412019475" fg:w="16848067"/><text x="31.1405%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="437" width="0.0602%" height="15" fill="rgb(247,229,0)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="421" width="0.0602%" height="15" fill="rgb(237,194,15)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="405" width="0.0602%" height="15" fill="rgb(219,203,20)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="389" width="0.0602%" height="15" fill="rgb(234,128,8)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="373" width="0.0602%" height="15" fill="rgb(248,202,8)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="357" width="0.0602%" height="15" fill="rgb(206,104,37)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="341" width="0.0602%" height="15" fill="rgb(223,8,27)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="325" width="0.0602%" height="15" fill="rgb(216,217,28)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="309" width="0.0602%" height="15" fill="rgb(249,199,1)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="319.50"></text></g><g><title>cfree (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="293" width="0.0602%" height="15" fill="rgb(240,85,17)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="303.50"></text></g><g><title>[libc.so.6] (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="277" width="0.0602%" height="15" fill="rgb(206,108,45)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="287.50"></text></g><g><title>[libc.so.6] (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="261" width="0.0602%" height="15" fill="rgb(245,210,41)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="271.50"></text></g><g><title>[libc.so.6] (2,751,991 samples, 0.06%)</title><rect x="31.1989%" y="245" width="0.0602%" height="15" fill="rgb(206,13,37)" fg:x="1426115551" fg:w="2751991"/><text x="31.4489%" y="255.50"></text></g><g><title>XLang_Rust::vm::executor::variable::try_add_as_vmobject (80,439,520 samples, 1.76%)</title><rect x="29.8128%" y="517" width="1.7598%" height="15" fill="rgb(250,61,18)" fg:x="1362755176" fg:w="80439520"/><text x="30.0628%" y="527.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMInt::add (78,092,495 samples, 1.71%)</title><rect x="29.8641%" y="501" width="1.7084%" height="15" fill="rgb(235,172,48)" fg:x="1365102201" fg:w="78092495"/><text x="30.1141%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::new_object (69,748,116 samples, 1.53%)</title><rect x="30.0467%" y="485" width="1.5259%" height="15" fill="rgb(249,201,17)" fg:x="1373446580" fg:w="69748116"/><text x="30.2967%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14,327,154 samples, 0.31%)</title><rect x="31.2591%" y="469" width="0.3134%" height="15" fill="rgb(219,208,6)" fg:x="1428867542" fg:w="14327154"/><text x="31.5091%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (8,475,633 samples, 0.19%)</title><rect x="31.3871%" y="453" width="0.1854%" height="15" fill="rgb(248,31,23)" fg:x="1434719063" fg:w="8475633"/><text x="31.6371%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,475,633 samples, 0.19%)</title><rect x="31.3871%" y="437" width="0.1854%" height="15" fill="rgb(245,15,42)" fg:x="1434719063" fg:w="8475633"/><text x="31.6371%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,475,633 samples, 0.19%)</title><rect x="31.3871%" y="421" width="0.1854%" height="15" fill="rgb(222,217,39)" fg:x="1434719063" fg:w="8475633"/><text x="31.6371%" y="431.50"></text></g><g><title>alloc::alloc::alloc (8,475,633 samples, 0.19%)</title><rect x="31.3871%" y="405" width="0.1854%" height="15" fill="rgb(210,219,27)" fg:x="1434719063" fg:w="8475633"/><text x="31.6371%" y="415.50"></text></g><g><title>malloc (8,475,633 samples, 0.19%)</title><rect x="31.3871%" y="389" width="0.1854%" height="15" fill="rgb(252,166,36)" fg:x="1434719063" fg:w="8475633"/><text x="31.6371%" y="399.50"></text></g><g><title>[libc.so.6] (5,626,558 samples, 0.12%)</title><rect x="31.4494%" y="373" width="0.1231%" height="15" fill="rgb(245,132,34)" fg:x="1437568138" fg:w="5626558"/><text x="31.6994%" y="383.50"></text></g><g><title>XLang_Rust::vm::executor::variable::try_eq_as_vmobject (4,652,267 samples, 0.10%)</title><rect x="31.5725%" y="517" width="0.1018%" height="15" fill="rgb(236,54,3)" fg:x="1443194696" fg:w="4652267"/><text x="31.8225%" y="527.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMInt::eq (2,834,962 samples, 0.06%)</title><rect x="31.6123%" y="501" width="0.0620%" height="15" fill="rgb(241,173,43)" fg:x="1445012001" fg:w="2834962"/><text x="31.8623%" y="511.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMInt::new (5,666,740 samples, 0.12%)</title><rect x="32.0459%" y="485" width="0.1240%" height="15" fill="rgb(215,190,9)" fg:x="1464832950" fg:w="5666740"/><text x="32.2959%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (5,666,740 samples, 0.12%)</title><rect x="32.0459%" y="469" width="0.1240%" height="15" fill="rgb(242,101,16)" fg:x="1464832950" fg:w="5666740"/><text x="32.2959%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="453" width="0.0612%" height="15" fill="rgb(223,190,21)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="437" width="0.0612%" height="15" fill="rgb(215,228,25)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="447.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="421" width="0.0612%" height="15" fill="rgb(225,36,22)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="431.50"></text></g><g><title>std::hash::random::RandomState::new (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="405" width="0.0612%" height="15" fill="rgb(251,106,46)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="389" width="0.0612%" height="15" fill="rgb(208,90,1)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="399.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="373" width="0.0612%" height="15" fill="rgb(243,10,4)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="383.50"></text></g><g><title>std::hash::random::RandomState::new::_{{closure}} (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="357" width="0.0612%" height="15" fill="rgb(212,137,27)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="341" width="0.0612%" height="15" fill="rgb(231,220,49)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="325" width="0.0612%" height="15" fill="rgb(237,96,20)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="335.50"></text></g><g><title>core::mem::replace (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="309" width="0.0612%" height="15" fill="rgb(239,229,30)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="319.50"></text></g><g><title>core::ptr::write (2,798,536 samples, 0.06%)</title><rect x="32.1087%" y="293" width="0.0612%" height="15" fill="rgb(219,65,33)" fg:x="1467701154" fg:w="2798536"/><text x="32.3587%" y="303.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_const_type (2,687,933 samples, 0.06%)</title><rect x="32.1699%" y="485" width="0.0588%" height="15" fill="rgb(243,134,7)" fg:x="1470499690" fg:w="2687933"/><text x="32.4199%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,537,691 samples, 0.12%)</title><rect x="32.5111%" y="405" width="0.1211%" height="15" fill="rgb(216,177,54)" fg:x="1486099084" fg:w="5537691"/><text x="32.7611%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,537,691 samples, 0.12%)</title><rect x="32.5111%" y="389" width="0.1211%" height="15" fill="rgb(211,160,20)" fg:x="1486099084" fg:w="5537691"/><text x="32.7611%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (5,537,691 samples, 0.12%)</title><rect x="32.5111%" y="373" width="0.1211%" height="15" fill="rgb(239,85,39)" fg:x="1486099084" fg:w="5537691"/><text x="32.7611%" y="383.50"></text></g><g><title>cfree (5,537,691 samples, 0.12%)</title><rect x="32.5111%" y="357" width="0.1211%" height="15" fill="rgb(232,125,22)" fg:x="1486099084" fg:w="5537691"/><text x="32.7611%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4,776,779 samples, 0.10%)</title><rect x="32.6849%" y="357" width="0.1045%" height="15" fill="rgb(244,57,34)" fg:x="1494043785" fg:w="4776779"/><text x="32.9349%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&lt;&amp;usize&gt;&gt;::sum (4,776,779 samples, 0.10%)</title><rect x="32.6849%" y="341" width="0.1045%" height="15" fill="rgb(214,203,32)" fg:x="1494043785" fg:w="4776779"/><text x="32.9349%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,776,779 samples, 0.10%)</title><rect x="32.6849%" y="325" width="0.1045%" height="15" fill="rgb(207,58,43)" fg:x="1494043785" fg:w="4776779"/><text x="32.9349%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,776,779 samples, 0.10%)</title><rect x="32.6849%" y="309" width="0.1045%" height="15" fill="rgb(215,193,15)" fg:x="1494043785" fg:w="4776779"/><text x="32.9349%" y="319.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,776,779 samples, 0.10%)</title><rect x="32.6849%" y="293" width="0.1045%" height="15" fill="rgb(232,15,44)" fg:x="1494043785" fg:w="4776779"/><text x="32.9349%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,776,779 samples, 0.10%)</title><rect x="32.6849%" y="277" width="0.1045%" height="15" fill="rgb(212,3,48)" fg:x="1494043785" fg:w="4776779"/><text x="32.9349%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (4,776,779 samples, 0.10%)</title><rect x="32.6849%" y="261" width="0.1045%" height="15" fill="rgb(218,128,7)" fg:x="1494043785" fg:w="4776779"/><text x="32.9349%" y="271.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (20,055,511 samples, 0.44%)</title><rect x="32.5111%" y="437" width="0.4388%" height="15" fill="rgb(226,216,39)" fg:x="1486099084" fg:w="20055511"/><text x="32.7611%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (20,055,511 samples, 0.44%)</title><rect x="32.5111%" y="421" width="0.4388%" height="15" fill="rgb(243,47,51)" fg:x="1486099084" fg:w="20055511"/><text x="32.7611%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMInt&gt; (14,517,820 samples, 0.32%)</title><rect x="32.6323%" y="405" width="0.3176%" height="15" fill="rgb(241,183,40)" fg:x="1491636775" fg:w="14517820"/><text x="32.8823%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (14,517,820 samples, 0.32%)</title><rect x="32.6323%" y="389" width="0.3176%" height="15" fill="rgb(231,217,32)" fg:x="1491636775" fg:w="14517820"/><text x="32.8823%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (14,517,820 samples, 0.32%)</title><rect x="32.6323%" y="373" width="0.3176%" height="15" fill="rgb(229,61,38)" fg:x="1491636775" fg:w="14517820"/><text x="32.8823%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (7,334,031 samples, 0.16%)</title><rect x="32.7895%" y="357" width="0.1604%" height="15" fill="rgb(225,210,5)" fg:x="1498820564" fg:w="7334031"/><text x="33.0395%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (7,334,031 samples, 0.16%)</title><rect x="32.7895%" y="341" width="0.1604%" height="15" fill="rgb(231,79,45)" fg:x="1498820564" fg:w="7334031"/><text x="33.0395%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (7,334,031 samples, 0.16%)</title><rect x="32.7895%" y="325" width="0.1604%" height="15" fill="rgb(224,100,7)" fg:x="1498820564" fg:w="7334031"/><text x="33.0395%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (7,334,031 samples, 0.16%)</title><rect x="32.7895%" y="309" width="0.1604%" height="15" fill="rgb(241,198,18)" fg:x="1498820564" fg:w="7334031"/><text x="33.0395%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (7,334,031 samples, 0.16%)</title><rect x="32.7895%" y="293" width="0.1604%" height="15" fill="rgb(252,97,53)" fg:x="1498820564" fg:w="7334031"/><text x="33.0395%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,115,392 samples, 0.05%)</title><rect x="32.9499%" y="437" width="0.0463%" height="15" fill="rgb(220,88,7)" fg:x="1506154595" fg:w="2115392"/><text x="33.1999%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,632,813 samples, 0.06%)</title><rect x="32.9962%" y="437" width="0.0576%" height="15" fill="rgb(213,176,14)" fg:x="1508269987" fg:w="2632813"/><text x="33.2462%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,632,813 samples, 0.06%)</title><rect x="32.9962%" y="421" width="0.0576%" height="15" fill="rgb(246,73,7)" fg:x="1508269987" fg:w="2632813"/><text x="33.2462%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,632,813 samples, 0.06%)</title><rect x="32.9962%" y="405" width="0.0576%" height="15" fill="rgb(245,64,36)" fg:x="1508269987" fg:w="2632813"/><text x="33.2462%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,632,813 samples, 0.06%)</title><rect x="32.9962%" y="389" width="0.0576%" height="15" fill="rgb(245,80,10)" fg:x="1508269987" fg:w="2632813"/><text x="33.2462%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,632,813 samples, 0.06%)</title><rect x="32.9962%" y="373" width="0.0576%" height="15" fill="rgb(232,107,50)" fg:x="1508269987" fg:w="2632813"/><text x="33.2462%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,632,813 samples, 0.06%)</title><rect x="32.9962%" y="357" width="0.0576%" height="15" fill="rgb(253,3,0)" fg:x="1508269987" fg:w="2632813"/><text x="33.2462%" y="367.50"></text></g><g><title>core::ptr::write (2,632,813 samples, 0.06%)</title><rect x="32.9962%" y="341" width="0.0576%" height="15" fill="rgb(212,99,53)" fg:x="1508269987" fg:w="2632813"/><text x="33.2462%" y="351.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::immediate_collect (50,446,489 samples, 1.10%)</title><rect x="32.2287%" y="453" width="1.1036%" height="15" fill="rgb(249,111,54)" fg:x="1473187623" fg:w="50446489"/><text x="32.4787%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="437" width="0.2785%" height="15" fill="rgb(249,55,30)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="421" width="0.2785%" height="15" fill="rgb(237,47,42)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="405" width="0.2785%" height="15" fill="rgb(211,20,18)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="389" width="0.2785%" height="15" fill="rgb(231,203,46)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="373" width="0.2785%" height="15" fill="rgb(237,142,3)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="357" width="0.2785%" height="15" fill="rgb(241,107,1)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="341" width="0.2785%" height="15" fill="rgb(229,83,13)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="325" width="0.2785%" height="15" fill="rgb(241,91,40)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="309" width="0.2785%" height="15" fill="rgb(225,3,45)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="319.50"></text></g><g><title>cfree (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="293" width="0.2785%" height="15" fill="rgb(244,223,14)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="303.50"></text></g><g><title>[libc.so.6] (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="277" width="0.2785%" height="15" fill="rgb(224,124,37)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="287.50"></text></g><g><title>[libc.so.6] (12,731,312 samples, 0.28%)</title><rect x="33.0538%" y="261" width="0.2785%" height="15" fill="rgb(251,171,30)" fg:x="1510902800" fg:w="12731312"/><text x="33.3038%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,914,341 samples, 0.06%)</title><rect x="33.8361%" y="437" width="0.0638%" height="15" fill="rgb(236,46,54)" fg:x="1546664947" fg:w="2914341"/><text x="34.0861%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,914,341 samples, 0.06%)</title><rect x="33.8361%" y="421" width="0.0638%" height="15" fill="rgb(245,213,5)" fg:x="1546664947" fg:w="2914341"/><text x="34.0861%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,914,341 samples, 0.06%)</title><rect x="33.8361%" y="405" width="0.0638%" height="15" fill="rgb(230,144,27)" fg:x="1546664947" fg:w="2914341"/><text x="34.0861%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,914,341 samples, 0.06%)</title><rect x="33.8361%" y="389" width="0.0638%" height="15" fill="rgb(220,86,6)" fg:x="1546664947" fg:w="2914341"/><text x="34.0861%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2,914,341 samples, 0.06%)</title><rect x="33.8361%" y="373" width="0.0638%" height="15" fill="rgb(240,20,13)" fg:x="1546664947" fg:w="2914341"/><text x="34.0861%" y="383.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,914,341 samples, 0.06%)</title><rect x="33.8361%" y="357" width="0.0638%" height="15" fill="rgb(217,89,34)" fg:x="1546664947" fg:w="2914341"/><text x="34.0861%" y="367.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::remove_lowest_bit (2,914,341 samples, 0.06%)</title><rect x="33.8361%" y="341" width="0.0638%" height="15" fill="rgb(229,13,5)" fg:x="1546664947" fg:w="2914341"/><text x="34.0861%" y="351.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_traceable (2,216,271 samples, 0.05%)</title><rect x="33.8999%" y="437" width="0.0485%" height="15" fill="rgb(244,67,35)" fg:x="1549579288" fg:w="2216271"/><text x="34.1499%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,377,366 samples, 0.05%)</title><rect x="33.9484%" y="373" width="0.0520%" height="15" fill="rgb(221,40,2)" fg:x="1551795559" fg:w="2377366"/><text x="34.1984%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13,066,923 samples, 0.29%)</title><rect x="33.9484%" y="437" width="0.2859%" height="15" fill="rgb(237,157,21)" fg:x="1551795559" fg:w="13066923"/><text x="34.1984%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13,066,923 samples, 0.29%)</title><rect x="33.9484%" y="421" width="0.2859%" height="15" fill="rgb(222,94,11)" fg:x="1551795559" fg:w="13066923"/><text x="34.1984%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (13,066,923 samples, 0.29%)</title><rect x="33.9484%" y="405" width="0.2859%" height="15" fill="rgb(249,113,6)" fg:x="1551795559" fg:w="13066923"/><text x="34.1984%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (13,066,923 samples, 0.29%)</title><rect x="33.9484%" y="389" width="0.2859%" height="15" fill="rgb(238,137,36)" fg:x="1551795559" fg:w="13066923"/><text x="34.1984%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (10,689,557 samples, 0.23%)</title><rect x="34.0004%" y="373" width="0.2339%" height="15" fill="rgb(210,102,26)" fg:x="1554172925" fg:w="10689557"/><text x="34.2504%" y="383.50"></text></g><g><title>malloc (8,437,036 samples, 0.18%)</title><rect x="34.0497%" y="357" width="0.1846%" height="15" fill="rgb(218,30,30)" fg:x="1556425446" fg:w="8437036"/><text x="34.2997%" y="367.50"></text></g><g><title>[libc.so.6] (8,437,036 samples, 0.18%)</title><rect x="34.0497%" y="341" width="0.1846%" height="15" fill="rgb(214,67,26)" fg:x="1556425446" fg:w="8437036"/><text x="34.2997%" y="351.50"></text></g><g><title>[libc.so.6] (2,841,607 samples, 0.06%)</title><rect x="34.1721%" y="325" width="0.0622%" height="15" fill="rgb(251,9,53)" fg:x="1562020875" fg:w="2841607"/><text x="34.4221%" y="335.50"></text></g><g><title>alloc::vec::from_elem (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="437" width="0.1690%" height="15" fill="rgb(228,204,25)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="447.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="421" width="0.1690%" height="15" fill="rgb(207,153,8)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="405" width="0.1690%" height="15" fill="rgb(242,9,16)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="389" width="0.1690%" height="15" fill="rgb(217,211,10)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="373" width="0.1690%" height="15" fill="rgb(219,228,52)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="357" width="0.1690%" height="15" fill="rgb(231,92,29)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="341" width="0.1690%" height="15" fill="rgb(232,8,23)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="325" width="0.1690%" height="15" fill="rgb(216,211,34)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="335.50"></text></g><g><title>__libc_calloc (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="309" width="0.1690%" height="15" fill="rgb(236,151,0)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="319.50"></text></g><g><title>[libc.so.6] (7,727,136 samples, 0.17%)</title><rect x="34.2342%" y="293" width="0.1690%" height="15" fill="rgb(209,168,3)" fg:x="1564862482" fg:w="7727136"/><text x="34.4842%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2,635,532 samples, 0.06%)</title><rect x="34.5105%" y="229" width="0.0577%" height="15" fill="rgb(208,129,28)" fg:x="1577488335" fg:w="2635532"/><text x="34.7605%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2,635,532 samples, 0.06%)</title><rect x="34.5105%" y="213" width="0.0577%" height="15" fill="rgb(229,78,22)" fg:x="1577488335" fg:w="2635532"/><text x="34.7605%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2,635,532 samples, 0.06%)</title><rect x="34.5105%" y="197" width="0.0577%" height="15" fill="rgb(228,187,13)" fg:x="1577488335" fg:w="2635532"/><text x="34.7605%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (2,635,532 samples, 0.06%)</title><rect x="34.5105%" y="181" width="0.0577%" height="15" fill="rgb(240,119,24)" fg:x="1577488335" fg:w="2635532"/><text x="34.7605%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (2,635,532 samples, 0.06%)</title><rect x="34.5105%" y="165" width="0.0577%" height="15" fill="rgb(209,194,42)" fg:x="1577488335" fg:w="2635532"/><text x="34.7605%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="437" width="0.2224%" height="15" fill="rgb(247,200,46)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="421" width="0.2224%" height="15" fill="rgb(218,76,16)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="405" width="0.2224%" height="15" fill="rgb(225,21,48)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="389" width="0.2224%" height="15" fill="rgb(239,223,50)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="373" width="0.2224%" height="15" fill="rgb(244,45,21)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="357" width="0.2224%" height="15" fill="rgb(232,33,43)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="341" width="0.2224%" height="15" fill="rgb(209,8,3)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10,166,780 samples, 0.22%)</title><rect x="34.4033%" y="325" width="0.2224%" height="15" fill="rgb(214,25,53)" fg:x="1572589618" fg:w="10166780"/><text x="34.6533%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (7,773,181 samples, 0.17%)</title><rect x="34.4556%" y="309" width="0.1701%" height="15" fill="rgb(254,186,54)" fg:x="1574983217" fg:w="7773181"/><text x="34.7056%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7,773,181 samples, 0.17%)</title><rect x="34.4556%" y="293" width="0.1701%" height="15" fill="rgb(208,174,49)" fg:x="1574983217" fg:w="7773181"/><text x="34.7056%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7,773,181 samples, 0.17%)</title><rect x="34.4556%" y="277" width="0.1701%" height="15" fill="rgb(233,191,51)" fg:x="1574983217" fg:w="7773181"/><text x="34.7056%" y="287.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (7,773,181 samples, 0.17%)</title><rect x="34.4556%" y="261" width="0.1701%" height="15" fill="rgb(222,134,10)" fg:x="1574983217" fg:w="7773181"/><text x="34.7056%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7,773,181 samples, 0.17%)</title><rect x="34.4556%" y="245" width="0.1701%" height="15" fill="rgb(230,226,20)" fg:x="1574983217" fg:w="7773181"/><text x="34.7056%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (2,632,531 samples, 0.06%)</title><rect x="34.5681%" y="229" width="0.0576%" height="15" fill="rgb(251,111,25)" fg:x="1580123867" fg:w="2632531"/><text x="34.8181%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,632,531 samples, 0.06%)</title><rect x="34.5681%" y="213" width="0.0576%" height="15" fill="rgb(224,40,46)" fg:x="1580123867" fg:w="2632531"/><text x="34.8181%" y="223.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,632,531 samples, 0.06%)</title><rect x="34.5681%" y="197" width="0.0576%" height="15" fill="rgb(236,108,47)" fg:x="1580123867" fg:w="2632531"/><text x="34.8181%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,632,531 samples, 0.06%)</title><rect x="34.5681%" y="181" width="0.0576%" height="15" fill="rgb(234,93,0)" fg:x="1580123867" fg:w="2632531"/><text x="34.8181%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,632,531 samples, 0.06%)</title><rect x="34.5681%" y="165" width="0.0576%" height="15" fill="rgb(224,213,32)" fg:x="1580123867" fg:w="2632531"/><text x="34.8181%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="437" width="0.0588%" height="15" fill="rgb(251,11,48)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="421" width="0.0588%" height="15" fill="rgb(236,173,5)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="405" width="0.0588%" height="15" fill="rgb(230,95,12)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="389" width="0.0588%" height="15" fill="rgb(232,209,1)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="373" width="0.0588%" height="15" fill="rgb(232,6,1)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="357" width="0.0588%" height="15" fill="rgb(210,224,50)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="341" width="0.0588%" height="15" fill="rgb(228,127,35)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="325" width="0.0588%" height="15" fill="rgb(245,102,45)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="309" width="0.0588%" height="15" fill="rgb(214,1,49)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="319.50"></text></g><g><title>cfree (2,687,518 samples, 0.06%)</title><rect x="34.6257%" y="293" width="0.0588%" height="15" fill="rgb(226,163,40)" fg:x="1582756398" fg:w="2687518"/><text x="34.8757%" y="303.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="437" width="0.0580%" height="15" fill="rgb(239,212,28)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="421" width="0.0580%" height="15" fill="rgb(220,20,13)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="405" width="0.0580%" height="15" fill="rgb(210,164,35)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="389" width="0.0580%" height="15" fill="rgb(248,109,41)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="373" width="0.0580%" height="15" fill="rgb(238,23,50)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="357" width="0.0580%" height="15" fill="rgb(211,48,49)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="341" width="0.0580%" height="15" fill="rgb(223,36,21)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="325" width="0.0580%" height="15" fill="rgb(207,123,46)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="309" width="0.0580%" height="15" fill="rgb(240,218,32)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="293" width="0.0580%" height="15" fill="rgb(252,5,43)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="277" width="0.0580%" height="15" fill="rgb(252,84,19)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,649,663 samples, 0.06%)</title><rect x="34.6845%" y="261" width="0.0580%" height="15" fill="rgb(243,152,39)" fg:x="1585443916" fg:w="2649663"/><text x="34.9345%" y="271.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::mark (67,258,395 samples, 1.47%)</title><rect x="33.3323%" y="453" width="1.4714%" height="15" fill="rgb(234,160,15)" fg:x="1523634112" fg:w="67258395"/><text x="33.5823%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::keys (2,798,928 samples, 0.06%)</title><rect x="34.7425%" y="437" width="0.0612%" height="15" fill="rgb(237,34,20)" fg:x="1588093579" fg:w="2798928"/><text x="34.9925%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (2,798,928 samples, 0.06%)</title><rect x="34.7425%" y="421" width="0.0612%" height="15" fill="rgb(229,97,13)" fg:x="1588093579" fg:w="2798928"/><text x="34.9925%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2,798,928 samples, 0.06%)</title><rect x="34.7425%" y="405" width="0.0612%" height="15" fill="rgb(234,71,50)" fg:x="1588093579" fg:w="2798928"/><text x="34.9925%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2,798,928 samples, 0.06%)</title><rect x="34.7425%" y="389" width="0.0612%" height="15" fill="rgb(253,155,4)" fg:x="1588093579" fg:w="2798928"/><text x="34.9925%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,798,928 samples, 0.06%)</title><rect x="34.7425%" y="373" width="0.0612%" height="15" fill="rgb(222,185,37)" fg:x="1588093579" fg:w="2798928"/><text x="34.9925%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,355,984 samples, 0.05%)</title><rect x="35.1497%" y="389" width="0.0515%" height="15" fill="rgb(251,177,13)" fg:x="1606710647" fg:w="2355984"/><text x="35.3997%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,355,984 samples, 0.05%)</title><rect x="35.1497%" y="373" width="0.0515%" height="15" fill="rgb(250,179,40)" fg:x="1606710647" fg:w="2355984"/><text x="35.3997%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,355,984 samples, 0.05%)</title><rect x="35.1497%" y="357" width="0.0515%" height="15" fill="rgb(242,44,2)" fg:x="1606710647" fg:w="2355984"/><text x="35.3997%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,355,984 samples, 0.05%)</title><rect x="35.1497%" y="341" width="0.0515%" height="15" fill="rgb(216,177,13)" fg:x="1606710647" fg:w="2355984"/><text x="35.3997%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,355,984 samples, 0.05%)</title><rect x="35.1497%" y="325" width="0.0515%" height="15" fill="rgb(216,106,43)" fg:x="1606710647" fg:w="2355984"/><text x="35.3997%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,355,984 samples, 0.05%)</title><rect x="35.1497%" y="309" width="0.0515%" height="15" fill="rgb(216,183,2)" fg:x="1606710647" fg:w="2355984"/><text x="35.3997%" y="319.50"></text></g><g><title>core::intrinsics::likely (2,355,984 samples, 0.05%)</title><rect x="35.1497%" y="293" width="0.0515%" height="15" fill="rgb(249,75,3)" fg:x="1606710647" fg:w="2355984"/><text x="35.3997%" y="303.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMTuple as XLang_Rust::vm::gc::gc::GCObject&gt;::free (4,847,621 samples, 0.11%)</title><rect x="35.1497%" y="421" width="0.1061%" height="15" fill="rgb(219,67,39)" fg:x="1606710647" fg:w="4847621"/><text x="35.3997%" y="431.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (4,847,621 samples, 0.11%)</title><rect x="35.1497%" y="405" width="0.1061%" height="15" fill="rgb(253,228,2)" fg:x="1606710647" fg:w="4847621"/><text x="35.3997%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="389" width="0.0545%" height="15" fill="rgb(235,138,27)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="373" width="0.0545%" height="15" fill="rgb(236,97,51)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="357" width="0.0545%" height="15" fill="rgb(240,80,30)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="341" width="0.0545%" height="15" fill="rgb(230,178,19)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="325" width="0.0545%" height="15" fill="rgb(210,190,27)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="309" width="0.0545%" height="15" fill="rgb(222,107,31)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="293" width="0.0545%" height="15" fill="rgb(216,127,34)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="303.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_empty (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="277" width="0.0545%" height="15" fill="rgb(234,116,52)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="287.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="261" width="0.0545%" height="15" fill="rgb(222,124,15)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="271.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vreinterpret_u64_u8 (2,491,637 samples, 0.05%)</title><rect x="35.2013%" y="245" width="0.0545%" height="15" fill="rgb(231,179,28)" fg:x="1609066631" fg:w="2491637"/><text x="35.4513%" y="255.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="405" width="0.0608%" height="15" fill="rgb(226,93,45)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="389" width="0.0608%" height="15" fill="rgb(215,8,51)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="373" width="0.0608%" height="15" fill="rgb(223,106,5)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="357" width="0.0608%" height="15" fill="rgb(250,191,5)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="341" width="0.0608%" height="15" fill="rgb(242,132,44)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="325" width="0.0608%" height="15" fill="rgb(251,152,29)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="335.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="309" width="0.0608%" height="15" fill="rgb(218,179,5)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="319.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,778,927 samples, 0.06%)</title><rect x="35.2558%" y="293" width="0.0608%" height="15" fill="rgb(227,67,19)" fg:x="1611558268" fg:w="2778927"/><text x="35.5058%" y="303.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (5,692,172 samples, 0.12%)</title><rect x="35.2558%" y="421" width="0.1245%" height="15" fill="rgb(233,119,31)" fg:x="1611558268" fg:w="5692172"/><text x="35.5058%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="405" width="0.0637%" height="15" fill="rgb(241,120,22)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="389" width="0.0637%" height="15" fill="rgb(224,102,30)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="373" width="0.0637%" height="15" fill="rgb(210,164,37)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="357" width="0.0637%" height="15" fill="rgb(226,191,16)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="341" width="0.0637%" height="15" fill="rgb(214,40,45)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="325" width="0.0637%" height="15" fill="rgb(244,29,26)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="335.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="309" width="0.0637%" height="15" fill="rgb(216,16,5)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="319.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="293" width="0.0637%" height="15" fill="rgb(249,76,35)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="303.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="277" width="0.0637%" height="15" fill="rgb(207,11,44)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="287.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (2,913,245 samples, 0.06%)</title><rect x="35.3166%" y="261" width="0.0637%" height="15" fill="rgb(228,190,49)" fg:x="1614337195" fg:w="2913245"/><text x="35.5666%" y="271.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,084,600 samples, 0.40%)</title><rect x="35.3803%" y="405" width="0.3956%" height="15" fill="rgb(214,173,12)" fg:x="1617250440" fg:w="18084600"/><text x="35.6303%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18,084,600 samples, 0.40%)</title><rect x="35.3803%" y="389" width="0.3956%" height="15" fill="rgb(218,26,35)" fg:x="1617250440" fg:w="18084600"/><text x="35.6303%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (18,084,600 samples, 0.40%)</title><rect x="35.3803%" y="373" width="0.3956%" height="15" fill="rgb(220,200,19)" fg:x="1617250440" fg:w="18084600"/><text x="35.6303%" y="383.50"></text></g><g><title>cfree (18,084,600 samples, 0.40%)</title><rect x="35.3803%" y="357" width="0.3956%" height="15" fill="rgb(239,95,49)" fg:x="1617250440" fg:w="18084600"/><text x="35.6303%" y="367.50"></text></g><g><title>[libc.so.6] (18,084,600 samples, 0.40%)</title><rect x="35.3803%" y="341" width="0.3956%" height="15" fill="rgb(235,85,53)" fg:x="1617250440" fg:w="18084600"/><text x="35.6303%" y="351.50"></text></g><g><title>[libc.so.6] (12,923,223 samples, 0.28%)</title><rect x="35.4932%" y="325" width="0.2827%" height="15" fill="rgb(233,133,31)" fg:x="1622411817" fg:w="12923223"/><text x="35.7432%" y="335.50"></text></g><g><title>[libc.so.6] (7,844,215 samples, 0.17%)</title><rect x="35.6043%" y="309" width="0.1716%" height="15" fill="rgb(218,25,20)" fg:x="1627490825" fg:w="7844215"/><text x="35.8543%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMRange&gt; (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="405" width="0.0553%" height="15" fill="rgb(252,210,38)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="389" width="0.0553%" height="15" fill="rgb(242,134,21)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize&gt;&gt; (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="373" width="0.0553%" height="15" fill="rgb(213,28,48)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize,std::hash::random::RandomState&gt;&gt; (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="357" width="0.0553%" height="15" fill="rgb(250,196,2)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(XLang_Rust::vm::gc::gc::GCRef,usize)&gt;&gt; (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="341" width="0.0553%" height="15" fill="rgb(227,5,17)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="325" width="0.0553%" height="15" fill="rgb(221,226,24)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="309" width="0.0553%" height="15" fill="rgb(211,5,48)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="293" width="0.0553%" height="15" fill="rgb(219,150,6)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="277" width="0.0553%" height="15" fill="rgb(251,46,16)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="261" width="0.0553%" height="15" fill="rgb(220,204,40)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="271.50"></text></g><g><title>cfree (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="245" width="0.0553%" height="15" fill="rgb(211,85,2)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="255.50"></text></g><g><title>[libc.so.6] (2,527,451 samples, 0.06%)</title><rect x="35.7760%" y="229" width="0.0553%" height="15" fill="rgb(229,17,7)" fg:x="1635335040" fg:w="2527451"/><text x="36.0260%" y="239.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (33,865,654 samples, 0.74%)</title><rect x="35.1497%" y="437" width="0.7409%" height="15" fill="rgb(239,72,28)" fg:x="1606710647" fg:w="33865654"/><text x="35.3997%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (23,325,861 samples, 0.51%)</title><rect x="35.3803%" y="421" width="0.5103%" height="15" fill="rgb(230,47,54)" fg:x="1617250440" fg:w="23325861"/><text x="35.6303%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMTuple&gt; (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="405" width="0.0594%" height="15" fill="rgb(214,50,8)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="389" width="0.0594%" height="15" fill="rgb(216,198,43)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="373" width="0.0594%" height="15" fill="rgb(234,20,35)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="357" width="0.0594%" height="15" fill="rgb(254,45,19)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="367.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&lt;&amp;usize&gt;&gt;::sum (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="341" width="0.0594%" height="15" fill="rgb(219,14,44)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="325" width="0.0594%" height="15" fill="rgb(217,220,26)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="309" width="0.0594%" height="15" fill="rgb(213,158,28)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="319.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="293" width="0.0594%" height="15" fill="rgb(252,51,52)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="277" width="0.0594%" height="15" fill="rgb(246,89,16)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (2,713,810 samples, 0.06%)</title><rect x="35.8312%" y="261" width="0.0594%" height="15" fill="rgb(216,158,49)" fg:x="1637862491" fg:w="2713810"/><text x="36.0812%" y="271.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::collect (185,830,123 samples, 4.07%)</title><rect x="32.2287%" y="469" width="4.0654%" height="15" fill="rgb(236,107,19)" fg:x="1473187623" fg:w="185830123"/><text x="32.4787%" y="479.50">XLan..</text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::sweep (68,125,239 samples, 1.49%)</title><rect x="34.8037%" y="453" width="1.4904%" height="15" fill="rgb(228,185,30)" fg:x="1590892507" fg:w="68125239"/><text x="35.0537%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="437" width="0.4034%" height="15" fill="rgb(246,134,8)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="421" width="0.4034%" height="15" fill="rgb(214,143,50)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="405" width="0.4034%" height="15" fill="rgb(228,75,8)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="389" width="0.4034%" height="15" fill="rgb(207,175,4)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="373" width="0.4034%" height="15" fill="rgb(205,108,24)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="357" width="0.4034%" height="15" fill="rgb(244,120,49)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="341" width="0.4034%" height="15" fill="rgb(223,47,38)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="325" width="0.4034%" height="15" fill="rgb(229,179,11)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="309" width="0.4034%" height="15" fill="rgb(231,122,1)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="319.50"></text></g><g><title>cfree (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="293" width="0.4034%" height="15" fill="rgb(245,119,9)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="303.50"></text></g><g><title>[libc.so.6] (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="277" width="0.4034%" height="15" fill="rgb(241,163,25)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="287.50"></text></g><g><title>[libc.so.6] (18,441,445 samples, 0.40%)</title><rect x="35.8906%" y="261" width="0.4034%" height="15" fill="rgb(217,214,3)" fg:x="1640576301" fg:w="18441445"/><text x="36.1406%" y="271.50"></text></g><g><title>[libc.so.6] (13,340,583 samples, 0.29%)</title><rect x="36.0022%" y="245" width="0.2918%" height="15" fill="rgb(240,86,28)" fg:x="1645677163" fg:w="13340583"/><text x="36.2522%" y="255.50"></text></g><g><title>core::ptr::read_volatile (2,322,191 samples, 0.05%)</title><rect x="36.5751%" y="389" width="0.0508%" height="15" fill="rgb(215,47,9)" fg:x="1671866482" fg:w="2322191"/><text x="36.8251%" y="399.50"></text></g><g><title>XLang_Rust::vm::executor::variable::try_sub_as_vmobject (236,899,909 samples, 5.18%)</title><rect x="31.6743%" y="517" width="5.1826%" height="15" fill="rgb(252,25,45)" fg:x="1447846963" fg:w="236899909"/><text x="31.9243%" y="527.50">XLang_..</text></g><g><title>XLang_Rust::vm::executor::variable::VMInt::sub (222,511,006 samples, 4.87%)</title><rect x="31.9891%" y="501" width="4.8678%" height="15" fill="rgb(251,164,9)" fg:x="1462235866" fg:w="222511006"/><text x="32.2391%" y="511.50">XLang_..</text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::new_object (211,559,249 samples, 4.63%)</title><rect x="32.2287%" y="485" width="4.6282%" height="15" fill="rgb(233,194,0)" fg:x="1473187623" fg:w="211559249"/><text x="32.4787%" y="495.50">XLang..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25,729,126 samples, 0.56%)</title><rect x="36.2941%" y="469" width="0.5629%" height="15" fill="rgb(249,111,24)" fg:x="1659017746" fg:w="25729126"/><text x="36.5441%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (15,581,635 samples, 0.34%)</title><rect x="36.5161%" y="453" width="0.3409%" height="15" fill="rgb(250,223,3)" fg:x="1669165237" fg:w="15581635"/><text x="36.7661%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15,581,635 samples, 0.34%)</title><rect x="36.5161%" y="437" width="0.3409%" height="15" fill="rgb(236,178,37)" fg:x="1669165237" fg:w="15581635"/><text x="36.7661%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15,581,635 samples, 0.34%)</title><rect x="36.5161%" y="421" width="0.3409%" height="15" fill="rgb(241,158,50)" fg:x="1669165237" fg:w="15581635"/><text x="36.7661%" y="431.50"></text></g><g><title>alloc::alloc::alloc (15,581,635 samples, 0.34%)</title><rect x="36.5161%" y="405" width="0.3409%" height="15" fill="rgb(213,121,41)" fg:x="1669165237" fg:w="15581635"/><text x="36.7661%" y="415.50"></text></g><g><title>malloc (10,558,199 samples, 0.23%)</title><rect x="36.6259%" y="389" width="0.2310%" height="15" fill="rgb(240,92,3)" fg:x="1674188673" fg:w="10558199"/><text x="36.8759%" y="399.50"></text></g><g><title>[libc.so.6] (2,525,250 samples, 0.06%)</title><rect x="36.8017%" y="373" width="0.0552%" height="15" fill="rgb(205,123,3)" fg:x="1682221622" fg:w="2525250"/><text x="37.0517%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,656,597 samples, 0.12%)</title><rect x="37.1096%" y="501" width="0.1237%" height="15" fill="rgb(205,97,47)" fg:x="1696294308" fg:w="5656597"/><text x="37.3596%" y="511.50"></text></g><g><title>malloc (5,656,597 samples, 0.12%)</title><rect x="37.1096%" y="485" width="0.1237%" height="15" fill="rgb(247,152,14)" fg:x="1696294308" fg:w="5656597"/><text x="37.3596%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (2,908,262 samples, 0.06%)</title><rect x="37.5308%" y="469" width="0.0636%" height="15" fill="rgb(248,195,53)" fg:x="1715551288" fg:w="2908262"/><text x="37.7808%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::isinstance (2,908,262 samples, 0.06%)</title><rect x="37.5308%" y="453" width="0.0636%" height="15" fill="rgb(226,201,16)" fg:x="1715551288" fg:w="2908262"/><text x="37.7808%" y="463.50"></text></g><g><title>&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (2,908,262 samples, 0.06%)</title><rect x="37.5308%" y="437" width="0.0636%" height="15" fill="rgb(205,98,0)" fg:x="1715551288" fg:w="2908262"/><text x="37.7808%" y="447.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2,908,262 samples, 0.06%)</title><rect x="37.5308%" y="421" width="0.0636%" height="15" fill="rgb(214,191,48)" fg:x="1715551288" fg:w="2908262"/><text x="37.7808%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (2,908,262 samples, 0.06%)</title><rect x="37.5308%" y="405" width="0.0636%" height="15" fill="rgb(237,112,39)" fg:x="1715551288" fg:w="2908262"/><text x="37.7808%" y="415.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,868,029 samples, 0.06%)</title><rect x="37.7752%" y="453" width="0.0627%" height="15" fill="rgb(247,203,27)" fg:x="1726722550" fg:w="2868029"/><text x="38.0252%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (2,868,029 samples, 0.06%)</title><rect x="37.7752%" y="437" width="0.0627%" height="15" fill="rgb(235,124,28)" fg:x="1726722550" fg:w="2868029"/><text x="38.0252%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2,868,029 samples, 0.06%)</title><rect x="37.7752%" y="421" width="0.0627%" height="15" fill="rgb(208,207,46)" fg:x="1726722550" fg:w="2868029"/><text x="38.0252%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2,868,029 samples, 0.06%)</title><rect x="37.7752%" y="405" width="0.0627%" height="15" fill="rgb(234,176,4)" fg:x="1726722550" fg:w="2868029"/><text x="38.0252%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,868,029 samples, 0.06%)</title><rect x="37.7752%" y="389" width="0.0627%" height="15" fill="rgb(230,133,28)" fg:x="1726722550" fg:w="2868029"/><text x="38.0252%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::data_end (2,868,029 samples, 0.06%)</title><rect x="37.7752%" y="373" width="0.0627%" height="15" fill="rgb(211,137,40)" fg:x="1726722550" fg:w="2868029"/><text x="38.0252%" y="383.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMNativeFunction as XLang_Rust::vm::gc::gc::GCObject&gt;::get_traceable (5,715,336 samples, 0.13%)</title><rect x="37.8380%" y="453" width="0.1250%" height="15" fill="rgb(254,35,13)" fg:x="1729590579" fg:w="5715336"/><text x="38.0880%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (8,031,934 samples, 0.18%)</title><rect x="37.9630%" y="357" width="0.1757%" height="15" fill="rgb(225,49,51)" fg:x="1735305915" fg:w="8031934"/><text x="38.2130%" y="367.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (8,031,934 samples, 0.18%)</title><rect x="37.9630%" y="341" width="0.1757%" height="15" fill="rgb(251,10,15)" fg:x="1735305915" fg:w="8031934"/><text x="38.2130%" y="351.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (13,660,918 samples, 0.30%)</title><rect x="37.9630%" y="453" width="0.2989%" height="15" fill="rgb(228,207,15)" fg:x="1735305915" fg:w="13660918"/><text x="38.2130%" y="463.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (13,660,918 samples, 0.30%)</title><rect x="37.9630%" y="437" width="0.2989%" height="15" fill="rgb(241,99,19)" fg:x="1735305915" fg:w="13660918"/><text x="38.2130%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (13,660,918 samples, 0.30%)</title><rect x="37.9630%" y="421" width="0.2989%" height="15" fill="rgb(207,104,49)" fg:x="1735305915" fg:w="13660918"/><text x="38.2130%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (13,660,918 samples, 0.30%)</title><rect x="37.9630%" y="405" width="0.2989%" height="15" fill="rgb(234,99,18)" fg:x="1735305915" fg:w="13660918"/><text x="38.2130%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (13,660,918 samples, 0.30%)</title><rect x="37.9630%" y="389" width="0.2989%" height="15" fill="rgb(213,191,49)" fg:x="1735305915" fg:w="13660918"/><text x="38.2130%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (13,660,918 samples, 0.30%)</title><rect x="37.9630%" y="373" width="0.2989%" height="15" fill="rgb(210,226,19)" fg:x="1735305915" fg:w="13660918"/><text x="38.2130%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (5,628,984 samples, 0.12%)</title><rect x="38.1387%" y="357" width="0.1231%" height="15" fill="rgb(229,97,18)" fg:x="1743337849" fg:w="5628984"/><text x="38.3887%" y="367.50"></text></g><g><title>core::intrinsics::unlikely (5,628,984 samples, 0.12%)</title><rect x="38.1387%" y="341" width="0.1231%" height="15" fill="rgb(211,167,15)" fg:x="1743337849" fg:w="5628984"/><text x="38.3887%" y="351.50"></text></g><g><title>core::mem::swap (2,898,335 samples, 0.06%)</title><rect x="38.3727%" y="341" width="0.0634%" height="15" fill="rgb(210,169,34)" fg:x="1754031696" fg:w="2898335"/><text x="38.6227%" y="351.50"></text></g><g><title>core::intrinsics::typed_swap_nonoverlapping (2,898,335 samples, 0.06%)</title><rect x="38.3727%" y="325" width="0.0634%" height="15" fill="rgb(241,121,31)" fg:x="1754031696" fg:w="2898335"/><text x="38.6227%" y="335.50"></text></g><g><title>core::ptr::swap_nonoverlapping (2,898,335 samples, 0.06%)</title><rect x="38.3727%" y="309" width="0.0634%" height="15" fill="rgb(232,40,11)" fg:x="1754031696" fg:w="2898335"/><text x="38.6227%" y="319.50"></text></g><g><title>core::ptr::swap_nonoverlapping::runtime (2,898,335 samples, 0.06%)</title><rect x="38.3727%" y="293" width="0.0634%" height="15" fill="rgb(205,86,26)" fg:x="1754031696" fg:w="2898335"/><text x="38.6227%" y="303.50"></text></g><g><title>core::ptr::swap_nonoverlapping_simple_untyped (2,898,335 samples, 0.06%)</title><rect x="38.3727%" y="277" width="0.0634%" height="15" fill="rgb(231,126,28)" fg:x="1754031696" fg:w="2898335"/><text x="38.6227%" y="287.50"></text></g><g><title>core::ptr::read (2,898,335 samples, 0.06%)</title><rect x="38.3727%" y="261" width="0.0634%" height="15" fill="rgb(219,221,18)" fg:x="1754031696" fg:w="2898335"/><text x="38.6227%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (16,551,053 samples, 0.36%)</title><rect x="38.2619%" y="421" width="0.3621%" height="15" fill="rgb(211,40,0)" fg:x="1748966833" fg:w="16551053"/><text x="38.5119%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (16,551,053 samples, 0.36%)</title><rect x="38.2619%" y="405" width="0.3621%" height="15" fill="rgb(239,85,43)" fg:x="1748966833" fg:w="16551053"/><text x="38.5119%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14,381,005 samples, 0.31%)</title><rect x="38.3093%" y="389" width="0.3146%" height="15" fill="rgb(231,55,21)" fg:x="1751136881" fg:w="14381005"/><text x="38.5593%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (11,486,190 samples, 0.25%)</title><rect x="38.3727%" y="373" width="0.2513%" height="15" fill="rgb(225,184,43)" fg:x="1754031696" fg:w="11486190"/><text x="38.6227%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (11,486,190 samples, 0.25%)</title><rect x="38.3727%" y="357" width="0.2513%" height="15" fill="rgb(251,158,41)" fg:x="1754031696" fg:w="11486190"/><text x="38.6227%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="341" width="0.1879%" height="15" fill="rgb(234,159,37)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="325" width="0.1879%" height="15" fill="rgb(216,204,22)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="309" width="0.1879%" height="15" fill="rgb(214,17,3)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="319.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="293" width="0.1879%" height="15" fill="rgb(212,111,17)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="277" width="0.1879%" height="15" fill="rgb(221,157,24)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="261" width="0.1879%" height="15" fill="rgb(252,16,13)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="271.50"></text></g><g><title>alloc::alloc::alloc (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="245" width="0.1879%" height="15" fill="rgb(221,62,2)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="255.50"></text></g><g><title>malloc (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="229" width="0.1879%" height="15" fill="rgb(247,87,22)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="239.50"></text></g><g><title>[libc.so.6] (8,587,855 samples, 0.19%)</title><rect x="38.4361%" y="213" width="0.1879%" height="15" fill="rgb(215,73,9)" fg:x="1756930031" fg:w="8587855"/><text x="38.6861%" y="223.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (54,608,361 samples, 1.19%)</title><rect x="37.5945%" y="469" width="1.1947%" height="15" fill="rgb(207,175,33)" fg:x="1718459550" fg:w="54608361"/><text x="37.8445%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (24,101,078 samples, 0.53%)</title><rect x="38.2619%" y="453" width="0.5273%" height="15" fill="rgb(243,129,54)" fg:x="1748966833" fg:w="24101078"/><text x="38.5119%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (24,101,078 samples, 0.53%)</title><rect x="38.2619%" y="437" width="0.5273%" height="15" fill="rgb(227,119,45)" fg:x="1748966833" fg:w="24101078"/><text x="38.5119%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="421" width="0.1652%" height="15" fill="rgb(205,109,36)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="405" width="0.1652%" height="15" fill="rgb(205,6,39)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="389" width="0.1652%" height="15" fill="rgb(221,32,16)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="373" width="0.1652%" height="15" fill="rgb(228,144,50)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="357" width="0.1652%" height="15" fill="rgb(229,201,53)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="341" width="0.1652%" height="15" fill="rgb(249,153,27)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="325" width="0.1652%" height="15" fill="rgb(227,106,25)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="309" width="0.1652%" height="15" fill="rgb(230,65,29)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7,550,025 samples, 0.17%)</title><rect x="38.6239%" y="293" width="0.1652%" height="15" fill="rgb(221,57,46)" fg:x="1765517886" fg:w="7550025"/><text x="38.8739%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (13,947,058 samples, 0.31%)</title><rect x="38.7891%" y="469" width="0.3051%" height="15" fill="rgb(229,161,17)" fg:x="1773067911" fg:w="13947058"/><text x="39.0391%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,947,058 samples, 0.31%)</title><rect x="38.7891%" y="453" width="0.3051%" height="15" fill="rgb(222,213,11)" fg:x="1773067911" fg:w="13947058"/><text x="39.0391%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,947,058 samples, 0.31%)</title><rect x="38.7891%" y="437" width="0.3051%" height="15" fill="rgb(235,35,13)" fg:x="1773067911" fg:w="13947058"/><text x="39.0391%" y="447.50"></text></g><g><title>alloc::alloc::alloc (13,947,058 samples, 0.31%)</title><rect x="38.7891%" y="421" width="0.3051%" height="15" fill="rgb(233,158,34)" fg:x="1773067911" fg:w="13947058"/><text x="39.0391%" y="431.50"></text></g><g><title>malloc (13,947,058 samples, 0.31%)</title><rect x="38.7891%" y="405" width="0.3051%" height="15" fill="rgb(215,151,48)" fg:x="1773067911" fg:w="13947058"/><text x="39.0391%" y="415.50"></text></g><g><title>__rdl_dealloc (1,914,625 samples, 0.04%)</title><rect x="39.0942%" y="373" width="0.0419%" height="15" fill="rgb(229,84,14)" fg:x="1787014969" fg:w="1914625"/><text x="39.3442%" y="383.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMVariableWrapper::new (84,056,874 samples, 1.84%)</title><rect x="37.3598%" y="485" width="1.8389%" height="15" fill="rgb(229,68,14)" fg:x="1707731060" fg:w="84056874"/><text x="37.6098%" y="495.50">X..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;mut XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (4,772,965 samples, 0.10%)</title><rect x="39.0942%" y="469" width="0.1044%" height="15" fill="rgb(243,106,26)" fg:x="1787014969" fg:w="4772965"/><text x="39.3442%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;mut XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (4,772,965 samples, 0.10%)</title><rect x="39.0942%" y="453" width="0.1044%" height="15" fill="rgb(206,45,38)" fg:x="1787014969" fg:w="4772965"/><text x="39.3442%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,772,965 samples, 0.10%)</title><rect x="39.0942%" y="437" width="0.1044%" height="15" fill="rgb(226,6,15)" fg:x="1787014969" fg:w="4772965"/><text x="39.3442%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,772,965 samples, 0.10%)</title><rect x="39.0942%" y="421" width="0.1044%" height="15" fill="rgb(232,22,54)" fg:x="1787014969" fg:w="4772965"/><text x="39.3442%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,772,965 samples, 0.10%)</title><rect x="39.0942%" y="405" width="0.1044%" height="15" fill="rgb(229,222,32)" fg:x="1787014969" fg:w="4772965"/><text x="39.3442%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (4,772,965 samples, 0.10%)</title><rect x="39.0942%" y="389" width="0.1044%" height="15" fill="rgb(228,62,29)" fg:x="1787014969" fg:w="4772965"/><text x="39.3442%" y="399.50"></text></g><g><title>cfree (2,858,340 samples, 0.06%)</title><rect x="39.1361%" y="373" width="0.0625%" height="15" fill="rgb(251,103,34)" fg:x="1788929594" fg:w="2858340"/><text x="39.3861%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2,911,045 samples, 0.06%)</title><rect x="39.5522%" y="437" width="0.0637%" height="15" fill="rgb(233,12,30)" fg:x="1807947574" fg:w="2911045"/><text x="39.8022%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,911,045 samples, 0.06%)</title><rect x="39.5522%" y="421" width="0.0637%" height="15" fill="rgb(238,52,0)" fg:x="1807947574" fg:w="2911045"/><text x="39.8022%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,911,045 samples, 0.06%)</title><rect x="39.5522%" y="405" width="0.0637%" height="15" fill="rgb(223,98,5)" fg:x="1807947574" fg:w="2911045"/><text x="39.8022%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2,911,045 samples, 0.06%)</title><rect x="39.5522%" y="389" width="0.0637%" height="15" fill="rgb(228,75,37)" fg:x="1807947574" fg:w="2911045"/><text x="39.8022%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,911,045 samples, 0.06%)</title><rect x="39.5522%" y="373" width="0.0637%" height="15" fill="rgb(205,115,49)" fg:x="1807947574" fg:w="2911045"/><text x="39.8022%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,911,045 samples, 0.06%)</title><rect x="39.5522%" y="357" width="0.0637%" height="15" fill="rgb(250,154,43)" fg:x="1807947574" fg:w="2911045"/><text x="39.8022%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,911,045 samples, 0.06%)</title><rect x="39.5522%" y="341" width="0.0637%" height="15" fill="rgb(226,43,29)" fg:x="1807947574" fg:w="2911045"/><text x="39.8022%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,615,914 samples, 0.19%)</title><rect x="39.6159%" y="405" width="0.1885%" height="15" fill="rgb(249,228,39)" fg:x="1810858619" fg:w="8615914"/><text x="39.8659%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,615,914 samples, 0.19%)</title><rect x="39.6159%" y="389" width="0.1885%" height="15" fill="rgb(216,79,43)" fg:x="1810858619" fg:w="8615914"/><text x="39.8659%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (8,615,914 samples, 0.19%)</title><rect x="39.6159%" y="373" width="0.1885%" height="15" fill="rgb(228,95,12)" fg:x="1810858619" fg:w="8615914"/><text x="39.8659%" y="383.50"></text></g><g><title>cfree (8,615,914 samples, 0.19%)</title><rect x="39.6159%" y="357" width="0.1885%" height="15" fill="rgb(249,221,15)" fg:x="1810858619" fg:w="8615914"/><text x="39.8659%" y="367.50"></text></g><g><title>[libc.so.6] (5,733,089 samples, 0.13%)</title><rect x="39.6789%" y="341" width="0.1254%" height="15" fill="rgb(233,34,13)" fg:x="1813741444" fg:w="5733089"/><text x="39.9289%" y="351.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (28,590,354 samples, 0.63%)</title><rect x="39.6159%" y="437" width="0.6255%" height="15" fill="rgb(214,103,39)" fg:x="1810858619" fg:w="28590354"/><text x="39.8659%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (28,590,354 samples, 0.63%)</title><rect x="39.6159%" y="421" width="0.6255%" height="15" fill="rgb(251,126,39)" fg:x="1810858619" fg:w="28590354"/><text x="39.8659%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMInt&gt; (19,974,440 samples, 0.44%)</title><rect x="39.8043%" y="405" width="0.4370%" height="15" fill="rgb(214,216,36)" fg:x="1819474533" fg:w="19974440"/><text x="40.0543%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (19,974,440 samples, 0.44%)</title><rect x="39.8043%" y="389" width="0.4370%" height="15" fill="rgb(220,221,8)" fg:x="1819474533" fg:w="19974440"/><text x="40.0543%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (19,974,440 samples, 0.44%)</title><rect x="39.8043%" y="373" width="0.4370%" height="15" fill="rgb(240,216,3)" fg:x="1819474533" fg:w="19974440"/><text x="40.0543%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (17,069,212 samples, 0.37%)</title><rect x="39.8679%" y="357" width="0.3734%" height="15" fill="rgb(232,218,17)" fg:x="1822379761" fg:w="17069212"/><text x="40.1179%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (17,069,212 samples, 0.37%)</title><rect x="39.8679%" y="341" width="0.3734%" height="15" fill="rgb(229,163,45)" fg:x="1822379761" fg:w="17069212"/><text x="40.1179%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (17,069,212 samples, 0.37%)</title><rect x="39.8679%" y="325" width="0.3734%" height="15" fill="rgb(231,110,42)" fg:x="1822379761" fg:w="17069212"/><text x="40.1179%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (17,069,212 samples, 0.37%)</title><rect x="39.8679%" y="309" width="0.3734%" height="15" fill="rgb(208,170,48)" fg:x="1822379761" fg:w="17069212"/><text x="40.1179%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (17,069,212 samples, 0.37%)</title><rect x="39.8679%" y="293" width="0.3734%" height="15" fill="rgb(239,116,25)" fg:x="1822379761" fg:w="17069212"/><text x="40.1179%" y="303.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::is_locked (2,959,794 samples, 0.06%)</title><rect x="40.2413%" y="437" width="0.0648%" height="15" fill="rgb(219,200,50)" fg:x="1839448973" fg:w="2959794"/><text x="40.4913%" y="447.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMNativeFunction as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (2,959,794 samples, 0.06%)</title><rect x="40.2413%" y="421" width="0.0648%" height="15" fill="rgb(245,200,0)" fg:x="1839448973" fg:w="2959794"/><text x="40.4913%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,895,935 samples, 0.06%)</title><rect x="40.3061%" y="437" width="0.0634%" height="15" fill="rgb(245,119,33)" fg:x="1842408767" fg:w="2895935"/><text x="40.5561%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,895,935 samples, 0.06%)</title><rect x="40.3061%" y="421" width="0.0634%" height="15" fill="rgb(231,125,12)" fg:x="1842408767" fg:w="2895935"/><text x="40.5561%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,895,935 samples, 0.06%)</title><rect x="40.3061%" y="405" width="0.0634%" height="15" fill="rgb(216,96,41)" fg:x="1842408767" fg:w="2895935"/><text x="40.5561%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,895,935 samples, 0.06%)</title><rect x="40.3061%" y="389" width="0.0634%" height="15" fill="rgb(248,43,45)" fg:x="1842408767" fg:w="2895935"/><text x="40.5561%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,895,935 samples, 0.06%)</title><rect x="40.3061%" y="373" width="0.0634%" height="15" fill="rgb(217,222,7)" fg:x="1842408767" fg:w="2895935"/><text x="40.5561%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,895,935 samples, 0.06%)</title><rect x="40.3061%" y="357" width="0.0634%" height="15" fill="rgb(233,28,6)" fg:x="1842408767" fg:w="2895935"/><text x="40.5561%" y="367.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::immediate_collect (73,985,050 samples, 1.62%)</title><rect x="39.2436%" y="453" width="1.6186%" height="15" fill="rgb(231,218,15)" fg:x="1793840808" fg:w="73985050"/><text x="39.4936%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="437" width="0.4927%" height="15" fill="rgb(226,171,48)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="421" width="0.4927%" height="15" fill="rgb(235,201,9)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="405" width="0.4927%" height="15" fill="rgb(217,80,15)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="389" width="0.4927%" height="15" fill="rgb(219,152,8)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="373" width="0.4927%" height="15" fill="rgb(243,107,38)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="357" width="0.4927%" height="15" fill="rgb(231,17,5)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="341" width="0.4927%" height="15" fill="rgb(209,25,54)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="325" width="0.4927%" height="15" fill="rgb(219,0,2)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="309" width="0.4927%" height="15" fill="rgb(246,9,5)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="319.50"></text></g><g><title>cfree (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="293" width="0.4927%" height="15" fill="rgb(226,159,4)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="303.50"></text></g><g><title>[libc.so.6] (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="277" width="0.4927%" height="15" fill="rgb(219,175,34)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="287.50"></text></g><g><title>[libc.so.6] (22,521,156 samples, 0.49%)</title><rect x="40.3694%" y="261" width="0.4927%" height="15" fill="rgb(236,10,46)" fg:x="1845304702" fg:w="22521156"/><text x="40.6194%" y="271.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_traceable (2,625,202 samples, 0.06%)</title><rect x="41.5283%" y="437" width="0.0574%" height="15" fill="rgb(240,211,16)" fg:x="1898275456" fg:w="2625202"/><text x="41.7783%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,501,089 samples, 0.05%)</title><rect x="41.6429%" y="373" width="0.0547%" height="15" fill="rgb(205,3,43)" fg:x="1903515351" fg:w="2501089"/><text x="41.8929%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15,834,690 samples, 0.35%)</title><rect x="41.5857%" y="437" width="0.3464%" height="15" fill="rgb(245,7,22)" fg:x="1900900658" fg:w="15834690"/><text x="41.8357%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13,219,997 samples, 0.29%)</title><rect x="41.6429%" y="421" width="0.2892%" height="15" fill="rgb(239,132,32)" fg:x="1903515351" fg:w="13219997"/><text x="41.8929%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (13,219,997 samples, 0.29%)</title><rect x="41.6429%" y="405" width="0.2892%" height="15" fill="rgb(228,202,34)" fg:x="1903515351" fg:w="13219997"/><text x="41.8929%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (13,219,997 samples, 0.29%)</title><rect x="41.6429%" y="389" width="0.2892%" height="15" fill="rgb(254,200,22)" fg:x="1903515351" fg:w="13219997"/><text x="41.8929%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (10,718,908 samples, 0.23%)</title><rect x="41.6976%" y="373" width="0.2345%" height="15" fill="rgb(219,10,39)" fg:x="1906016440" fg:w="10718908"/><text x="41.9476%" y="383.50"></text></g><g><title>malloc (10,718,908 samples, 0.23%)</title><rect x="41.6976%" y="357" width="0.2345%" height="15" fill="rgb(226,210,39)" fg:x="1906016440" fg:w="10718908"/><text x="41.9476%" y="367.50"></text></g><g><title>[libc.so.6] (8,095,489 samples, 0.18%)</title><rect x="41.7550%" y="341" width="0.1771%" height="15" fill="rgb(208,219,16)" fg:x="1908639859" fg:w="8095489"/><text x="42.0050%" y="351.50"></text></g><g><title>[libc.so.6] (2,909,643 samples, 0.06%)</title><rect x="41.8684%" y="325" width="0.0637%" height="15" fill="rgb(216,158,51)" fg:x="1913825705" fg:w="2909643"/><text x="42.1184%" y="335.50"></text></g><g><title>alloc::vec::from_elem (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="437" width="0.1801%" height="15" fill="rgb(233,14,44)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="447.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="421" width="0.1801%" height="15" fill="rgb(237,97,39)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="405" width="0.1801%" height="15" fill="rgb(218,198,43)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="389" width="0.1801%" height="15" fill="rgb(231,104,20)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="373" width="0.1801%" height="15" fill="rgb(254,36,13)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="357" width="0.1801%" height="15" fill="rgb(248,14,50)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="341" width="0.1801%" height="15" fill="rgb(217,107,29)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="325" width="0.1801%" height="15" fill="rgb(251,169,33)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="335.50"></text></g><g><title>__libc_calloc (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="309" width="0.1801%" height="15" fill="rgb(217,108,32)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="319.50"></text></g><g><title>[libc.so.6] (8,231,869 samples, 0.18%)</title><rect x="41.9321%" y="293" width="0.1801%" height="15" fill="rgb(219,66,42)" fg:x="1916735348" fg:w="8231869"/><text x="42.1821%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (2,685,656 samples, 0.06%)</title><rect x="42.1122%" y="229" width="0.0588%" height="15" fill="rgb(206,180,7)" fg:x="1924967217" fg:w="2685656"/><text x="42.3622%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (2,685,656 samples, 0.06%)</title><rect x="42.1122%" y="213" width="0.0588%" height="15" fill="rgb(208,226,31)" fg:x="1924967217" fg:w="2685656"/><text x="42.3622%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2,685,656 samples, 0.06%)</title><rect x="42.1122%" y="197" width="0.0588%" height="15" fill="rgb(218,26,49)" fg:x="1924967217" fg:w="2685656"/><text x="42.3622%" y="207.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,685,656 samples, 0.06%)</title><rect x="42.1122%" y="181" width="0.0588%" height="15" fill="rgb(233,197,48)" fg:x="1924967217" fg:w="2685656"/><text x="42.3622%" y="191.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,685,656 samples, 0.06%)</title><rect x="42.1122%" y="165" width="0.0588%" height="15" fill="rgb(252,181,51)" fg:x="1924967217" fg:w="2685656"/><text x="42.3622%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="437" width="0.1200%" height="15" fill="rgb(253,90,19)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="421" width="0.1200%" height="15" fill="rgb(215,171,30)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="405" width="0.1200%" height="15" fill="rgb(214,222,9)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="415.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="389" width="0.1200%" height="15" fill="rgb(223,3,22)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="373" width="0.1200%" height="15" fill="rgb(225,196,46)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="357" width="0.1200%" height="15" fill="rgb(209,110,37)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="341" width="0.1200%" height="15" fill="rgb(249,89,12)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="325" width="0.1200%" height="15" fill="rgb(226,27,33)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="309" width="0.1200%" height="15" fill="rgb(213,82,22)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="293" width="0.1200%" height="15" fill="rgb(248,140,0)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="277" width="0.1200%" height="15" fill="rgb(228,106,3)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="287.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="261" width="0.1200%" height="15" fill="rgb(209,23,37)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5,483,526 samples, 0.12%)</title><rect x="42.1122%" y="245" width="0.1200%" height="15" fill="rgb(241,93,50)" fg:x="1924967217" fg:w="5483526"/><text x="42.3622%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (2,797,870 samples, 0.06%)</title><rect x="42.1709%" y="229" width="0.0612%" height="15" fill="rgb(253,46,43)" fg:x="1927652873" fg:w="2797870"/><text x="42.4209%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,797,870 samples, 0.06%)</title><rect x="42.1709%" y="213" width="0.0612%" height="15" fill="rgb(226,206,43)" fg:x="1927652873" fg:w="2797870"/><text x="42.4209%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,361,428 samples, 0.36%)</title><rect x="42.2322%" y="421" width="0.3579%" height="15" fill="rgb(217,54,7)" fg:x="1930450743" fg:w="16361428"/><text x="42.4822%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (16,361,428 samples, 0.36%)</title><rect x="42.2322%" y="405" width="0.3579%" height="15" fill="rgb(223,5,52)" fg:x="1930450743" fg:w="16361428"/><text x="42.4822%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (13,460,721 samples, 0.29%)</title><rect x="42.2956%" y="389" width="0.2945%" height="15" fill="rgb(206,52,46)" fg:x="1933351450" fg:w="13460721"/><text x="42.5456%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (13,460,721 samples, 0.29%)</title><rect x="42.2956%" y="373" width="0.2945%" height="15" fill="rgb(253,136,11)" fg:x="1933351450" fg:w="13460721"/><text x="42.5456%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,460,721 samples, 0.29%)</title><rect x="42.2956%" y="357" width="0.2945%" height="15" fill="rgb(208,106,33)" fg:x="1933351450" fg:w="13460721"/><text x="42.5456%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13,460,721 samples, 0.29%)</title><rect x="42.2956%" y="341" width="0.2945%" height="15" fill="rgb(206,54,4)" fg:x="1933351450" fg:w="13460721"/><text x="42.5456%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,460,721 samples, 0.29%)</title><rect x="42.2956%" y="325" width="0.2945%" height="15" fill="rgb(213,3,15)" fg:x="1933351450" fg:w="13460721"/><text x="42.5456%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (13,460,721 samples, 0.29%)</title><rect x="42.2956%" y="309" width="0.2945%" height="15" fill="rgb(252,211,39)" fg:x="1933351450" fg:w="13460721"/><text x="42.5456%" y="319.50"></text></g><g><title>cfree (13,460,721 samples, 0.29%)</title><rect x="42.2956%" y="293" width="0.2945%" height="15" fill="rgb(223,6,36)" fg:x="1933351450" fg:w="13460721"/><text x="42.5456%" y="303.50"></text></g><g><title>[libc.so.6] (8,020,479 samples, 0.18%)</title><rect x="42.4146%" y="277" width="0.1755%" height="15" fill="rgb(252,169,45)" fg:x="1938791692" fg:w="8020479"/><text x="42.6646%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (19,009,886 samples, 0.42%)</title><rect x="42.2322%" y="437" width="0.4159%" height="15" fill="rgb(212,48,26)" fg:x="1930450743" fg:w="19009886"/><text x="42.4822%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="421" width="0.0579%" height="15" fill="rgb(251,102,48)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="405" width="0.0579%" height="15" fill="rgb(243,208,16)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="389" width="0.0579%" height="15" fill="rgb(219,96,24)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="373" width="0.0579%" height="15" fill="rgb(219,33,29)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="357" width="0.0579%" height="15" fill="rgb(223,176,5)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="367.50"></text></g><g><title>cfree (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="341" width="0.0579%" height="15" fill="rgb(228,140,14)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="351.50"></text></g><g><title>[libc.so.6] (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="325" width="0.0579%" height="15" fill="rgb(217,179,31)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="335.50"></text></g><g><title>[libc.so.6] (2,648,458 samples, 0.06%)</title><rect x="42.5901%" y="309" width="0.0579%" height="15" fill="rgb(230,9,30)" fg:x="1946812171" fg:w="2648458"/><text x="42.8401%" y="319.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,706,718 samples, 0.06%)</title><rect x="42.6480%" y="341" width="0.0592%" height="15" fill="rgb(230,136,20)" fg:x="1949460629" fg:w="2706718"/><text x="42.8980%" y="351.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,706,718 samples, 0.06%)</title><rect x="42.6480%" y="325" width="0.0592%" height="15" fill="rgb(215,210,22)" fg:x="1949460629" fg:w="2706718"/><text x="42.8980%" y="335.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (2,706,718 samples, 0.06%)</title><rect x="42.6480%" y="309" width="0.0592%" height="15" fill="rgb(218,43,5)" fg:x="1949460629" fg:w="2706718"/><text x="42.8980%" y="319.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (2,706,718 samples, 0.06%)</title><rect x="42.6480%" y="293" width="0.0592%" height="15" fill="rgb(216,11,5)" fg:x="1949460629" fg:w="2706718"/><text x="42.8980%" y="303.50"></text></g><g><title>core::intrinsics::likely (5,461,337 samples, 0.12%)</title><rect x="42.7072%" y="341" width="0.1195%" height="15" fill="rgb(209,82,29)" fg:x="1952167347" fg:w="5461337"/><text x="42.9572%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10,870,846 samples, 0.24%)</title><rect x="42.6480%" y="437" width="0.2378%" height="15" fill="rgb(244,115,12)" fg:x="1949460629" fg:w="10870846"/><text x="42.8980%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10,870,846 samples, 0.24%)</title><rect x="42.6480%" y="421" width="0.2378%" height="15" fill="rgb(222,82,18)" fg:x="1949460629" fg:w="10870846"/><text x="42.8980%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10,870,846 samples, 0.24%)</title><rect x="42.6480%" y="405" width="0.2378%" height="15" fill="rgb(249,227,8)" fg:x="1949460629" fg:w="10870846"/><text x="42.8980%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10,870,846 samples, 0.24%)</title><rect x="42.6480%" y="389" width="0.2378%" height="15" fill="rgb(253,141,45)" fg:x="1949460629" fg:w="10870846"/><text x="42.8980%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10,870,846 samples, 0.24%)</title><rect x="42.6480%" y="373" width="0.2378%" height="15" fill="rgb(234,184,4)" fg:x="1949460629" fg:w="10870846"/><text x="42.8980%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (10,870,846 samples, 0.24%)</title><rect x="42.6480%" y="357" width="0.2378%" height="15" fill="rgb(218,194,23)" fg:x="1949460629" fg:w="10870846"/><text x="42.8980%" y="367.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,702,791 samples, 0.06%)</title><rect x="42.8267%" y="341" width="0.0591%" height="15" fill="rgb(235,66,41)" fg:x="1957628684" fg:w="2702791"/><text x="43.0767%" y="351.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,702,791 samples, 0.06%)</title><rect x="42.8267%" y="325" width="0.0591%" height="15" fill="rgb(245,217,1)" fg:x="1957628684" fg:w="2702791"/><text x="43.0767%" y="335.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::mark (97,945,419 samples, 2.14%)</title><rect x="40.8621%" y="453" width="2.1427%" height="15" fill="rgb(229,91,1)" fg:x="1867825858" fg:w="97945419"/><text x="41.1121%" y="463.50">X..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::keys (5,439,802 samples, 0.12%)</title><rect x="42.8858%" y="437" width="0.1190%" height="15" fill="rgb(207,101,30)" fg:x="1960331475" fg:w="5439802"/><text x="43.1358%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (5,439,802 samples, 0.12%)</title><rect x="42.8858%" y="421" width="0.1190%" height="15" fill="rgb(223,82,49)" fg:x="1960331475" fg:w="5439802"/><text x="43.1358%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (5,439,802 samples, 0.12%)</title><rect x="42.8858%" y="405" width="0.1190%" height="15" fill="rgb(218,167,17)" fg:x="1960331475" fg:w="5439802"/><text x="43.1358%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5,439,802 samples, 0.12%)</title><rect x="42.8858%" y="389" width="0.1190%" height="15" fill="rgb(208,103,14)" fg:x="1960331475" fg:w="5439802"/><text x="43.1358%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (5,439,802 samples, 0.12%)</title><rect x="42.8858%" y="373" width="0.1190%" height="15" fill="rgb(238,20,8)" fg:x="1960331475" fg:w="5439802"/><text x="43.1358%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2,784,207 samples, 0.06%)</title><rect x="42.9439%" y="357" width="0.0609%" height="15" fill="rgb(218,80,54)" fg:x="1962987070" fg:w="2784207"/><text x="43.1939%" y="367.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_full (2,784,207 samples, 0.06%)</title><rect x="42.9439%" y="341" width="0.0609%" height="15" fill="rgb(240,144,17)" fg:x="1962987070" fg:w="2784207"/><text x="43.1939%" y="351.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcgez_s8 (2,784,207 samples, 0.06%)</title><rect x="42.9439%" y="325" width="0.0609%" height="15" fill="rgb(245,27,50)" fg:x="1962987070" fg:w="2784207"/><text x="43.1939%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,757,174 samples, 0.06%)</title><rect x="43.1801%" y="437" width="0.0603%" height="15" fill="rgb(251,51,7)" fg:x="1973782360" fg:w="2757174"/><text x="43.4301%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (2,799,735 samples, 0.06%)</title><rect x="43.3596%" y="341" width="0.0612%" height="15" fill="rgb(245,217,29)" fg:x="1981986228" fg:w="2799735"/><text x="43.6096%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,799,735 samples, 0.06%)</title><rect x="43.3596%" y="325" width="0.0612%" height="15" fill="rgb(221,176,29)" fg:x="1981986228" fg:w="2799735"/><text x="43.6096%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,799,735 samples, 0.06%)</title><rect x="43.3596%" y="309" width="0.0612%" height="15" fill="rgb(212,180,24)" fg:x="1981986228" fg:w="2799735"/><text x="43.6096%" y="319.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (2,799,735 samples, 0.06%)</title><rect x="43.3596%" y="293" width="0.0612%" height="15" fill="rgb(254,24,2)" fg:x="1981986228" fg:w="2799735"/><text x="43.6096%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,799,735 samples, 0.06%)</title><rect x="43.3596%" y="277" width="0.0612%" height="15" fill="rgb(230,100,2)" fg:x="1981986228" fg:w="2799735"/><text x="43.6096%" y="287.50"></text></g><g><title>core::hash::Hasher::write_usize (2,799,735 samples, 0.06%)</title><rect x="43.3596%" y="261" width="0.0612%" height="15" fill="rgb(219,142,25)" fg:x="1981986228" fg:w="2799735"/><text x="43.6096%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (2,799,735 samples, 0.06%)</title><rect x="43.3596%" y="245" width="0.0612%" height="15" fill="rgb(240,73,43)" fg:x="1981986228" fg:w="2799735"/><text x="43.6096%" y="255.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMTuple as XLang_Rust::vm::gc::gc::GCObject&gt;::free (10,935,487 samples, 0.24%)</title><rect x="43.3008%" y="421" width="0.2392%" height="15" fill="rgb(214,114,15)" fg:x="1979300618" fg:w="10935487"/><text x="43.5508%" y="431.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (10,935,487 samples, 0.24%)</title><rect x="43.3008%" y="405" width="0.2392%" height="15" fill="rgb(207,130,4)" fg:x="1979300618" fg:w="10935487"/><text x="43.5508%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8,249,877 samples, 0.18%)</title><rect x="43.3596%" y="389" width="0.1805%" height="15" fill="rgb(221,25,40)" fg:x="1981986228" fg:w="8249877"/><text x="43.6096%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8,249,877 samples, 0.18%)</title><rect x="43.3596%" y="373" width="0.1805%" height="15" fill="rgb(241,184,7)" fg:x="1981986228" fg:w="8249877"/><text x="43.6096%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8,249,877 samples, 0.18%)</title><rect x="43.3596%" y="357" width="0.1805%" height="15" fill="rgb(235,159,4)" fg:x="1981986228" fg:w="8249877"/><text x="43.6096%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5,450,142 samples, 0.12%)</title><rect x="43.4208%" y="341" width="0.1192%" height="15" fill="rgb(214,87,48)" fg:x="1984785963" fg:w="5450142"/><text x="43.6708%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,450,142 samples, 0.12%)</title><rect x="43.4208%" y="325" width="0.1192%" height="15" fill="rgb(246,198,24)" fg:x="1984785963" fg:w="5450142"/><text x="43.6708%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,450,142 samples, 0.12%)</title><rect x="43.4208%" y="309" width="0.1192%" height="15" fill="rgb(209,66,40)" fg:x="1984785963" fg:w="5450142"/><text x="43.6708%" y="319.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (5,450,142 samples, 0.12%)</title><rect x="43.4208%" y="293" width="0.1192%" height="15" fill="rgb(233,147,39)" fg:x="1984785963" fg:w="5450142"/><text x="43.6708%" y="303.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (5,450,142 samples, 0.12%)</title><rect x="43.4208%" y="277" width="0.1192%" height="15" fill="rgb(231,145,52)" fg:x="1984785963" fg:w="5450142"/><text x="43.6708%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="357" width="0.0593%" height="15" fill="rgb(206,20,26)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="341" width="0.0593%" height="15" fill="rgb(238,220,4)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="325" width="0.0593%" height="15" fill="rgb(252,195,42)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="335.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="309" width="0.0593%" height="15" fill="rgb(209,10,6)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="293" width="0.0593%" height="15" fill="rgb(229,3,52)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="277" width="0.0593%" height="15" fill="rgb(253,49,37)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="261" width="0.0593%" height="15" fill="rgb(240,103,49)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="245" width="0.0593%" height="15" fill="rgb(250,182,30)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="229" width="0.0593%" height="15" fill="rgb(248,8,30)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="213" width="0.0593%" height="15" fill="rgb(237,120,30)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,712,590 samples, 0.06%)</title><rect x="43.5401%" y="197" width="0.0593%" height="15" fill="rgb(221,146,34)" fg:x="1990236105" fg:w="2712590"/><text x="43.7901%" y="207.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (5,599,237 samples, 0.12%)</title><rect x="43.5401%" y="421" width="0.1225%" height="15" fill="rgb(242,55,13)" fg:x="1990236105" fg:w="5599237"/><text x="43.7901%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (5,599,237 samples, 0.12%)</title><rect x="43.5401%" y="405" width="0.1225%" height="15" fill="rgb(242,112,31)" fg:x="1990236105" fg:w="5599237"/><text x="43.7901%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (5,599,237 samples, 0.12%)</title><rect x="43.5401%" y="389" width="0.1225%" height="15" fill="rgb(249,192,27)" fg:x="1990236105" fg:w="5599237"/><text x="43.7901%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (5,599,237 samples, 0.12%)</title><rect x="43.5401%" y="373" width="0.1225%" height="15" fill="rgb(208,204,44)" fg:x="1990236105" fg:w="5599237"/><text x="43.7901%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2,886,647 samples, 0.06%)</title><rect x="43.5994%" y="357" width="0.0632%" height="15" fill="rgb(208,93,54)" fg:x="1992948695" fg:w="2886647"/><text x="43.8494%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (2,886,647 samples, 0.06%)</title><rect x="43.5994%" y="341" width="0.0632%" height="15" fill="rgb(242,1,31)" fg:x="1992948695" fg:w="2886647"/><text x="43.8494%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (2,886,647 samples, 0.06%)</title><rect x="43.5994%" y="325" width="0.0632%" height="15" fill="rgb(241,83,25)" fg:x="1992948695" fg:w="2886647"/><text x="43.8494%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (2,886,647 samples, 0.06%)</title><rect x="43.5994%" y="309" width="0.0632%" height="15" fill="rgb(205,169,50)" fg:x="1992948695" fg:w="2886647"/><text x="43.8494%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21,425,526 samples, 0.47%)</title><rect x="43.6626%" y="405" width="0.4687%" height="15" fill="rgb(239,186,37)" fg:x="1995835342" fg:w="21425526"/><text x="43.9126%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21,425,526 samples, 0.47%)</title><rect x="43.6626%" y="389" width="0.4687%" height="15" fill="rgb(205,221,10)" fg:x="1995835342" fg:w="21425526"/><text x="43.9126%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (21,425,526 samples, 0.47%)</title><rect x="43.6626%" y="373" width="0.4687%" height="15" fill="rgb(218,196,15)" fg:x="1995835342" fg:w="21425526"/><text x="43.9126%" y="383.50"></text></g><g><title>cfree (21,425,526 samples, 0.47%)</title><rect x="43.6626%" y="357" width="0.4687%" height="15" fill="rgb(218,196,35)" fg:x="1995835342" fg:w="21425526"/><text x="43.9126%" y="367.50"></text></g><g><title>[libc.so.6] (16,036,362 samples, 0.35%)</title><rect x="43.7805%" y="341" width="0.3508%" height="15" fill="rgb(233,63,24)" fg:x="2001224506" fg:w="16036362"/><text x="44.0305%" y="351.50"></text></g><g><title>[libc.so.6] (13,356,309 samples, 0.29%)</title><rect x="43.8391%" y="325" width="0.2922%" height="15" fill="rgb(225,8,4)" fg:x="2003904559" fg:w="13356309"/><text x="44.0891%" y="335.50"></text></g><g><title>[libc.so.6] (7,777,991 samples, 0.17%)</title><rect x="43.9611%" y="309" width="0.1702%" height="15" fill="rgb(234,105,35)" fg:x="2009482877" fg:w="7777991"/><text x="44.2111%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMRange&gt; (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="405" width="0.1761%" height="15" fill="rgb(236,21,32)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="389" width="0.1761%" height="15" fill="rgb(228,109,6)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="373" width="0.1761%" height="15" fill="rgb(229,215,31)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="357" width="0.1761%" height="15" fill="rgb(221,52,54)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="367.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="341" width="0.1761%" height="15" fill="rgb(252,129,43)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="325" width="0.1761%" height="15" fill="rgb(248,183,27)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="309" width="0.1761%" height="15" fill="rgb(250,0,22)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="293" width="0.1761%" height="15" fill="rgb(213,166,10)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="277" width="0.1761%" height="15" fill="rgb(207,163,36)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="287.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_full (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="261" width="0.1761%" height="15" fill="rgb(208,122,22)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="271.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcgez_s8 (8,050,228 samples, 0.18%)</title><rect x="44.1313%" y="245" width="0.1761%" height="15" fill="rgb(207,104,49)" fg:x="2017260868" fg:w="8050228"/><text x="44.3813%" y="255.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (51,492,045 samples, 1.13%)</title><rect x="43.2404%" y="437" width="1.1265%" height="15" fill="rgb(248,211,50)" fg:x="1976539534" fg:w="51492045"/><text x="43.4904%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (32,196,237 samples, 0.70%)</title><rect x="43.6626%" y="421" width="0.7044%" height="15" fill="rgb(217,13,45)" fg:x="1995835342" fg:w="32196237"/><text x="43.9126%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMTuple&gt; (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="405" width="0.0595%" height="15" fill="rgb(211,216,49)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="389" width="0.0595%" height="15" fill="rgb(221,58,53)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize&gt;&gt; (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="373" width="0.0595%" height="15" fill="rgb(220,112,41)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize,std::hash::random::RandomState&gt;&gt; (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="357" width="0.0595%" height="15" fill="rgb(236,38,28)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(XLang_Rust::vm::gc::gc::GCRef,usize)&gt;&gt; (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="341" width="0.0595%" height="15" fill="rgb(227,195,22)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="325" width="0.0595%" height="15" fill="rgb(214,55,33)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="309" width="0.0595%" height="15" fill="rgb(248,80,13)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="293" width="0.0595%" height="15" fill="rgb(238,52,6)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="277" width="0.0595%" height="15" fill="rgb(224,198,47)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="261" width="0.0595%" height="15" fill="rgb(233,171,20)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="271.50"></text></g><g><title>cfree (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="245" width="0.0595%" height="15" fill="rgb(241,30,25)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="255.50"></text></g><g><title>[libc.so.6] (2,720,483 samples, 0.06%)</title><rect x="44.3074%" y="229" width="0.0595%" height="15" fill="rgb(207,171,38)" fg:x="2025311096" fg:w="2720483"/><text x="44.5574%" y="239.50"></text></g><g><title>alloc::vec::from_elem (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="437" width="0.0589%" height="15" fill="rgb(234,70,1)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="447.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="421" width="0.0589%" height="15" fill="rgb(232,178,18)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="405" width="0.0589%" height="15" fill="rgb(241,78,40)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="389" width="0.0589%" height="15" fill="rgb(222,35,25)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="373" width="0.0589%" height="15" fill="rgb(207,92,16)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="357" width="0.0589%" height="15" fill="rgb(216,59,51)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="341" width="0.0589%" height="15" fill="rgb(213,80,28)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="351.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="325" width="0.0589%" height="15" fill="rgb(220,93,7)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="335.50"></text></g><g><title>__libc_calloc (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="309" width="0.0589%" height="15" fill="rgb(225,24,44)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="319.50"></text></g><g><title>[libc.so.6] (2,694,311 samples, 0.06%)</title><rect x="44.3669%" y="293" width="0.0589%" height="15" fill="rgb(243,74,40)" fg:x="2028031579" fg:w="2694311"/><text x="44.6169%" y="303.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::collect (267,147,061 samples, 5.84%)</title><rect x="39.2436%" y="469" width="5.8443%" height="15" fill="rgb(228,39,7)" fg:x="1793840808" fg:w="267147061"/><text x="39.4936%" y="479.50">XLang_R..</text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::sweep (95,216,592 samples, 2.08%)</title><rect x="43.0049%" y="453" width="2.0830%" height="15" fill="rgb(227,79,8)" fg:x="1965771277" fg:w="95216592"/><text x="43.2549%" y="463.50">X..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="437" width="0.6620%" height="15" fill="rgb(236,58,11)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="421" width="0.6620%" height="15" fill="rgb(249,63,35)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="405" width="0.6620%" height="15" fill="rgb(252,114,16)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="415.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="389" width="0.6620%" height="15" fill="rgb(254,151,24)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="373" width="0.6620%" height="15" fill="rgb(253,54,39)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="357" width="0.6620%" height="15" fill="rgb(243,25,45)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="341" width="0.6620%" height="15" fill="rgb(234,134,9)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="325" width="0.6620%" height="15" fill="rgb(227,166,31)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="309" width="0.6620%" height="15" fill="rgb(245,143,41)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="319.50"></text></g><g><title>cfree (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="293" width="0.6620%" height="15" fill="rgb(238,181,32)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="303.50"></text></g><g><title>[libc.so.6] (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="277" width="0.6620%" height="15" fill="rgb(224,113,18)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="287.50"></text></g><g><title>[libc.so.6] (30,261,979 samples, 0.66%)</title><rect x="44.4259%" y="261" width="0.6620%" height="15" fill="rgb(240,229,28)" fg:x="2030725890" fg:w="30261979"/><text x="44.6759%" y="271.50"></text></g><g><title>[libc.so.6] (16,452,849 samples, 0.36%)</title><rect x="44.7280%" y="245" width="0.3599%" height="15" fill="rgb(250,185,3)" fg:x="2044535020" fg:w="16452849"/><text x="44.9780%" y="255.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::new_object (292,611,032 samples, 6.40%)</title><rect x="39.1986%" y="485" width="6.4014%" height="15" fill="rgb(212,59,25)" fg:x="1791787934" fg:w="292611032"/><text x="39.4486%" y="495.50">XLang_Ru..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (23,411,097 samples, 0.51%)</title><rect x="45.0879%" y="469" width="0.5122%" height="15" fill="rgb(221,87,20)" fg:x="2060987869" fg:w="23411097"/><text x="45.3379%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (12,080,136 samples, 0.26%)</title><rect x="45.3358%" y="453" width="0.2643%" height="15" fill="rgb(213,74,28)" fg:x="2072318830" fg:w="12080136"/><text x="45.5858%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,080,136 samples, 0.26%)</title><rect x="45.3358%" y="437" width="0.2643%" height="15" fill="rgb(224,132,34)" fg:x="2072318830" fg:w="12080136"/><text x="45.5858%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12,080,136 samples, 0.26%)</title><rect x="45.3358%" y="421" width="0.2643%" height="15" fill="rgb(222,101,24)" fg:x="2072318830" fg:w="12080136"/><text x="45.5858%" y="431.50"></text></g><g><title>alloc::alloc::alloc (12,080,136 samples, 0.26%)</title><rect x="45.3358%" y="405" width="0.2643%" height="15" fill="rgb(254,142,4)" fg:x="2072318830" fg:w="12080136"/><text x="45.5858%" y="415.50"></text></g><g><title>malloc (12,080,136 samples, 0.26%)</title><rect x="45.3358%" y="389" width="0.2643%" height="15" fill="rgb(230,229,49)" fg:x="2072318830" fg:w="12080136"/><text x="45.5858%" y="399.50"></text></g><g><title>[libc.so.6] (9,970,885 samples, 0.22%)</title><rect x="45.3819%" y="373" width="0.2181%" height="15" fill="rgb(238,70,47)" fg:x="2074428081" fg:w="9970885"/><text x="45.6319%" y="383.50"></text></g><g><title>[libc.so.6] (2,873,786 samples, 0.06%)</title><rect x="45.5372%" y="357" width="0.0629%" height="15" fill="rgb(231,160,17)" fg:x="2081525180" fg:w="2873786"/><text x="45.7872%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last_mut (2,033,040 samples, 0.04%)</title><rect x="45.6001%" y="485" width="0.0445%" height="15" fill="rgb(218,68,53)" fg:x="2084398966" fg:w="2033040"/><text x="45.8501%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="421" width="0.2469%" height="15" fill="rgb(236,111,10)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="405" width="0.2469%" height="15" fill="rgb(224,34,41)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="389" width="0.2469%" height="15" fill="rgb(241,118,19)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="373" width="0.2469%" height="15" fill="rgb(238,129,25)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="357" width="0.2469%" height="15" fill="rgb(238,22,31)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="341" width="0.2469%" height="15" fill="rgb(222,174,48)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="325" width="0.2469%" height="15" fill="rgb(206,152,40)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="335.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="309" width="0.2469%" height="15" fill="rgb(218,99,54)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="293" width="0.2469%" height="15" fill="rgb(220,174,26)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="277" width="0.2469%" height="15" fill="rgb(245,116,9)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="287.50"></text></g><g><title>alloc::alloc::alloc (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="261" width="0.2469%" height="15" fill="rgb(209,72,35)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="271.50"></text></g><g><title>malloc (11,287,148 samples, 0.25%)</title><rect x="45.8742%" y="245" width="0.2469%" height="15" fill="rgb(226,126,21)" fg:x="2096930758" fg:w="11287148"/><text x="46.1242%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (21,917,332 samples, 0.48%)</title><rect x="45.7056%" y="453" width="0.4795%" height="15" fill="rgb(227,192,1)" fg:x="2089222184" fg:w="21917332"/><text x="45.9556%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (21,917,332 samples, 0.48%)</title><rect x="45.7056%" y="437" width="0.4795%" height="15" fill="rgb(237,180,29)" fg:x="2089222184" fg:w="21917332"/><text x="45.9556%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (2,921,610 samples, 0.06%)</title><rect x="46.1211%" y="421" width="0.0639%" height="15" fill="rgb(230,197,35)" fg:x="2108217906" fg:w="2921610"/><text x="46.3711%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (2,921,610 samples, 0.06%)</title><rect x="46.1211%" y="405" width="0.0639%" height="15" fill="rgb(246,193,31)" fg:x="2108217906" fg:w="2921610"/><text x="46.3711%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (2,921,610 samples, 0.06%)</title><rect x="46.1211%" y="389" width="0.0639%" height="15" fill="rgb(241,36,4)" fg:x="2108217906" fg:w="2921610"/><text x="46.3711%" y="399.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (2,110,004 samples, 0.05%)</title><rect x="46.2350%" y="421" width="0.0462%" height="15" fill="rgb(241,130,17)" fg:x="2113421709" fg:w="2110004"/><text x="46.4850%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2,110,004 samples, 0.05%)</title><rect x="46.2350%" y="405" width="0.0462%" height="15" fill="rgb(206,137,32)" fg:x="2113421709" fg:w="2110004"/><text x="46.4850%" y="415.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2,110,004 samples, 0.05%)</title><rect x="46.2350%" y="389" width="0.0462%" height="15" fill="rgb(237,228,51)" fg:x="2113421709" fg:w="2110004"/><text x="46.4850%" y="399.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2,110,004 samples, 0.05%)</title><rect x="46.2350%" y="373" width="0.0462%" height="15" fill="rgb(243,6,42)" fg:x="2113421709" fg:w="2110004"/><text x="46.4850%" y="383.50"></text></g><g><title>XLang_Rust::vm::executor::context::Context::let_var (424,028,930 samples, 9.28%)</title><rect x="37.2333%" y="501" width="9.2764%" height="15" fill="rgb(251,74,28)" fg:x="1701950905" fg:w="424028930"/><text x="37.4833%" y="511.50">XLang_Rust::v..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (39,547,829 samples, 0.87%)</title><rect x="45.6445%" y="485" width="0.8652%" height="15" fill="rgb(218,20,49)" fg:x="2086432006" fg:w="39547829"/><text x="45.8945%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (36,757,651 samples, 0.80%)</title><rect x="45.7056%" y="469" width="0.8041%" height="15" fill="rgb(238,28,14)" fg:x="2089222184" fg:w="36757651"/><text x="45.9556%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (14,840,319 samples, 0.32%)</title><rect x="46.1851%" y="453" width="0.3247%" height="15" fill="rgb(229,40,46)" fg:x="2111139516" fg:w="14840319"/><text x="46.4351%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14,840,319 samples, 0.32%)</title><rect x="46.1851%" y="437" width="0.3247%" height="15" fill="rgb(244,195,20)" fg:x="2111139516" fg:w="14840319"/><text x="46.4351%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="421" width="0.2286%" height="15" fill="rgb(253,56,35)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="405" width="0.2286%" height="15" fill="rgb(210,149,44)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="389" width="0.2286%" height="15" fill="rgb(240,135,12)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="399.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="373" width="0.2286%" height="15" fill="rgb(251,24,50)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="357" width="0.2286%" height="15" fill="rgb(243,200,47)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="341" width="0.2286%" height="15" fill="rgb(224,166,26)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="351.50"></text></g><g><title>core::hash::Hasher::write_u8 (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="325" width="0.2286%" height="15" fill="rgb(233,0,47)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10,448,122 samples, 0.23%)</title><rect x="46.2811%" y="309" width="0.2286%" height="15" fill="rgb(253,80,5)" fg:x="2115531713" fg:w="10448122"/><text x="46.5311%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (4,931,456 samples, 0.11%)</title><rect x="46.4018%" y="293" width="0.1079%" height="15" fill="rgb(214,133,25)" fg:x="2121048379" fg:w="4931456"/><text x="46.6518%" y="303.50"></text></g><g><title>XLang_Rust::vm::executor::context::Context::new_frame (5,574,987 samples, 0.12%)</title><rect x="46.5097%" y="501" width="0.1220%" height="15" fill="rgb(209,27,14)" fg:x="2125979835" fg:w="5574987"/><text x="46.7597%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5,574,987 samples, 0.12%)</title><rect x="46.5097%" y="485" width="0.1220%" height="15" fill="rgb(219,102,51)" fg:x="2125979835" fg:w="5574987"/><text x="46.7597%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (5,574,987 samples, 0.12%)</title><rect x="46.5097%" y="469" width="0.1220%" height="15" fill="rgb(237,18,16)" fg:x="2125979835" fg:w="5574987"/><text x="46.7597%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (5,574,987 samples, 0.12%)</title><rect x="46.5097%" y="453" width="0.1220%" height="15" fill="rgb(241,85,17)" fg:x="2125979835" fg:w="5574987"/><text x="46.7597%" y="463.50"></text></g><g><title>&lt;&amp;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="469" width="0.1188%" height="15" fill="rgb(236,90,42)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="453" width="0.1188%" height="15" fill="rgb(249,57,21)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="437" width="0.1188%" height="15" fill="rgb(243,12,36)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="421" width="0.1188%" height="15" fill="rgb(253,128,47)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="405" width="0.1188%" height="15" fill="rgb(207,33,20)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="389" width="0.1188%" height="15" fill="rgb(233,215,35)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="399.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_full (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="373" width="0.1188%" height="15" fill="rgb(249,188,52)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="383.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcgez_s8 (5,429,918 samples, 0.12%)</title><rect x="46.9435%" y="357" width="0.1188%" height="15" fill="rgb(225,12,32)" fg:x="2145809016" fg:w="5429918"/><text x="47.1935%" y="367.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::clone::Clone&gt;::clone (2,453,448 samples, 0.05%)</title><rect x="47.0623%" y="469" width="0.0537%" height="15" fill="rgb(247,98,14)" fg:x="2151238934" fg:w="2453448"/><text x="47.3123%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="469" width="0.0631%" height="15" fill="rgb(247,219,48)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="453" width="0.0631%" height="15" fill="rgb(253,60,48)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="437" width="0.0631%" height="15" fill="rgb(245,15,52)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="421" width="0.0631%" height="15" fill="rgb(220,133,28)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="431.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="405" width="0.0631%" height="15" fill="rgb(217,180,4)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="415.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="389" width="0.0631%" height="15" fill="rgb(251,24,1)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="399.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="373" width="0.0631%" height="15" fill="rgb(212,185,49)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="383.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (2,882,324 samples, 0.06%)</title><rect x="47.1160%" y="357" width="0.0631%" height="15" fill="rgb(215,175,22)" fg:x="2153692382" fg:w="2882324"/><text x="47.3660%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot_in_group (5,772,340 samples, 0.13%)</title><rect x="47.1790%" y="373" width="0.1263%" height="15" fill="rgb(250,205,14)" fg:x="2156574706" fg:w="5772340"/><text x="47.4290%" y="383.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (5,772,340 samples, 0.13%)</title><rect x="47.1790%" y="357" width="0.1263%" height="15" fill="rgb(225,211,22)" fg:x="2156574706" fg:w="5772340"/><text x="47.4290%" y="367.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert (11,452,683 samples, 0.25%)</title><rect x="47.1790%" y="469" width="0.2505%" height="15" fill="rgb(251,179,42)" fg:x="2156574706" fg:w="11452683"/><text x="47.4290%" y="479.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (11,452,683 samples, 0.25%)</title><rect x="47.1790%" y="453" width="0.2505%" height="15" fill="rgb(208,216,51)" fg:x="2156574706" fg:w="11452683"/><text x="47.4290%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (11,452,683 samples, 0.25%)</title><rect x="47.1790%" y="437" width="0.2505%" height="15" fill="rgb(235,36,11)" fg:x="2156574706" fg:w="11452683"/><text x="47.4290%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (11,452,683 samples, 0.25%)</title><rect x="47.1790%" y="421" width="0.2505%" height="15" fill="rgb(213,189,28)" fg:x="2156574706" fg:w="11452683"/><text x="47.4290%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_insert_slot (11,452,683 samples, 0.25%)</title><rect x="47.1790%" y="405" width="0.2505%" height="15" fill="rgb(227,203,42)" fg:x="2156574706" fg:w="11452683"/><text x="47.4290%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_insert_slot (11,452,683 samples, 0.25%)</title><rect x="47.1790%" y="389" width="0.2505%" height="15" fill="rgb(244,72,36)" fg:x="2156574706" fg:w="11452683"/><text x="47.4290%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (5,680,343 samples, 0.12%)</title><rect x="47.3053%" y="373" width="0.1243%" height="15" fill="rgb(213,53,17)" fg:x="2162347046" fg:w="5680343"/><text x="47.5553%" y="383.50"></text></g><g><title>core::intrinsics::unlikely (5,680,343 samples, 0.12%)</title><rect x="47.3053%" y="357" width="0.1243%" height="15" fill="rgb(207,167,3)" fg:x="2162347046" fg:w="5680343"/><text x="47.5553%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (13,159,773 samples, 0.29%)</title><rect x="47.4794%" y="325" width="0.2879%" height="15" fill="rgb(216,98,30)" fg:x="2170302766" fg:w="13159773"/><text x="47.7294%" y="335.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (13,159,773 samples, 0.29%)</title><rect x="47.4794%" y="309" width="0.2879%" height="15" fill="rgb(236,123,15)" fg:x="2170302766" fg:w="13159773"/><text x="47.7294%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13,159,773 samples, 0.29%)</title><rect x="47.4794%" y="293" width="0.2879%" height="15" fill="rgb(248,81,50)" fg:x="2170302766" fg:w="13159773"/><text x="47.7294%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13,159,773 samples, 0.29%)</title><rect x="47.4794%" y="277" width="0.2879%" height="15" fill="rgb(214,120,4)" fg:x="2170302766" fg:w="13159773"/><text x="47.7294%" y="287.50"></text></g><g><title>alloc::alloc::alloc (13,159,773 samples, 0.29%)</title><rect x="47.4794%" y="261" width="0.2879%" height="15" fill="rgb(208,179,34)" fg:x="2170302766" fg:w="13159773"/><text x="47.7294%" y="271.50"></text></g><g><title>malloc (13,159,773 samples, 0.29%)</title><rect x="47.4794%" y="245" width="0.2879%" height="15" fill="rgb(227,140,7)" fg:x="2170302766" fg:w="13159773"/><text x="47.7294%" y="255.50"></text></g><g><title>[libc.so.6] (11,033,770 samples, 0.24%)</title><rect x="47.5259%" y="229" width="0.2414%" height="15" fill="rgb(214,22,6)" fg:x="2172428769" fg:w="11033770"/><text x="47.7759%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (18,144,033 samples, 0.40%)</title><rect x="47.4296%" y="437" width="0.3969%" height="15" fill="rgb(207,137,27)" fg:x="2168027389" fg:w="18144033"/><text x="47.6796%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (18,144,033 samples, 0.40%)</title><rect x="47.4296%" y="421" width="0.3969%" height="15" fill="rgb(210,8,46)" fg:x="2168027389" fg:w="18144033"/><text x="47.6796%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15,868,656 samples, 0.35%)</title><rect x="47.4794%" y="405" width="0.3472%" height="15" fill="rgb(240,16,54)" fg:x="2170302766" fg:w="15868656"/><text x="47.7294%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (15,868,656 samples, 0.35%)</title><rect x="47.4794%" y="389" width="0.3472%" height="15" fill="rgb(211,209,29)" fg:x="2170302766" fg:w="15868656"/><text x="47.7294%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (15,868,656 samples, 0.35%)</title><rect x="47.4794%" y="373" width="0.3472%" height="15" fill="rgb(226,228,24)" fg:x="2170302766" fg:w="15868656"/><text x="47.7294%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (15,868,656 samples, 0.35%)</title><rect x="47.4794%" y="357" width="0.3472%" height="15" fill="rgb(222,84,9)" fg:x="2170302766" fg:w="15868656"/><text x="47.7294%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (15,868,656 samples, 0.35%)</title><rect x="47.4794%" y="341" width="0.3472%" height="15" fill="rgb(234,203,30)" fg:x="2170302766" fg:w="15868656"/><text x="47.7294%" y="351.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (2,708,883 samples, 0.06%)</title><rect x="47.7673%" y="325" width="0.0593%" height="15" fill="rgb(238,109,14)" fg:x="2183462539" fg:w="2708883"/><text x="48.0173%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (3,059,890 samples, 0.07%)</title><rect x="47.8745%" y="293" width="0.0669%" height="15" fill="rgb(233,206,34)" fg:x="2188362909" fg:w="3059890"/><text x="48.1245%" y="303.50"></text></g><g><title>hashbrown::map::make_hash (7,854,830 samples, 0.17%)</title><rect x="47.8265%" y="437" width="0.1718%" height="15" fill="rgb(220,167,47)" fg:x="2186171422" fg:w="7854830"/><text x="48.0765%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,854,830 samples, 0.17%)</title><rect x="47.8265%" y="421" width="0.1718%" height="15" fill="rgb(238,105,10)" fg:x="2186171422" fg:w="7854830"/><text x="48.0765%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7,854,830 samples, 0.17%)</title><rect x="47.8265%" y="405" width="0.1718%" height="15" fill="rgb(213,227,17)" fg:x="2186171422" fg:w="7854830"/><text x="48.0765%" y="415.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (5,663,343 samples, 0.12%)</title><rect x="47.8745%" y="389" width="0.1239%" height="15" fill="rgb(217,132,38)" fg:x="2188362909" fg:w="5663343"/><text x="48.1245%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (5,663,343 samples, 0.12%)</title><rect x="47.8745%" y="373" width="0.1239%" height="15" fill="rgb(242,146,4)" fg:x="2188362909" fg:w="5663343"/><text x="48.1245%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (5,663,343 samples, 0.12%)</title><rect x="47.8745%" y="357" width="0.1239%" height="15" fill="rgb(212,61,9)" fg:x="2188362909" fg:w="5663343"/><text x="48.1245%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5,663,343 samples, 0.12%)</title><rect x="47.8745%" y="341" width="0.1239%" height="15" fill="rgb(247,126,22)" fg:x="2188362909" fg:w="5663343"/><text x="48.1245%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5,663,343 samples, 0.12%)</title><rect x="47.8745%" y="325" width="0.1239%" height="15" fill="rgb(220,196,2)" fg:x="2188362909" fg:w="5663343"/><text x="48.1245%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,663,343 samples, 0.12%)</title><rect x="47.8745%" y="309" width="0.1239%" height="15" fill="rgb(208,46,4)" fg:x="2188362909" fg:w="5663343"/><text x="48.1245%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,603,453 samples, 0.06%)</title><rect x="47.9414%" y="293" width="0.0570%" height="15" fill="rgb(252,104,46)" fg:x="2191422799" fg:w="2603453"/><text x="48.1914%" y="303.50"></text></g><g><title>core::intrinsics::likely (5,170,045 samples, 0.11%)</title><rect x="47.9984%" y="405" width="0.1131%" height="15" fill="rgb(237,152,48)" fg:x="2194026252" fg:w="5170045"/><text x="48.2484%" y="415.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (9,349,227 samples, 0.20%)</title><rect x="48.1115%" y="405" width="0.2045%" height="15" fill="rgb(221,59,37)" fg:x="2199196297" fg:w="9349227"/><text x="48.3615%" y="415.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (9,349,227 samples, 0.20%)</title><rect x="48.1115%" y="389" width="0.2045%" height="15" fill="rgb(209,202,51)" fg:x="2199196297" fg:w="9349227"/><text x="48.3615%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (43,319,981 samples, 0.95%)</title><rect x="47.4296%" y="469" width="0.9477%" height="15" fill="rgb(228,81,30)" fg:x="2168027389" fg:w="43319981"/><text x="47.6796%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (43,319,981 samples, 0.95%)</title><rect x="47.4296%" y="453" width="0.9477%" height="15" fill="rgb(227,42,39)" fg:x="2168027389" fg:w="43319981"/><text x="47.6796%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17,321,118 samples, 0.38%)</title><rect x="47.9984%" y="437" width="0.3789%" height="15" fill="rgb(221,26,2)" fg:x="2194026252" fg:w="17321118"/><text x="48.2484%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (17,321,118 samples, 0.38%)</title><rect x="47.9984%" y="421" width="0.3789%" height="15" fill="rgb(254,61,31)" fg:x="2194026252" fg:w="17321118"/><text x="48.2484%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (2,801,846 samples, 0.06%)</title><rect x="48.3160%" y="405" width="0.0613%" height="15" fill="rgb(222,173,38)" fg:x="2208545524" fg:w="2801846"/><text x="48.5660%" y="415.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::new (79,808,775 samples, 1.75%)</title><rect x="46.6946%" y="485" width="1.7460%" height="15" fill="rgb(218,50,12)" fg:x="2134430408" fg:w="79808775"/><text x="46.9446%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="469" width="0.0633%" height="15" fill="rgb(223,88,40)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="453" width="0.0633%" height="15" fill="rgb(237,54,19)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="463.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="437" width="0.0633%" height="15" fill="rgb(251,129,25)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="447.50"></text></g><g><title>std::hash::random::RandomState::new (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="421" width="0.0633%" height="15" fill="rgb(238,97,19)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="405" width="0.0633%" height="15" fill="rgb(240,169,18)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="389" width="0.0633%" height="15" fill="rgb(230,187,49)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="399.50"></text></g><g><title>std::hash::random::RandomState::new::_{{closure}} (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="373" width="0.0633%" height="15" fill="rgb(209,44,26)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="357" width="0.0633%" height="15" fill="rgb(244,0,6)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="341" width="0.0633%" height="15" fill="rgb(248,18,21)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="351.50"></text></g><g><title>core::mem::replace (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="325" width="0.0633%" height="15" fill="rgb(245,180,19)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="335.50"></text></g><g><title>core::ptr::write (2,891,813 samples, 0.06%)</title><rect x="48.3773%" y="309" width="0.0633%" height="15" fill="rgb(252,118,36)" fg:x="2211347370" fg:w="2891813"/><text x="48.6273%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (5,245,651 samples, 0.11%)</title><rect x="48.4405%" y="485" width="0.1148%" height="15" fill="rgb(210,224,19)" fg:x="2214239183" fg:w="5245651"/><text x="48.6905%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,245,651 samples, 0.11%)</title><rect x="48.4405%" y="469" width="0.1148%" height="15" fill="rgb(218,30,24)" fg:x="2214239183" fg:w="5245651"/><text x="48.6905%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,245,651 samples, 0.11%)</title><rect x="48.4405%" y="453" width="0.1148%" height="15" fill="rgb(219,75,50)" fg:x="2214239183" fg:w="5245651"/><text x="48.6905%" y="463.50"></text></g><g><title>alloc::alloc::alloc (5,245,651 samples, 0.11%)</title><rect x="48.4405%" y="437" width="0.1148%" height="15" fill="rgb(234,72,50)" fg:x="2214239183" fg:w="5245651"/><text x="48.6905%" y="447.50"></text></g><g><title>__rdl_alloc (5,245,651 samples, 0.11%)</title><rect x="48.4405%" y="421" width="0.1148%" height="15" fill="rgb(219,100,48)" fg:x="2214239183" fg:w="5245651"/><text x="48.6905%" y="431.50"></text></g><g><title>XLang_Rust::vm::executor::variable::VMVariableWrapper::new (93,429,622 samples, 2.04%)</title><rect x="46.6317%" y="501" width="2.0439%" height="15" fill="rgb(253,5,41)" fg:x="2131554822" fg:w="93429622"/><text x="46.8817%" y="511.50">X..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;mut XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,499,610 samples, 0.12%)</title><rect x="48.5553%" y="485" width="0.1203%" height="15" fill="rgb(247,181,11)" fg:x="2219484834" fg:w="5499610"/><text x="48.8053%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;mut XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,499,610 samples, 0.12%)</title><rect x="48.5553%" y="469" width="0.1203%" height="15" fill="rgb(222,223,25)" fg:x="2219484834" fg:w="5499610"/><text x="48.8053%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,499,610 samples, 0.12%)</title><rect x="48.5553%" y="453" width="0.1203%" height="15" fill="rgb(214,198,28)" fg:x="2219484834" fg:w="5499610"/><text x="48.8053%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,499,610 samples, 0.12%)</title><rect x="48.5553%" y="437" width="0.1203%" height="15" fill="rgb(230,46,43)" fg:x="2219484834" fg:w="5499610"/><text x="48.8053%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,499,610 samples, 0.12%)</title><rect x="48.5553%" y="421" width="0.1203%" height="15" fill="rgb(233,65,53)" fg:x="2219484834" fg:w="5499610"/><text x="48.8053%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (5,499,610 samples, 0.12%)</title><rect x="48.5553%" y="405" width="0.1203%" height="15" fill="rgb(221,121,27)" fg:x="2219484834" fg:w="5499610"/><text x="48.8053%" y="415.50"></text></g><g><title>cfree (5,499,610 samples, 0.12%)</title><rect x="48.5553%" y="389" width="0.1203%" height="15" fill="rgb(247,70,47)" fg:x="2219484834" fg:w="5499610"/><text x="48.8053%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMNamed as XLang_Rust::vm::executor::variable::VMObject&gt;::value_ref (2,824,203 samples, 0.06%)</title><rect x="48.9098%" y="485" width="0.0618%" height="15" fill="rgb(228,85,35)" fg:x="2235689277" fg:w="2824203"/><text x="49.1598%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_type (2,903,398 samples, 0.06%)</title><rect x="48.9716%" y="485" width="0.0635%" height="15" fill="rgb(209,50,18)" fg:x="2238513480" fg:w="2903398"/><text x="49.2216%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (2,903,398 samples, 0.06%)</title><rect x="48.9716%" y="469" width="0.0635%" height="15" fill="rgb(250,19,35)" fg:x="2238513480" fg:w="2903398"/><text x="49.2216%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (2,903,398 samples, 0.06%)</title><rect x="48.9716%" y="453" width="0.0635%" height="15" fill="rgb(253,107,29)" fg:x="2238513480" fg:w="2903398"/><text x="49.2216%" y="463.50"></text></g><g><title>XLang_Rust::vm::executor::variable::try_value_ref_as_vmobject (22,219,334 samples, 0.49%)</title><rect x="48.6756%" y="501" width="0.4861%" height="15" fill="rgb(252,179,29)" fg:x="2224984444" fg:w="22219334"/><text x="48.9256%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (5,786,900 samples, 0.13%)</title><rect x="49.0351%" y="485" width="0.1266%" height="15" fill="rgb(238,194,6)" fg:x="2241416878" fg:w="5786900"/><text x="49.2851%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (5,786,900 samples, 0.13%)</title><rect x="49.0351%" y="469" width="0.1266%" height="15" fill="rgb(238,164,29)" fg:x="2241416878" fg:w="5786900"/><text x="49.2851%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_const_type (2,903,606 samples, 0.06%)</title><rect x="49.1617%" y="501" width="0.0635%" height="15" fill="rgb(224,25,9)" fg:x="2247203778" fg:w="2903606"/><text x="49.4117%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_type (2,870,721 samples, 0.06%)</title><rect x="49.2252%" y="501" width="0.0628%" height="15" fill="rgb(244,153,23)" fg:x="2250107384" fg:w="2870721"/><text x="49.4752%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (2,870,721 samples, 0.06%)</title><rect x="49.2252%" y="485" width="0.0628%" height="15" fill="rgb(212,203,14)" fg:x="2250107384" fg:w="2870721"/><text x="49.4752%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (2,870,721 samples, 0.06%)</title><rect x="49.2252%" y="469" width="0.0628%" height="15" fill="rgb(220,164,20)" fg:x="2250107384" fg:w="2870721"/><text x="49.4752%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,593,959 samples, 0.23%)</title><rect x="49.7543%" y="421" width="0.2318%" height="15" fill="rgb(222,203,48)" fg:x="2274292059" fg:w="10593959"/><text x="50.0043%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,593,959 samples, 0.23%)</title><rect x="49.7543%" y="405" width="0.2318%" height="15" fill="rgb(215,159,22)" fg:x="2274292059" fg:w="10593959"/><text x="50.0043%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (10,593,959 samples, 0.23%)</title><rect x="49.7543%" y="389" width="0.2318%" height="15" fill="rgb(216,183,47)" fg:x="2274292059" fg:w="10593959"/><text x="50.0043%" y="399.50"></text></g><g><title>cfree (10,593,959 samples, 0.23%)</title><rect x="49.7543%" y="373" width="0.2318%" height="15" fill="rgb(229,195,25)" fg:x="2274292059" fg:w="10593959"/><text x="50.0043%" y="383.50"></text></g><g><title>[libc.so.6] (2,863,997 samples, 0.06%)</title><rect x="49.9234%" y="357" width="0.0627%" height="15" fill="rgb(224,132,51)" fg:x="2282022021" fg:w="2863997"/><text x="50.1734%" y="367.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (18,041,286 samples, 0.39%)</title><rect x="49.7543%" y="453" width="0.3947%" height="15" fill="rgb(240,63,7)" fg:x="2274292059" fg:w="18041286"/><text x="50.0043%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (18,041,286 samples, 0.39%)</title><rect x="49.7543%" y="437" width="0.3947%" height="15" fill="rgb(249,182,41)" fg:x="2274292059" fg:w="18041286"/><text x="50.0043%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMInt&gt; (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="421" width="0.1629%" height="15" fill="rgb(243,47,26)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="405" width="0.1629%" height="15" fill="rgb(233,48,2)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="415.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="389" width="0.1629%" height="15" fill="rgb(244,165,34)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="373" width="0.1629%" height="15" fill="rgb(207,89,7)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="357" width="0.1629%" height="15" fill="rgb(244,117,36)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="341" width="0.1629%" height="15" fill="rgb(226,144,34)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="325" width="0.1629%" height="15" fill="rgb(213,23,19)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (7,447,327 samples, 0.16%)</title><rect x="49.9861%" y="309" width="0.1629%" height="15" fill="rgb(217,75,12)" fg:x="2284886018" fg:w="7447327"/><text x="50.2361%" y="319.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::immediate_collect (47,768,134 samples, 1.05%)</title><rect x="49.4024%" y="469" width="1.0450%" height="15" fill="rgb(224,159,17)" fg:x="2258204582" fg:w="47768134"/><text x="49.6524%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="453" width="0.2984%" height="15" fill="rgb(217,118,1)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="437" width="0.2984%" height="15" fill="rgb(232,180,48)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="421" width="0.2984%" height="15" fill="rgb(230,27,33)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="405" width="0.2984%" height="15" fill="rgb(205,31,21)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="389" width="0.2984%" height="15" fill="rgb(253,59,4)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="373" width="0.2984%" height="15" fill="rgb(224,201,9)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="357" width="0.2984%" height="15" fill="rgb(229,206,30)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="341" width="0.2984%" height="15" fill="rgb(212,67,47)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="325" width="0.2984%" height="15" fill="rgb(211,96,50)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="335.50"></text></g><g><title>cfree (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="309" width="0.2984%" height="15" fill="rgb(252,114,18)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="319.50"></text></g><g><title>[libc.so.6] (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="293" width="0.2984%" height="15" fill="rgb(223,58,37)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="303.50"></text></g><g><title>[libc.so.6] (13,639,371 samples, 0.30%)</title><rect x="50.1490%" y="277" width="0.2984%" height="15" fill="rgb(237,70,4)" fg:x="2292333345" fg:w="13639371"/><text x="50.3990%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10,885,294 samples, 0.24%)</title><rect x="50.7437%" y="453" width="0.2381%" height="15" fill="rgb(244,85,46)" fg:x="2319516832" fg:w="10885294"/><text x="50.9937%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10,885,294 samples, 0.24%)</title><rect x="50.7437%" y="437" width="0.2381%" height="15" fill="rgb(223,39,52)" fg:x="2319516832" fg:w="10885294"/><text x="50.9937%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (10,885,294 samples, 0.24%)</title><rect x="50.7437%" y="421" width="0.2381%" height="15" fill="rgb(218,200,14)" fg:x="2319516832" fg:w="10885294"/><text x="50.9937%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (10,885,294 samples, 0.24%)</title><rect x="50.7437%" y="405" width="0.2381%" height="15" fill="rgb(208,171,16)" fg:x="2319516832" fg:w="10885294"/><text x="50.9937%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (10,885,294 samples, 0.24%)</title><rect x="50.7437%" y="389" width="0.2381%" height="15" fill="rgb(234,200,18)" fg:x="2319516832" fg:w="10885294"/><text x="50.9937%" y="399.50"></text></g><g><title>malloc (10,885,294 samples, 0.24%)</title><rect x="50.7437%" y="373" width="0.2381%" height="15" fill="rgb(228,45,11)" fg:x="2319516832" fg:w="10885294"/><text x="50.9937%" y="383.50"></text></g><g><title>[libc.so.6] (5,294,650 samples, 0.12%)</title><rect x="50.8660%" y="357" width="0.1158%" height="15" fill="rgb(237,182,11)" fg:x="2325107476" fg:w="5294650"/><text x="51.1160%" y="367.50"></text></g><g><title>[libc.so.6] (2,637,212 samples, 0.06%)</title><rect x="50.9241%" y="341" width="0.0577%" height="15" fill="rgb(241,175,49)" fg:x="2327764914" fg:w="2637212"/><text x="51.1741%" y="351.50"></text></g><g><title>alloc::vec::from_elem (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="453" width="0.1629%" height="15" fill="rgb(247,38,35)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="463.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="437" width="0.1629%" height="15" fill="rgb(228,39,49)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="421" width="0.1629%" height="15" fill="rgb(226,101,26)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="405" width="0.1629%" height="15" fill="rgb(206,141,19)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="389" width="0.1629%" height="15" fill="rgb(211,200,13)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="373" width="0.1629%" height="15" fill="rgb(241,121,6)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="357" width="0.1629%" height="15" fill="rgb(234,221,29)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="367.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="341" width="0.1629%" height="15" fill="rgb(229,136,5)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="351.50"></text></g><g><title>__libc_calloc (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="325" width="0.1629%" height="15" fill="rgb(238,36,11)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="335.50"></text></g><g><title>[libc.so.6] (7,448,303 samples, 0.16%)</title><rect x="50.9818%" y="309" width="0.1629%" height="15" fill="rgb(251,55,41)" fg:x="2330402126" fg:w="7448303"/><text x="51.2318%" y="319.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,204,579 samples, 0.05%)</title><rect x="51.1448%" y="197" width="0.0482%" height="15" fill="rgb(242,34,40)" fg:x="2337850429" fg:w="2204579"/><text x="51.3948%" y="207.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,204,579 samples, 0.05%)</title><rect x="51.1448%" y="181" width="0.0482%" height="15" fill="rgb(215,42,17)" fg:x="2337850429" fg:w="2204579"/><text x="51.3948%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (4,948,565 samples, 0.11%)</title><rect x="51.1448%" y="245" width="0.1083%" height="15" fill="rgb(207,44,46)" fg:x="2337850429" fg:w="4948565"/><text x="51.3948%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4,948,565 samples, 0.11%)</title><rect x="51.1448%" y="229" width="0.1083%" height="15" fill="rgb(211,206,28)" fg:x="2337850429" fg:w="4948565"/><text x="51.3948%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4,948,565 samples, 0.11%)</title><rect x="51.1448%" y="213" width="0.1083%" height="15" fill="rgb(237,167,16)" fg:x="2337850429" fg:w="4948565"/><text x="51.3948%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (2,743,986 samples, 0.06%)</title><rect x="51.1930%" y="197" width="0.0600%" height="15" fill="rgb(233,66,6)" fg:x="2340055008" fg:w="2743986"/><text x="51.4430%" y="207.50"></text></g><g><title>core::intrinsics::unlikely (2,743,986 samples, 0.06%)</title><rect x="51.1930%" y="181" width="0.0600%" height="15" fill="rgb(246,123,29)" fg:x="2340055008" fg:w="2743986"/><text x="51.4430%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="453" width="0.1664%" height="15" fill="rgb(209,62,40)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="437" width="0.1664%" height="15" fill="rgb(218,4,25)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="421" width="0.1664%" height="15" fill="rgb(253,91,49)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="405" width="0.1664%" height="15" fill="rgb(228,155,29)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="389" width="0.1664%" height="15" fill="rgb(243,57,37)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="373" width="0.1664%" height="15" fill="rgb(244,167,17)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="357" width="0.1664%" height="15" fill="rgb(207,181,38)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="341" width="0.1664%" height="15" fill="rgb(211,8,23)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="325" width="0.1664%" height="15" fill="rgb(235,11,44)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="335.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="309" width="0.1664%" height="15" fill="rgb(248,18,52)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="293" width="0.1664%" height="15" fill="rgb(208,4,7)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="277" width="0.1664%" height="15" fill="rgb(240,17,39)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7,606,267 samples, 0.17%)</title><rect x="51.1448%" y="261" width="0.1664%" height="15" fill="rgb(207,170,3)" fg:x="2337850429" fg:w="7606267"/><text x="51.3948%" y="271.50"></text></g><g><title>hashbrown::map::make_hash (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="245" width="0.0581%" height="15" fill="rgb(236,100,52)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="229" width="0.0581%" height="15" fill="rgb(246,78,51)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="213" width="0.0581%" height="15" fill="rgb(211,17,15)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="197" width="0.0581%" height="15" fill="rgb(209,59,46)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="181" width="0.0581%" height="15" fill="rgb(210,92,25)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="191.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="165" width="0.0581%" height="15" fill="rgb(238,174,52)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="149" width="0.0581%" height="15" fill="rgb(230,73,7)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,657,702 samples, 0.06%)</title><rect x="51.2530%" y="133" width="0.0581%" height="15" fill="rgb(243,124,40)" fg:x="2342798994" fg:w="2657702"/><text x="51.5030%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="437" width="0.1053%" height="15" fill="rgb(244,170,11)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="421" width="0.1053%" height="15" fill="rgb(207,114,54)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="405" width="0.1053%" height="15" fill="rgb(205,42,20)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="389" width="0.1053%" height="15" fill="rgb(230,30,28)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="373" width="0.1053%" height="15" fill="rgb(205,73,54)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="357" width="0.1053%" height="15" fill="rgb(254,227,23)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="341" width="0.1053%" height="15" fill="rgb(228,202,34)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="325" width="0.1053%" height="15" fill="rgb(222,225,37)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="335.50"></text></g><g><title>cfree (4,815,389 samples, 0.11%)</title><rect x="51.3112%" y="309" width="0.1053%" height="15" fill="rgb(221,14,54)" fg:x="2345456696" fg:w="4815389"/><text x="51.5612%" y="319.50"></text></g><g><title>[libc.so.6] (2,139,248 samples, 0.05%)</title><rect x="51.3697%" y="293" width="0.0468%" height="15" fill="rgb(254,102,2)" fg:x="2348132837" fg:w="2139248"/><text x="51.6197%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (7,475,940 samples, 0.16%)</title><rect x="51.3112%" y="453" width="0.1635%" height="15" fill="rgb(232,104,17)" fg:x="2345456696" fg:w="7475940"/><text x="51.5612%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="437" width="0.0582%" height="15" fill="rgb(250,220,14)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="421" width="0.0582%" height="15" fill="rgb(241,158,9)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="405" width="0.0582%" height="15" fill="rgb(246,9,43)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="389" width="0.0582%" height="15" fill="rgb(206,73,33)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="373" width="0.0582%" height="15" fill="rgb(222,79,8)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="383.50"></text></g><g><title>cfree (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="357" width="0.0582%" height="15" fill="rgb(234,8,54)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="367.50"></text></g><g><title>[libc.so.6] (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="341" width="0.0582%" height="15" fill="rgb(209,134,38)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="351.50"></text></g><g><title>[libc.so.6] (2,660,551 samples, 0.06%)</title><rect x="51.4165%" y="325" width="0.0582%" height="15" fill="rgb(230,127,29)" fg:x="2350272085" fg:w="2660551"/><text x="51.6665%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (2,648,847 samples, 0.06%)</title><rect x="51.4747%" y="405" width="0.0579%" height="15" fill="rgb(242,44,41)" fg:x="2352932636" fg:w="2648847"/><text x="51.7247%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,648,847 samples, 0.06%)</title><rect x="51.4747%" y="389" width="0.0579%" height="15" fill="rgb(222,56,43)" fg:x="2352932636" fg:w="2648847"/><text x="51.7247%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,648,847 samples, 0.06%)</title><rect x="51.4747%" y="373" width="0.0579%" height="15" fill="rgb(238,39,47)" fg:x="2352932636" fg:w="2648847"/><text x="51.7247%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,648,847 samples, 0.06%)</title><rect x="51.4747%" y="357" width="0.0579%" height="15" fill="rgb(226,79,43)" fg:x="2352932636" fg:w="2648847"/><text x="51.7247%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (2,648,847 samples, 0.06%)</title><rect x="51.4747%" y="341" width="0.0579%" height="15" fill="rgb(242,105,53)" fg:x="2352932636" fg:w="2648847"/><text x="51.7247%" y="351.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,648,847 samples, 0.06%)</title><rect x="51.4747%" y="325" width="0.0579%" height="15" fill="rgb(251,132,46)" fg:x="2352932636" fg:w="2648847"/><text x="51.7247%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,648,847 samples, 0.06%)</title><rect x="51.4747%" y="309" width="0.0579%" height="15" fill="rgb(231,77,14)" fg:x="2352932636" fg:w="2648847"/><text x="51.7247%" y="319.50"></text></g><g><title>core::intrinsics::likely (7,006,813 samples, 0.15%)</title><rect x="51.5327%" y="357" width="0.1533%" height="15" fill="rgb(240,135,9)" fg:x="2355581483" fg:w="7006813"/><text x="51.7827%" y="367.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::mark (59,531,674 samples, 1.30%)</title><rect x="50.4474%" y="469" width="1.3024%" height="15" fill="rgb(248,109,14)" fg:x="2305972716" fg:w="59531674"/><text x="50.6974%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12,571,754 samples, 0.28%)</title><rect x="51.4747%" y="453" width="0.2750%" height="15" fill="rgb(227,146,52)" fg:x="2352932636" fg:w="12571754"/><text x="51.7247%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12,571,754 samples, 0.28%)</title><rect x="51.4747%" y="437" width="0.2750%" height="15" fill="rgb(232,54,3)" fg:x="2352932636" fg:w="12571754"/><text x="51.7247%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12,571,754 samples, 0.28%)</title><rect x="51.4747%" y="421" width="0.2750%" height="15" fill="rgb(229,201,43)" fg:x="2352932636" fg:w="12571754"/><text x="51.7247%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9,922,907 samples, 0.22%)</title><rect x="51.5327%" y="405" width="0.2171%" height="15" fill="rgb(252,161,33)" fg:x="2355581483" fg:w="9922907"/><text x="51.7827%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,922,907 samples, 0.22%)</title><rect x="51.5327%" y="389" width="0.2171%" height="15" fill="rgb(226,146,40)" fg:x="2355581483" fg:w="9922907"/><text x="51.7827%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9,922,907 samples, 0.22%)</title><rect x="51.5327%" y="373" width="0.2171%" height="15" fill="rgb(219,47,25)" fg:x="2355581483" fg:w="9922907"/><text x="51.7827%" y="383.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,916,094 samples, 0.06%)</title><rect x="51.6860%" y="357" width="0.0638%" height="15" fill="rgb(250,135,13)" fg:x="2362588296" fg:w="2916094"/><text x="51.9360%" y="367.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,916,094 samples, 0.06%)</title><rect x="51.6860%" y="341" width="0.0638%" height="15" fill="rgb(219,229,18)" fg:x="2362588296" fg:w="2916094"/><text x="51.9360%" y="351.50"></text></g><g><title>core::intrinsics::likely (2,666,050 samples, 0.06%)</title><rect x="51.8135%" y="325" width="0.0583%" height="15" fill="rgb(217,152,27)" fg:x="2368417043" fg:w="2666050"/><text x="52.0635%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5,378,339 samples, 0.12%)</title><rect x="51.8135%" y="421" width="0.1177%" height="15" fill="rgb(225,71,47)" fg:x="2368417043" fg:w="5378339"/><text x="52.0635%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5,378,339 samples, 0.12%)</title><rect x="51.8135%" y="405" width="0.1177%" height="15" fill="rgb(220,139,14)" fg:x="2368417043" fg:w="5378339"/><text x="52.0635%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5,378,339 samples, 0.12%)</title><rect x="51.8135%" y="389" width="0.1177%" height="15" fill="rgb(247,54,32)" fg:x="2368417043" fg:w="5378339"/><text x="52.0635%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5,378,339 samples, 0.12%)</title><rect x="51.8135%" y="373" width="0.1177%" height="15" fill="rgb(252,131,39)" fg:x="2368417043" fg:w="5378339"/><text x="52.0635%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,378,339 samples, 0.12%)</title><rect x="51.8135%" y="357" width="0.1177%" height="15" fill="rgb(210,108,39)" fg:x="2368417043" fg:w="5378339"/><text x="52.0635%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,378,339 samples, 0.12%)</title><rect x="51.8135%" y="341" width="0.1177%" height="15" fill="rgb(205,23,29)" fg:x="2368417043" fg:w="5378339"/><text x="52.0635%" y="351.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (2,712,289 samples, 0.06%)</title><rect x="51.8718%" y="325" width="0.0593%" height="15" fill="rgb(246,139,46)" fg:x="2371083093" fg:w="2712289"/><text x="52.1218%" y="335.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (2,712,289 samples, 0.06%)</title><rect x="51.8718%" y="309" width="0.0593%" height="15" fill="rgb(250,81,26)" fg:x="2371083093" fg:w="2712289"/><text x="52.1218%" y="319.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (8,078,430 samples, 0.18%)</title><rect x="51.8135%" y="437" width="0.1767%" height="15" fill="rgb(214,104,7)" fg:x="2368417043" fg:w="8078430"/><text x="52.0635%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (2,700,091 samples, 0.06%)</title><rect x="51.9311%" y="421" width="0.0591%" height="15" fill="rgb(233,189,8)" fg:x="2373795382" fg:w="2700091"/><text x="52.1811%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2,700,091 samples, 0.06%)</title><rect x="51.9311%" y="405" width="0.0591%" height="15" fill="rgb(228,141,17)" fg:x="2373795382" fg:w="2700091"/><text x="52.1811%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (2,700,091 samples, 0.06%)</title><rect x="51.9311%" y="389" width="0.0591%" height="15" fill="rgb(247,157,1)" fg:x="2373795382" fg:w="2700091"/><text x="52.1811%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2,700,091 samples, 0.06%)</title><rect x="51.9311%" y="373" width="0.0591%" height="15" fill="rgb(249,225,5)" fg:x="2373795382" fg:w="2700091"/><text x="52.1811%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (2,700,091 samples, 0.06%)</title><rect x="51.9311%" y="357" width="0.0591%" height="15" fill="rgb(242,55,13)" fg:x="2373795382" fg:w="2700091"/><text x="52.1811%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (2,700,091 samples, 0.06%)</title><rect x="51.9311%" y="341" width="0.0591%" height="15" fill="rgb(230,49,50)" fg:x="2373795382" fg:w="2700091"/><text x="52.1811%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (2,700,091 samples, 0.06%)</title><rect x="51.9311%" y="325" width="0.0591%" height="15" fill="rgb(241,111,38)" fg:x="2373795382" fg:w="2700091"/><text x="52.1811%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15,409,324 samples, 0.34%)</title><rect x="51.9902%" y="421" width="0.3371%" height="15" fill="rgb(252,155,4)" fg:x="2376495473" fg:w="15409324"/><text x="52.2402%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15,409,324 samples, 0.34%)</title><rect x="51.9902%" y="405" width="0.3371%" height="15" fill="rgb(212,69,32)" fg:x="2376495473" fg:w="15409324"/><text x="52.2402%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (15,409,324 samples, 0.34%)</title><rect x="51.9902%" y="389" width="0.3371%" height="15" fill="rgb(243,107,47)" fg:x="2376495473" fg:w="15409324"/><text x="52.2402%" y="399.50"></text></g><g><title>cfree (15,409,324 samples, 0.34%)</title><rect x="51.9902%" y="373" width="0.3371%" height="15" fill="rgb(247,130,12)" fg:x="2376495473" fg:w="15409324"/><text x="52.2402%" y="383.50"></text></g><g><title>[libc.so.6] (13,249,059 samples, 0.29%)</title><rect x="52.0375%" y="357" width="0.2898%" height="15" fill="rgb(233,74,16)" fg:x="2378655738" fg:w="13249059"/><text x="52.2875%" y="367.50"></text></g><g><title>[libc.so.6] (10,529,269 samples, 0.23%)</title><rect x="52.0970%" y="341" width="0.2303%" height="15" fill="rgb(208,58,18)" fg:x="2381375528" fg:w="10529269"/><text x="52.3470%" y="351.50"></text></g><g><title>[libc.so.6] (7,837,061 samples, 0.17%)</title><rect x="52.1559%" y="325" width="0.1715%" height="15" fill="rgb(242,225,1)" fg:x="2384067736" fg:w="7837061"/><text x="52.4059%" y="335.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (31,248,069 samples, 0.68%)</title><rect x="51.8135%" y="453" width="0.6836%" height="15" fill="rgb(249,39,40)" fg:x="2368417043" fg:w="31248069"/><text x="52.0635%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (23,169,639 samples, 0.51%)</title><rect x="51.9902%" y="437" width="0.5069%" height="15" fill="rgb(207,72,44)" fg:x="2376495473" fg:w="23169639"/><text x="52.2402%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMTuple&gt; (7,760,315 samples, 0.17%)</title><rect x="52.3273%" y="421" width="0.1698%" height="15" fill="rgb(215,193,12)" fg:x="2391904797" fg:w="7760315"/><text x="52.5773%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,628,586 samples, 0.12%)</title><rect x="52.3739%" y="405" width="0.1231%" height="15" fill="rgb(248,41,39)" fg:x="2394036526" fg:w="5628586"/><text x="52.6239%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,628,586 samples, 0.12%)</title><rect x="52.3739%" y="389" width="0.1231%" height="15" fill="rgb(253,85,4)" fg:x="2394036526" fg:w="5628586"/><text x="52.6239%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,628,586 samples, 0.12%)</title><rect x="52.3739%" y="373" width="0.1231%" height="15" fill="rgb(243,70,31)" fg:x="2394036526" fg:w="5628586"/><text x="52.6239%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,628,586 samples, 0.12%)</title><rect x="52.3739%" y="357" width="0.1231%" height="15" fill="rgb(253,195,26)" fg:x="2394036526" fg:w="5628586"/><text x="52.6239%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,628,586 samples, 0.12%)</title><rect x="52.3739%" y="341" width="0.1231%" height="15" fill="rgb(243,42,11)" fg:x="2394036526" fg:w="5628586"/><text x="52.6239%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (5,628,586 samples, 0.12%)</title><rect x="52.3739%" y="325" width="0.1231%" height="15" fill="rgb(239,66,17)" fg:x="2394036526" fg:w="5628586"/><text x="52.6239%" y="335.50"></text></g><g><title>cfree (5,628,586 samples, 0.12%)</title><rect x="52.3739%" y="309" width="0.1231%" height="15" fill="rgb(217,132,21)" fg:x="2394036526" fg:w="5628586"/><text x="52.6239%" y="319.50"></text></g><g><title>[libc.so.6] (2,904,385 samples, 0.06%)</title><rect x="52.4335%" y="293" width="0.0635%" height="15" fill="rgb(252,202,21)" fg:x="2396760727" fg:w="2904385"/><text x="52.6835%" y="303.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::collect (157,630,703 samples, 3.45%)</title><rect x="49.4024%" y="485" width="3.4485%" height="15" fill="rgb(233,98,36)" fg:x="2258204582" fg:w="157630703"/><text x="49.6524%" y="495.50">XLa..</text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::sweep (50,330,895 samples, 1.10%)</title><rect x="51.7498%" y="469" width="1.1011%" height="15" fill="rgb(216,153,54)" fg:x="2365504390" fg:w="50330895"/><text x="51.9998%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="453" width="0.3538%" height="15" fill="rgb(250,99,7)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="437" width="0.3538%" height="15" fill="rgb(207,56,50)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="421" width="0.3538%" height="15" fill="rgb(244,61,34)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="431.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="405" width="0.3538%" height="15" fill="rgb(241,50,38)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="389" width="0.3538%" height="15" fill="rgb(212,166,30)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="373" width="0.3538%" height="15" fill="rgb(249,127,32)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="357" width="0.3538%" height="15" fill="rgb(209,103,0)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="341" width="0.3538%" height="15" fill="rgb(238,209,51)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="325" width="0.3538%" height="15" fill="rgb(237,56,23)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="335.50"></text></g><g><title>cfree (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="309" width="0.3538%" height="15" fill="rgb(215,153,46)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="319.50"></text></g><g><title>[libc.so.6] (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="293" width="0.3538%" height="15" fill="rgb(224,49,31)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="303.50"></text></g><g><title>[libc.so.6] (16,170,173 samples, 0.35%)</title><rect x="52.4971%" y="277" width="0.3538%" height="15" fill="rgb(250,18,42)" fg:x="2399665112" fg:w="16170173"/><text x="52.7471%" y="287.50"></text></g><g><title>[libc.so.6] (13,942,423 samples, 0.31%)</title><rect x="52.5458%" y="261" width="0.3050%" height="15" fill="rgb(215,176,39)" fg:x="2401892862" fg:w="13942423"/><text x="52.7958%" y="271.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::new_object (178,868,460 samples, 3.91%)</title><rect x="49.2880%" y="501" width="3.9131%" height="15" fill="rgb(223,77,29)" fg:x="2252978105" fg:w="178868460"/><text x="49.5380%" y="511.50">XLan..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16,011,280 samples, 0.35%)</title><rect x="52.8508%" y="485" width="0.3503%" height="15" fill="rgb(234,94,52)" fg:x="2415835285" fg:w="16011280"/><text x="53.1008%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (8,684,271 samples, 0.19%)</title><rect x="53.0111%" y="469" width="0.1900%" height="15" fill="rgb(220,154,50)" fg:x="2423162294" fg:w="8684271"/><text x="53.2611%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5,796,920 samples, 0.13%)</title><rect x="53.0743%" y="453" width="0.1268%" height="15" fill="rgb(212,11,10)" fg:x="2426049645" fg:w="5796920"/><text x="53.3243%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5,796,920 samples, 0.13%)</title><rect x="53.0743%" y="437" width="0.1268%" height="15" fill="rgb(205,166,19)" fg:x="2426049645" fg:w="5796920"/><text x="53.3243%" y="447.50"></text></g><g><title>alloc::alloc::alloc (5,796,920 samples, 0.13%)</title><rect x="53.0743%" y="421" width="0.1268%" height="15" fill="rgb(244,198,16)" fg:x="2426049645" fg:w="5796920"/><text x="53.3243%" y="431.50"></text></g><g><title>malloc (5,796,920 samples, 0.13%)</title><rect x="53.0743%" y="405" width="0.1268%" height="15" fill="rgb(219,69,12)" fg:x="2426049645" fg:w="5796920"/><text x="53.3243%" y="415.50"></text></g><g><title>[libc.so.6] (2,880,616 samples, 0.06%)</title><rect x="53.1381%" y="389" width="0.0630%" height="15" fill="rgb(245,30,7)" fg:x="2428965949" fg:w="2880616"/><text x="53.3881%" y="399.50"></text></g><g><title>[libc.so.6] (2,880,616 samples, 0.06%)</title><rect x="53.1381%" y="373" width="0.0630%" height="15" fill="rgb(218,221,48)" fg:x="2428965949" fg:w="2880616"/><text x="53.3881%" y="383.50"></text></g><g><title>__rdl_dealloc (4,857,236 samples, 0.11%)</title><rect x="53.2521%" y="389" width="0.1063%" height="15" fill="rgb(216,66,15)" fg:x="2434176853" fg:w="4857236"/><text x="53.5021%" y="399.50"></text></g><g><title>XLang_Rust::vm::executor::vm::IRExecutor::enter_lambda (763,213,711 samples, 16.70%)</title><rect x="36.8569%" y="517" width="16.6967%" height="15" fill="rgb(226,122,50)" fg:x="1684746872" fg:w="763213711"/><text x="37.1069%" y="527.50">XLang_Rust::vm::executor::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (16,114,018 samples, 0.35%)</title><rect x="53.2011%" y="501" width="0.3525%" height="15" fill="rgb(239,156,16)" fg:x="2431846565" fg:w="16114018"/><text x="53.4511%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16,114,018 samples, 0.35%)</title><rect x="53.2011%" y="485" width="0.3525%" height="15" fill="rgb(224,27,38)" fg:x="2431846565" fg:w="16114018"/><text x="53.4511%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16,114,018 samples, 0.35%)</title><rect x="53.2011%" y="469" width="0.3525%" height="15" fill="rgb(224,39,27)" fg:x="2431846565" fg:w="16114018"/><text x="53.4511%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,114,018 samples, 0.35%)</title><rect x="53.2011%" y="453" width="0.3525%" height="15" fill="rgb(215,92,29)" fg:x="2431846565" fg:w="16114018"/><text x="53.4511%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (13,783,730 samples, 0.30%)</title><rect x="53.2521%" y="437" width="0.3015%" height="15" fill="rgb(207,159,16)" fg:x="2434176853" fg:w="13783730"/><text x="53.5021%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,783,730 samples, 0.30%)</title><rect x="53.2521%" y="421" width="0.3015%" height="15" fill="rgb(238,163,47)" fg:x="2434176853" fg:w="13783730"/><text x="53.5021%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (13,783,730 samples, 0.30%)</title><rect x="53.2521%" y="405" width="0.3015%" height="15" fill="rgb(219,91,49)" fg:x="2434176853" fg:w="13783730"/><text x="53.5021%" y="415.50"></text></g><g><title>cfree (8,926,494 samples, 0.20%)</title><rect x="53.3583%" y="389" width="0.1953%" height="15" fill="rgb(227,167,31)" fg:x="2439034089" fg:w="8926494"/><text x="53.6083%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMBoolean as XLang_Rust::vm::executor::variable::VMObject&gt;::value_const_ref (2,836,308 samples, 0.06%)</title><rect x="55.0231%" y="485" width="0.0620%" height="15" fill="rgb(234,80,54)" fg:x="2515131447" fg:w="2836308"/><text x="55.2731%" y="495.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMInt as XLang_Rust::vm::executor::variable::VMObject&gt;::value_const_ref (2,163,465 samples, 0.05%)</title><rect x="55.0852%" y="485" width="0.0473%" height="15" fill="rgb(212,114,2)" fg:x="2517967755" fg:w="2163465"/><text x="55.3352%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_const_type (34,814,458 samples, 0.76%)</title><rect x="55.1325%" y="485" width="0.7616%" height="15" fill="rgb(234,50,24)" fg:x="2520131220" fg:w="34814458"/><text x="55.3825%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (13,683,604 samples, 0.30%)</title><rect x="55.5948%" y="469" width="0.2994%" height="15" fill="rgb(221,68,8)" fg:x="2541262074" fg:w="13683604"/><text x="55.8448%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (13,683,604 samples, 0.30%)</title><rect x="55.5948%" y="453" width="0.2994%" height="15" fill="rgb(254,180,31)" fg:x="2541262074" fg:w="13683604"/><text x="55.8448%" y="463.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMVariableWrapper as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (5,150,026 samples, 0.11%)</title><rect x="55.7815%" y="437" width="0.1127%" height="15" fill="rgb(247,130,50)" fg:x="2549795652" fg:w="5150026"/><text x="56.0315%" y="447.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMNativeFunction as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (2,217,192 samples, 0.05%)</title><rect x="57.7179%" y="453" width="0.0485%" height="15" fill="rgb(211,109,4)" fg:x="2638310825" fg:w="2217192"/><text x="57.9679%" y="463.50"></text></g><g><title>XLang_Rust::vm::executor::variable::try_value_const_ref_as_vmobject (200,312,811 samples, 4.38%)</title><rect x="53.5536%" y="501" width="4.3822%" height="15" fill="rgb(238,50,21)" fg:x="2447960583" fg:w="200312811"/><text x="53.8036%" y="511.50">XLang..</text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (93,327,716 samples, 2.04%)</title><rect x="55.8941%" y="485" width="2.0417%" height="15" fill="rgb(225,57,45)" fg:x="2554945678" fg:w="93327716"/><text x="56.1441%" y="495.50">X..</text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (93,327,716 samples, 2.04%)</title><rect x="55.8941%" y="469" width="2.0417%" height="15" fill="rgb(209,196,50)" fg:x="2554945678" fg:w="93327716"/><text x="56.1441%" y="479.50">X..</text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMVariableWrapper as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (7,745,377 samples, 0.17%)</title><rect x="57.7664%" y="453" width="0.1694%" height="15" fill="rgb(242,140,13)" fg:x="2640528017" fg:w="7745377"/><text x="58.0164%" y="463.50"></text></g><g><title>XLang_Rust::vm::executor::vm::IRExecutor::pop_object_and_check (8,771,336 samples, 0.19%)</title><rect x="57.9358%" y="501" width="0.1919%" height="15" fill="rgb(217,111,7)" fg:x="2648273394" fg:w="8771336"/><text x="58.1858%" y="511.50"></text></g><g><title>XLang_Rust::vm::executor::vm::IRExecutor::pop_object (8,771,336 samples, 0.19%)</title><rect x="57.9358%" y="485" width="0.1919%" height="15" fill="rgb(253,193,51)" fg:x="2648273394" fg:w="8771336"/><text x="58.1858%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (8,771,336 samples, 0.19%)</title><rect x="57.9358%" y="469" width="0.1919%" height="15" fill="rgb(252,70,29)" fg:x="2648273394" fg:w="8771336"/><text x="58.1858%" y="479.50"></text></g><g><title>core::ptr::read (8,771,336 samples, 0.19%)</title><rect x="57.9358%" y="453" width="0.1919%" height="15" fill="rgb(232,127,12)" fg:x="2648273394" fg:w="8771336"/><text x="58.1858%" y="463.50"></text></g><g><title>XLang_Rust::vm::executor::vm::IRExecutor::pop_and_const_ref (214,312,398 samples, 4.69%)</title><rect x="53.5536%" y="517" width="4.6885%" height="15" fill="rgb(211,180,21)" fg:x="2447960583" fg:w="214312398"/><text x="53.8036%" y="527.50">XLang..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5,228,251 samples, 0.11%)</title><rect x="58.1277%" y="501" width="0.1144%" height="15" fill="rgb(229,72,13)" fg:x="2657044730" fg:w="5228251"/><text x="58.3777%" y="511.50"></text></g><g><title>XLang_Rust::vm::executor::vm::IRExecutor::push_vmobject (10,542,422 samples, 0.23%)</title><rect x="58.2421%" y="517" width="0.2306%" height="15" fill="rgb(240,211,49)" fg:x="2662272981" fg:w="10542422"/><text x="58.4921%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10,542,422 samples, 0.23%)</title><rect x="58.2421%" y="501" width="0.2306%" height="15" fill="rgb(219,149,40)" fg:x="2662272981" fg:w="10542422"/><text x="58.4921%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5,039,462 samples, 0.11%)</title><rect x="58.3625%" y="485" width="0.1102%" height="15" fill="rgb(210,127,46)" fg:x="2667775941" fg:w="5039462"/><text x="58.6125%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5,039,462 samples, 0.11%)</title><rect x="58.3625%" y="469" width="0.1102%" height="15" fill="rgb(220,106,7)" fg:x="2667775941" fg:w="5039462"/><text x="58.6125%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (5,039,462 samples, 0.11%)</title><rect x="58.3625%" y="453" width="0.1102%" height="15" fill="rgb(249,31,22)" fg:x="2667775941" fg:w="5039462"/><text x="58.6125%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (5,039,462 samples, 0.11%)</title><rect x="58.3625%" y="437" width="0.1102%" height="15" fill="rgb(253,1,49)" fg:x="2667775941" fg:w="5039462"/><text x="58.6125%" y="447.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_const_type (11,331,923 samples, 0.25%)</title><rect x="58.4727%" y="517" width="0.2479%" height="15" fill="rgb(227,144,33)" fg:x="2672815403" fg:w="11331923"/><text x="58.7227%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (5,601,249 samples, 0.12%)</title><rect x="58.5981%" y="501" width="0.1225%" height="15" fill="rgb(249,163,44)" fg:x="2678546077" fg:w="5601249"/><text x="58.8481%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (5,601,249 samples, 0.12%)</title><rect x="58.5981%" y="485" width="0.1225%" height="15" fill="rgb(234,15,39)" fg:x="2678546077" fg:w="5601249"/><text x="58.8481%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (5,894,818 samples, 0.13%)</title><rect x="58.7841%" y="485" width="0.1290%" height="15" fill="rgb(207,66,16)" fg:x="2687049291" fg:w="5894818"/><text x="59.0341%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_type (13,875,207 samples, 0.30%)</title><rect x="58.7206%" y="517" width="0.3035%" height="15" fill="rgb(233,112,24)" fg:x="2684147326" fg:w="13875207"/><text x="58.9706%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (10,973,242 samples, 0.24%)</title><rect x="58.7841%" y="501" width="0.2401%" height="15" fill="rgb(230,90,22)" fg:x="2687049291" fg:w="10973242"/><text x="59.0341%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::isinstance (5,078,424 samples, 0.11%)</title><rect x="58.9131%" y="485" width="0.1111%" height="15" fill="rgb(229,61,13)" fg:x="2692944109" fg:w="5078424"/><text x="59.1631%" y="495.50"></text></g><g><title>&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (5,078,424 samples, 0.11%)</title><rect x="58.9131%" y="469" width="0.1111%" height="15" fill="rgb(225,57,24)" fg:x="2692944109" fg:w="5078424"/><text x="59.1631%" y="479.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (5,078,424 samples, 0.11%)</title><rect x="58.9131%" y="453" width="0.1111%" height="15" fill="rgb(208,169,48)" fg:x="2692944109" fg:w="5078424"/><text x="59.1631%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (5,078,424 samples, 0.11%)</title><rect x="58.9131%" y="437" width="0.1111%" height="15" fill="rgb(244,218,51)" fg:x="2692944109" fg:w="5078424"/><text x="59.1631%" y="447.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::clone_ref (2,845,630 samples, 0.06%)</title><rect x="59.0242%" y="517" width="0.0623%" height="15" fill="rgb(214,148,10)" fg:x="2698022533" fg:w="2845630"/><text x="59.2742%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::drop_ref (5,221,115 samples, 0.11%)</title><rect x="59.0864%" y="517" width="0.1142%" height="15" fill="rgb(225,174,27)" fg:x="2700868163" fg:w="5221115"/><text x="59.3364%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_traceable (5,221,103 samples, 0.11%)</title><rect x="59.0864%" y="501" width="0.1142%" height="15" fill="rgb(230,96,26)" fg:x="2700868175" fg:w="5221103"/><text x="59.3364%" y="511.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (11,412,268 samples, 0.25%)</title><rect x="59.2007%" y="517" width="0.2497%" height="15" fill="rgb(232,10,30)" fg:x="2706089278" fg:w="11412268"/><text x="59.4507%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (11,412,268 samples, 0.25%)</title><rect x="59.2007%" y="501" width="0.2497%" height="15" fill="rgb(222,8,50)" fg:x="2706089278" fg:w="11412268"/><text x="59.4507%" y="511.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMLambda as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (2,901,789 samples, 0.06%)</title><rect x="59.3869%" y="485" width="0.0635%" height="15" fill="rgb(213,81,27)" fg:x="2714599757" fg:w="2901789"/><text x="59.6369%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2,722,486 samples, 0.06%)</title><rect x="61.7880%" y="469" width="0.0596%" height="15" fill="rgb(245,50,10)" fg:x="2824356781" fg:w="2722486"/><text x="62.0380%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,722,486 samples, 0.06%)</title><rect x="61.7880%" y="453" width="0.0596%" height="15" fill="rgb(216,100,18)" fg:x="2824356781" fg:w="2722486"/><text x="62.0380%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,722,486 samples, 0.06%)</title><rect x="61.7880%" y="437" width="0.0596%" height="15" fill="rgb(236,147,54)" fg:x="2824356781" fg:w="2722486"/><text x="62.0380%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,639,799 samples, 0.06%)</title><rect x="61.8475%" y="469" width="0.0578%" height="15" fill="rgb(205,143,26)" fg:x="2827079267" fg:w="2639799"/><text x="62.0975%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (2,639,799 samples, 0.06%)</title><rect x="61.8475%" y="453" width="0.0578%" height="15" fill="rgb(236,26,9)" fg:x="2827079267" fg:w="2639799"/><text x="62.0975%" y="463.50"></text></g><g><title>core::ptr::read (2,639,799 samples, 0.06%)</title><rect x="61.8475%" y="437" width="0.0578%" height="15" fill="rgb(221,165,53)" fg:x="2827079267" fg:w="2639799"/><text x="62.0975%" y="447.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMInstructions as XLang_Rust::vm::gc::gc::GCObject&gt;::free (2,666,747 samples, 0.06%)</title><rect x="61.9632%" y="453" width="0.0583%" height="15" fill="rgb(214,110,17)" fg:x="2832365619" fg:w="2666747"/><text x="62.2132%" y="463.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,073,886 samples, 0.99%)</title><rect x="62.0215%" y="437" width="0.9861%" height="15" fill="rgb(237,197,12)" fg:x="2835032366" fg:w="45073886"/><text x="62.2715%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (45,073,886 samples, 0.99%)</title><rect x="62.0215%" y="421" width="0.9861%" height="15" fill="rgb(205,84,17)" fg:x="2835032366" fg:w="45073886"/><text x="62.2715%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (45,073,886 samples, 0.99%)</title><rect x="62.0215%" y="405" width="0.9861%" height="15" fill="rgb(237,18,45)" fg:x="2835032366" fg:w="45073886"/><text x="62.2715%" y="415.50"></text></g><g><title>cfree (45,073,886 samples, 0.99%)</title><rect x="62.0215%" y="389" width="0.9861%" height="15" fill="rgb(221,87,14)" fg:x="2835032366" fg:w="45073886"/><text x="62.2715%" y="399.50"></text></g><g><title>[libc.so.6] (19,742,466 samples, 0.43%)</title><rect x="62.5757%" y="373" width="0.4319%" height="15" fill="rgb(238,186,15)" fg:x="2860363786" fg:w="19742466"/><text x="62.8257%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,690,046 samples, 0.06%)</title><rect x="63.1257%" y="389" width="0.0588%" height="15" fill="rgb(208,115,11)" fg:x="2885502726" fg:w="2690046"/><text x="63.3757%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&lt;&amp;usize&gt;&gt;::sum (2,690,046 samples, 0.06%)</title><rect x="63.1257%" y="373" width="0.0588%" height="15" fill="rgb(254,175,0)" fg:x="2885502726" fg:w="2690046"/><text x="63.3757%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,690,046 samples, 0.06%)</title><rect x="63.1257%" y="357" width="0.0588%" height="15" fill="rgb(227,24,42)" fg:x="2885502726" fg:w="2690046"/><text x="63.3757%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,690,046 samples, 0.06%)</title><rect x="63.1257%" y="341" width="0.0588%" height="15" fill="rgb(223,211,37)" fg:x="2885502726" fg:w="2690046"/><text x="63.3757%" y="351.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,690,046 samples, 0.06%)</title><rect x="63.1257%" y="325" width="0.0588%" height="15" fill="rgb(235,49,27)" fg:x="2885502726" fg:w="2690046"/><text x="63.3757%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,690,046 samples, 0.06%)</title><rect x="63.1257%" y="309" width="0.0588%" height="15" fill="rgb(254,97,51)" fg:x="2885502726" fg:w="2690046"/><text x="63.3757%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (2,690,046 samples, 0.06%)</title><rect x="63.1257%" y="293" width="0.0588%" height="15" fill="rgb(249,51,40)" fg:x="2885502726" fg:w="2690046"/><text x="63.3757%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (57,696,807 samples, 1.26%)</title><rect x="63.0076%" y="421" width="1.2622%" height="15" fill="rgb(210,128,45)" fg:x="2880106252" fg:w="57696807"/><text x="63.2576%" y="431.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (57,696,807 samples, 1.26%)</title><rect x="63.0076%" y="405" width="1.2622%" height="15" fill="rgb(224,137,50)" fg:x="2880106252" fg:w="57696807"/><text x="63.2576%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (49,610,287 samples, 1.09%)</title><rect x="63.1845%" y="389" width="1.0853%" height="15" fill="rgb(242,15,9)" fg:x="2888192772" fg:w="49610287"/><text x="63.4345%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (49,610,287 samples, 1.09%)</title><rect x="63.1845%" y="373" width="1.0853%" height="15" fill="rgb(233,187,41)" fg:x="2888192772" fg:w="49610287"/><text x="63.4345%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (49,610,287 samples, 1.09%)</title><rect x="63.1845%" y="357" width="1.0853%" height="15" fill="rgb(227,2,29)" fg:x="2888192772" fg:w="49610287"/><text x="63.4345%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (49,610,287 samples, 1.09%)</title><rect x="63.1845%" y="341" width="1.0853%" height="15" fill="rgb(222,70,3)" fg:x="2888192772" fg:w="49610287"/><text x="63.4345%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (49,610,287 samples, 1.09%)</title><rect x="63.1845%" y="325" width="1.0853%" height="15" fill="rgb(213,11,42)" fg:x="2888192772" fg:w="49610287"/><text x="63.4345%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,915,577 samples, 0.06%)</title><rect x="64.2698%" y="405" width="0.0638%" height="15" fill="rgb(225,150,9)" fg:x="2937803059" fg:w="2915577"/><text x="64.5198%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (2,915,577 samples, 0.06%)</title><rect x="64.2698%" y="389" width="0.0638%" height="15" fill="rgb(230,162,45)" fg:x="2937803059" fg:w="2915577"/><text x="64.5198%" y="399.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (118,834,387 samples, 2.60%)</title><rect x="61.9053%" y="469" width="2.5997%" height="15" fill="rgb(222,14,52)" fg:x="2829719066" fg:w="118834387"/><text x="62.1553%" y="479.50">XL..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (113,521,087 samples, 2.48%)</title><rect x="62.0215%" y="453" width="2.4835%" height="15" fill="rgb(254,198,14)" fg:x="2835032366" fg:w="113521087"/><text x="62.2715%" y="463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMInt&gt; (68,447,201 samples, 1.50%)</title><rect x="63.0076%" y="437" width="1.4974%" height="15" fill="rgb(220,217,30)" fg:x="2880106252" fg:w="68447201"/><text x="63.2576%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (10,750,394 samples, 0.24%)</title><rect x="64.2698%" y="421" width="0.2352%" height="15" fill="rgb(215,146,41)" fg:x="2937803059" fg:w="10750394"/><text x="64.5198%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::string::String&gt;&gt; (7,834,817 samples, 0.17%)</title><rect x="64.3336%" y="405" width="0.1714%" height="15" fill="rgb(217,27,36)" fg:x="2940718636" fg:w="7834817"/><text x="64.5836%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,834,817 samples, 0.17%)</title><rect x="64.3336%" y="389" width="0.1714%" height="15" fill="rgb(219,218,39)" fg:x="2940718636" fg:w="7834817"/><text x="64.5836%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,207,702 samples, 0.11%)</title><rect x="64.3911%" y="373" width="0.1139%" height="15" fill="rgb(219,4,42)" fg:x="2943345751" fg:w="5207702"/><text x="64.6411%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::current_memory (5,207,702 samples, 0.11%)</title><rect x="64.3911%" y="357" width="0.1139%" height="15" fill="rgb(249,119,36)" fg:x="2943345751" fg:w="5207702"/><text x="64.6411%" y="367.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_traceable (8,409,311 samples, 0.18%)</title><rect x="64.5050%" y="469" width="0.1840%" height="15" fill="rgb(209,23,33)" fg:x="2948553453" fg:w="8409311"/><text x="64.7550%" y="479.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMVariableWrapper as XLang_Rust::vm::gc::gc::GCObject&gt;::get_traceable (2,912,914 samples, 0.06%)</title><rect x="64.6253%" y="453" width="0.0637%" height="15" fill="rgb(211,10,0)" fg:x="2954049850" fg:w="2912914"/><text x="64.8753%" y="463.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::is_locked (2,642,453 samples, 0.06%)</title><rect x="64.6890%" y="469" width="0.0578%" height="15" fill="rgb(208,99,37)" fg:x="2956962764" fg:w="2642453"/><text x="64.9390%" y="479.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::is_online (2,070,342 samples, 0.05%)</title><rect x="64.7468%" y="469" width="0.0453%" height="15" fill="rgb(213,132,31)" fg:x="2959605217" fg:w="2070342"/><text x="64.9968%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7,960,409 samples, 0.17%)</title><rect x="64.7921%" y="469" width="0.1741%" height="15" fill="rgb(243,129,40)" fg:x="2961675559" fg:w="7960409"/><text x="65.0421%" y="479.50"></text></g><g><title>core::ptr::write (5,835,439 samples, 0.13%)</title><rect x="64.8386%" y="453" width="0.1277%" height="15" fill="rgb(210,66,33)" fg:x="2963800529" fg:w="5835439"/><text x="65.0886%" y="463.50"></text></g><g><title>alloc::vec::from_elem (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="469" width="0.0575%" height="15" fill="rgb(209,189,4)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="479.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="453" width="0.0575%" height="15" fill="rgb(214,107,37)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="437" width="0.0575%" height="15" fill="rgb(245,88,54)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="421" width="0.0575%" height="15" fill="rgb(205,146,20)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="405" width="0.0575%" height="15" fill="rgb(220,161,25)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="389" width="0.0575%" height="15" fill="rgb(215,152,15)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="373" width="0.0575%" height="15" fill="rgb(233,192,44)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="383.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="357" width="0.0575%" height="15" fill="rgb(240,170,46)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="367.50"></text></g><g><title>memset (2,626,882 samples, 0.06%)</title><rect x="64.9662%" y="341" width="0.0575%" height="15" fill="rgb(207,104,33)" fg:x="2969635968" fg:w="2626882"/><text x="65.2162%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="373" width="0.0465%" height="15" fill="rgb(219,21,39)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="357" width="0.0465%" height="15" fill="rgb(214,133,29)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="341" width="0.0465%" height="15" fill="rgb(226,93,6)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="325" width="0.0465%" height="15" fill="rgb(252,222,34)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="309" width="0.0465%" height="15" fill="rgb(252,92,48)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="293" width="0.0465%" height="15" fill="rgb(245,223,24)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::_{{closure}} (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="277" width="0.0465%" height="15" fill="rgb(205,176,3)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="287.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="261" width="0.0465%" height="15" fill="rgb(235,151,15)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="271.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::immediate_collect::_{{closure}} (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="245" width="0.0465%" height="15" fill="rgb(237,209,11)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="229" width="0.0465%" height="15" fill="rgb(243,227,24)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="239.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="213" width="0.0465%" height="15" fill="rgb(239,193,16)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="223.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,123,497 samples, 0.05%)</title><rect x="65.0237%" y="197" width="0.0465%" height="15" fill="rgb(231,27,9)" fg:x="2972262850" fg:w="2123497"/><text x="65.2737%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4,797,198 samples, 0.10%)</title><rect x="65.0237%" y="469" width="0.1049%" height="15" fill="rgb(219,169,10)" fg:x="2972262850" fg:w="4797198"/><text x="65.2737%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4,797,198 samples, 0.10%)</title><rect x="65.0237%" y="453" width="0.1049%" height="15" fill="rgb(244,229,43)" fg:x="2972262850" fg:w="4797198"/><text x="65.2737%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,797,198 samples, 0.10%)</title><rect x="65.0237%" y="437" width="0.1049%" height="15" fill="rgb(254,38,20)" fg:x="2972262850" fg:w="4797198"/><text x="65.2737%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4,797,198 samples, 0.10%)</title><rect x="65.0237%" y="421" width="0.1049%" height="15" fill="rgb(250,47,30)" fg:x="2972262850" fg:w="4797198"/><text x="65.2737%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4,797,198 samples, 0.10%)</title><rect x="65.0237%" y="405" width="0.1049%" height="15" fill="rgb(224,124,36)" fg:x="2972262850" fg:w="4797198"/><text x="65.2737%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4,797,198 samples, 0.10%)</title><rect x="65.0237%" y="389" width="0.1049%" height="15" fill="rgb(246,68,51)" fg:x="2972262850" fg:w="4797198"/><text x="65.2737%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="373" width="0.0585%" height="15" fill="rgb(253,43,49)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="357" width="0.0585%" height="15" fill="rgb(219,54,36)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="341" width="0.0585%" height="15" fill="rgb(227,133,34)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="325" width="0.0585%" height="15" fill="rgb(247,227,15)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="309" width="0.0585%" height="15" fill="rgb(229,96,14)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="293" width="0.0585%" height="15" fill="rgb(220,79,17)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="277" width="0.0585%" height="15" fill="rgb(205,131,53)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="261" width="0.0585%" height="15" fill="rgb(209,50,29)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="271.50"></text></g><g><title>alloc::alloc::realloc (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="245" width="0.0585%" height="15" fill="rgb(245,86,46)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="255.50"></text></g><g><title>realloc (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="229" width="0.0585%" height="15" fill="rgb(235,66,46)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="239.50"></text></g><g><title>[libc.so.6] (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="213" width="0.0585%" height="15" fill="rgb(232,148,31)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="223.50"></text></g><g><title>memcpy (2,673,701 samples, 0.06%)</title><rect x="65.0702%" y="197" width="0.0585%" height="15" fill="rgb(217,149,8)" fg:x="2974386347" fg:w="2673701"/><text x="65.3202%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="469" width="0.0563%" height="15" fill="rgb(209,183,11)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="453" width="0.0563%" height="15" fill="rgb(208,55,20)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="437" width="0.0563%" height="15" fill="rgb(218,39,14)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="421" width="0.0563%" height="15" fill="rgb(216,169,33)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="405" width="0.0563%" height="15" fill="rgb(233,80,24)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="389" width="0.0563%" height="15" fill="rgb(213,179,31)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="399.50"></text></g><g><title>cfree (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="373" width="0.0563%" height="15" fill="rgb(209,19,5)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="383.50"></text></g><g><title>[libc.so.6] (2,574,742 samples, 0.06%)</title><rect x="65.1287%" y="357" width="0.0563%" height="15" fill="rgb(219,18,35)" fg:x="2977060048" fg:w="2574742"/><text x="65.3787%" y="367.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::immediate_collect (336,504,480 samples, 7.36%)</title><rect x="59.8899%" y="485" width="7.3617%" height="15" fill="rgb(209,169,16)" fg:x="2737596265" fg:w="336504480"/><text x="60.1399%" y="495.50">XLang_Rust..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="469" width="2.0666%" height="15" fill="rgb(245,90,51)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="479.50">c..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="453" width="2.0666%" height="15" fill="rgb(220,99,45)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="463.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="437" width="2.0666%" height="15" fill="rgb(249,89,25)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="447.50">c..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="421" width="2.0666%" height="15" fill="rgb(239,193,0)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="431.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="405" width="2.0666%" height="15" fill="rgb(231,126,1)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="415.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="389" width="2.0666%" height="15" fill="rgb(243,166,3)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="399.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="373" width="2.0666%" height="15" fill="rgb(223,22,34)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="383.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="357" width="2.0666%" height="15" fill="rgb(251,52,51)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="367.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="341" width="2.0666%" height="15" fill="rgb(221,165,28)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="351.50">a..</text></g><g><title>cfree (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="325" width="2.0666%" height="15" fill="rgb(218,121,47)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="335.50">c..</text></g><g><title>[libc.so.6] (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="309" width="2.0666%" height="15" fill="rgb(209,120,9)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="319.50">[..</text></g><g><title>[libc.so.6] (94,465,955 samples, 2.07%)</title><rect x="65.1850%" y="293" width="2.0666%" height="15" fill="rgb(236,68,12)" fg:x="2979634790" fg:w="94465955"/><text x="65.4350%" y="303.50">[..</text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,664,816 samples, 0.06%)</title><rect x="70.3975%" y="373" width="0.0583%" height="15" fill="rgb(225,194,26)" fg:x="3217899351" fg:w="2664816"/><text x="70.6475%" y="383.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (2,664,816 samples, 0.06%)</title><rect x="70.3975%" y="357" width="0.0583%" height="15" fill="rgb(231,84,39)" fg:x="3217899351" fg:w="2664816"/><text x="70.6475%" y="367.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (2,664,816 samples, 0.06%)</title><rect x="70.3975%" y="341" width="0.0583%" height="15" fill="rgb(210,11,45)" fg:x="3217899351" fg:w="2664816"/><text x="70.6475%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,296,878 samples, 0.33%)</title><rect x="70.3975%" y="469" width="0.3346%" height="15" fill="rgb(224,54,52)" fg:x="3217899351" fg:w="15296878"/><text x="70.6475%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,296,878 samples, 0.33%)</title><rect x="70.3975%" y="453" width="0.3346%" height="15" fill="rgb(238,102,14)" fg:x="3217899351" fg:w="15296878"/><text x="70.6475%" y="463.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,296,878 samples, 0.33%)</title><rect x="70.3975%" y="437" width="0.3346%" height="15" fill="rgb(243,160,52)" fg:x="3217899351" fg:w="15296878"/><text x="70.6475%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,296,878 samples, 0.33%)</title><rect x="70.3975%" y="421" width="0.3346%" height="15" fill="rgb(216,114,19)" fg:x="3217899351" fg:w="15296878"/><text x="70.6475%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (15,296,878 samples, 0.33%)</title><rect x="70.3975%" y="405" width="0.3346%" height="15" fill="rgb(244,166,37)" fg:x="3217899351" fg:w="15296878"/><text x="70.6475%" y="415.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15,296,878 samples, 0.33%)</title><rect x="70.3975%" y="389" width="0.3346%" height="15" fill="rgb(246,29,44)" fg:x="3217899351" fg:w="15296878"/><text x="70.6475%" y="399.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::remove_lowest_bit (12,632,062 samples, 0.28%)</title><rect x="70.4558%" y="373" width="0.2763%" height="15" fill="rgb(215,56,53)" fg:x="3220564167" fg:w="12632062"/><text x="70.7058%" y="383.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (5,594,431 samples, 0.12%)</title><rect x="70.7321%" y="469" width="0.1224%" height="15" fill="rgb(217,60,2)" fg:x="3233196229" fg:w="5594431"/><text x="70.9821%" y="479.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMVariableWrapper as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (2,681,370 samples, 0.06%)</title><rect x="70.7958%" y="453" width="0.0587%" height="15" fill="rgb(207,26,24)" fg:x="3236109290" fg:w="2681370"/><text x="71.0458%" y="463.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_traceable (4,389,235 samples, 0.10%)</title><rect x="70.8545%" y="469" width="0.0960%" height="15" fill="rgb(252,210,15)" fg:x="3238790660" fg:w="4389235"/><text x="71.1045%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1,939,385 samples, 0.04%)</title><rect x="70.9505%" y="453" width="0.0424%" height="15" fill="rgb(253,209,26)" fg:x="3243179895" fg:w="1939385"/><text x="71.2005%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::capacity (1,939,385 samples, 0.04%)</title><rect x="70.9505%" y="437" width="0.0424%" height="15" fill="rgb(238,170,14)" fg:x="3243179895" fg:w="1939385"/><text x="71.2005%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2,658,674 samples, 0.06%)</title><rect x="70.9929%" y="405" width="0.0582%" height="15" fill="rgb(216,178,15)" fg:x="3245119280" fg:w="2658674"/><text x="71.2429%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::set_ptr_and_cap (2,633,749 samples, 0.06%)</title><rect x="71.0511%" y="405" width="0.0576%" height="15" fill="rgb(250,197,2)" fg:x="3247777954" fg:w="2633749"/><text x="71.3011%" y="415.50"></text></g><g><title>__rdl_alloc (2,711,524 samples, 0.06%)</title><rect x="71.2118%" y="389" width="0.0593%" height="15" fill="rgb(212,70,42)" fg:x="3255125404" fg:w="2711524"/><text x="71.4618%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (47,471,013 samples, 1.04%)</title><rect x="71.1087%" y="405" width="1.0385%" height="15" fill="rgb(227,213,9)" fg:x="3250411703" fg:w="47471013"/><text x="71.3587%" y="415.50"></text></g><g><title>malloc (40,045,788 samples, 0.88%)</title><rect x="71.2712%" y="389" width="0.8761%" height="15" fill="rgb(245,99,25)" fg:x="3257836928" fg:w="40045788"/><text x="71.5212%" y="399.50"></text></g><g><title>[libc.so.6] (29,955,683 samples, 0.66%)</title><rect x="71.4919%" y="373" width="0.6553%" height="15" fill="rgb(250,82,29)" fg:x="3267927033" fg:w="29955683"/><text x="71.7419%" y="383.50"></text></g><g><title>[libc.so.6] (20,923,073 samples, 0.46%)</title><rect x="71.6895%" y="357" width="0.4577%" height="15" fill="rgb(241,226,54)" fg:x="3276959643" fg:w="20923073"/><text x="71.9395%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (57,426,332 samples, 1.26%)</title><rect x="70.9505%" y="469" width="1.2563%" height="15" fill="rgb(221,99,41)" fg:x="3243179895" fg:w="57426332"/><text x="71.2005%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (55,486,947 samples, 1.21%)</title><rect x="70.9929%" y="453" width="1.2139%" height="15" fill="rgb(213,90,21)" fg:x="3245119280" fg:w="55486947"/><text x="71.2429%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (55,486,947 samples, 1.21%)</title><rect x="70.9929%" y="437" width="1.2139%" height="15" fill="rgb(205,208,24)" fg:x="3245119280" fg:w="55486947"/><text x="71.2429%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (55,486,947 samples, 1.21%)</title><rect x="70.9929%" y="421" width="1.2139%" height="15" fill="rgb(246,31,12)" fg:x="3245119280" fg:w="55486947"/><text x="71.2429%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2,723,511 samples, 0.06%)</title><rect x="72.1472%" y="405" width="0.0596%" height="15" fill="rgb(213,154,6)" fg:x="3297882716" fg:w="2723511"/><text x="72.3972%" y="415.50"></text></g><g><title>core::intrinsics::unlikely (2,723,511 samples, 0.06%)</title><rect x="72.1472%" y="389" width="0.0596%" height="15" fill="rgb(222,163,29)" fg:x="3297882716" fg:w="2723511"/><text x="72.3972%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="437" width="0.7832%" height="15" fill="rgb(227,201,8)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="421" width="0.7832%" height="15" fill="rgb(233,9,32)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="405" width="0.7832%" height="15" fill="rgb(217,54,24)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="389" width="0.7832%" height="15" fill="rgb(235,192,0)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="373" width="0.7832%" height="15" fill="rgb(235,45,9)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="383.50"></text></g><g><title>alloc::alloc::alloc_zeroed (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="357" width="0.7832%" height="15" fill="rgb(246,42,40)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="367.50"></text></g><g><title>__libc_calloc (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="341" width="0.7832%" height="15" fill="rgb(248,111,24)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="351.50"></text></g><g><title>[libc.so.6] (35,800,388 samples, 0.78%)</title><rect x="72.2068%" y="325" width="0.7832%" height="15" fill="rgb(249,65,22)" fg:x="3300606227" fg:w="35800388"/><text x="72.4568%" y="335.50"></text></g><g><title>alloc::vec::from_elem (40,921,742 samples, 0.90%)</title><rect x="72.2068%" y="469" width="0.8952%" height="15" fill="rgb(238,111,51)" fg:x="3300606227" fg:w="40921742"/><text x="72.4568%" y="479.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (40,921,742 samples, 0.90%)</title><rect x="72.2068%" y="453" width="0.8952%" height="15" fill="rgb(250,118,22)" fg:x="3300606227" fg:w="40921742"/><text x="72.4568%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (5,121,354 samples, 0.11%)</title><rect x="72.9900%" y="437" width="0.1120%" height="15" fill="rgb(234,84,26)" fg:x="3336406615" fg:w="5121354"/><text x="73.2400%" y="447.50"></text></g><g><title>core::ptr::write (5,121,354 samples, 0.11%)</title><rect x="72.9900%" y="421" width="0.1120%" height="15" fill="rgb(243,172,12)" fg:x="3336406615" fg:w="5121354"/><text x="73.2400%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,592,810 samples, 0.06%)</title><rect x="73.1021%" y="469" width="0.0567%" height="15" fill="rgb(236,150,49)" fg:x="3341527969" fg:w="2592810"/><text x="73.3521%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,592,810 samples, 0.06%)</title><rect x="73.1021%" y="453" width="0.0567%" height="15" fill="rgb(225,197,26)" fg:x="3341527969" fg:w="2592810"/><text x="73.3521%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2,726,674 samples, 0.06%)</title><rect x="73.2170%" y="229" width="0.0597%" height="15" fill="rgb(214,17,42)" fg:x="3346780794" fg:w="2726674"/><text x="73.4670%" y="239.50"></text></g><g><title>core::intrinsics::unlikely (2,726,674 samples, 0.06%)</title><rect x="73.2170%" y="213" width="0.0597%" height="15" fill="rgb(224,165,40)" fg:x="3346780794" fg:w="2726674"/><text x="73.4670%" y="223.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (8,018,066 samples, 0.18%)</title><rect x="73.2766%" y="213" width="0.1754%" height="15" fill="rgb(246,100,4)" fg:x="3349507468" fg:w="8018066"/><text x="73.5266%" y="223.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (8,018,066 samples, 0.18%)</title><rect x="73.2766%" y="197" width="0.1754%" height="15" fill="rgb(222,103,0)" fg:x="3349507468" fg:w="8018066"/><text x="73.5266%" y="207.50"></text></g><g><title>core::intrinsics::unlikely (4,801,720 samples, 0.11%)</title><rect x="73.4520%" y="197" width="0.1050%" height="15" fill="rgb(227,189,26)" fg:x="3357525534" fg:w="4801720"/><text x="73.7020%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::find_or_find_insert_slot (18,187,948 samples, 0.40%)</title><rect x="73.2170%" y="261" width="0.3979%" height="15" fill="rgb(214,202,17)" fg:x="3346780794" fg:w="18187948"/><text x="73.4670%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (18,187,948 samples, 0.40%)</title><rect x="73.2170%" y="245" width="0.3979%" height="15" fill="rgb(229,111,3)" fg:x="3346780794" fg:w="18187948"/><text x="73.4670%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (15,461,274 samples, 0.34%)</title><rect x="73.2766%" y="229" width="0.3382%" height="15" fill="rgb(229,172,15)" fg:x="3349507468" fg:w="15461274"/><text x="73.5266%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner::fix_insert_slot (7,443,208 samples, 0.16%)</title><rect x="73.4520%" y="213" width="0.1628%" height="15" fill="rgb(230,224,35)" fg:x="3357525534" fg:w="7443208"/><text x="73.7020%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner::is_bucket_full (2,641,488 samples, 0.06%)</title><rect x="73.5571%" y="197" width="0.0578%" height="15" fill="rgb(251,141,6)" fg:x="3362327254" fg:w="2641488"/><text x="73.8071%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="469" width="0.5199%" height="15" fill="rgb(225,208,6)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="453" width="0.5199%" height="15" fill="rgb(246,181,16)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="437" width="0.5199%" height="15" fill="rgb(227,129,36)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="447.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="421" width="0.5199%" height="15" fill="rgb(248,117,24)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="405" width="0.5199%" height="15" fill="rgb(214,185,35)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="389" width="0.5199%" height="15" fill="rgb(236,150,34)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="373" width="0.5199%" height="15" fill="rgb(243,228,27)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="357" width="0.5199%" height="15" fill="rgb(245,77,44)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="341" width="0.5199%" height="15" fill="rgb(235,214,42)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="325" width="0.5199%" height="15" fill="rgb(221,74,3)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="309" width="0.5199%" height="15" fill="rgb(206,121,29)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="319.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="293" width="0.5199%" height="15" fill="rgb(249,131,53)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (23,766,517 samples, 0.52%)</title><rect x="73.1588%" y="277" width="0.5199%" height="15" fill="rgb(236,170,29)" fg:x="3344120779" fg:w="23766517"/><text x="73.4088%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="261" width="0.0638%" height="15" fill="rgb(247,96,15)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="245" width="0.0638%" height="15" fill="rgb(211,210,7)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="229" width="0.0638%" height="15" fill="rgb(240,88,50)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="213" width="0.0638%" height="15" fill="rgb(209,229,26)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="197" width="0.0638%" height="15" fill="rgb(210,68,23)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="207.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="181" width="0.0638%" height="15" fill="rgb(229,180,13)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="165" width="0.0638%" height="15" fill="rgb(236,53,44)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="149" width="0.0638%" height="15" fill="rgb(244,214,29)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="133" width="0.0638%" height="15" fill="rgb(220,75,29)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,918,554 samples, 0.06%)</title><rect x="73.6149%" y="117" width="0.0638%" height="15" fill="rgb(214,183,37)" fg:x="3364968742" fg:w="2918554"/><text x="73.8649%" y="127.50"></text></g><g><title>__rdl_dealloc (2,697,064 samples, 0.06%)</title><rect x="73.7946%" y="325" width="0.0590%" height="15" fill="rgb(239,117,29)" fg:x="3373184282" fg:w="2697064"/><text x="74.0446%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,566,360 samples, 0.62%)</title><rect x="73.6787%" y="453" width="0.6249%" height="15" fill="rgb(237,171,35)" fg:x="3367887296" fg:w="28566360"/><text x="73.9287%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;usize&gt;]&gt; (28,566,360 samples, 0.62%)</title><rect x="73.6787%" y="437" width="0.6249%" height="15" fill="rgb(229,178,53)" fg:x="3367887296" fg:w="28566360"/><text x="73.9287%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (25,955,889 samples, 0.57%)</title><rect x="73.7358%" y="421" width="0.5678%" height="15" fill="rgb(210,102,19)" fg:x="3370497767" fg:w="25955889"/><text x="73.9858%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (25,955,889 samples, 0.57%)</title><rect x="73.7358%" y="405" width="0.5678%" height="15" fill="rgb(235,127,22)" fg:x="3370497767" fg:w="25955889"/><text x="73.9858%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25,955,889 samples, 0.57%)</title><rect x="73.7358%" y="389" width="0.5678%" height="15" fill="rgb(244,31,31)" fg:x="3370497767" fg:w="25955889"/><text x="73.9858%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (25,955,889 samples, 0.57%)</title><rect x="73.7358%" y="373" width="0.5678%" height="15" fill="rgb(231,43,21)" fg:x="3370497767" fg:w="25955889"/><text x="73.9858%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25,955,889 samples, 0.57%)</title><rect x="73.7358%" y="357" width="0.5678%" height="15" fill="rgb(217,131,35)" fg:x="3370497767" fg:w="25955889"/><text x="73.9858%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (25,955,889 samples, 0.57%)</title><rect x="73.7358%" y="341" width="0.5678%" height="15" fill="rgb(221,149,4)" fg:x="3370497767" fg:w="25955889"/><text x="73.9858%" y="351.50"></text></g><g><title>cfree (20,572,310 samples, 0.45%)</title><rect x="73.8536%" y="325" width="0.4501%" height="15" fill="rgb(232,170,28)" fg:x="3375881346" fg:w="20572310"/><text x="74.1036%" y="335.50"></text></g><g><title>[libc.so.6] (7,657,193 samples, 0.17%)</title><rect x="74.1361%" y="309" width="0.1675%" height="15" fill="rgb(238,56,10)" fg:x="3388796463" fg:w="7657193"/><text x="74.3861%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (65,777,927 samples, 1.44%)</title><rect x="73.6787%" y="469" width="1.4390%" height="15" fill="rgb(235,196,14)" fg:x="3367887296" fg:w="65777927"/><text x="73.9287%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;alloc::vec::Vec&lt;usize&gt;&gt;&gt; (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="453" width="0.8141%" height="15" fill="rgb(216,45,48)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="437" width="0.8141%" height="15" fill="rgb(238,213,17)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="421" width="0.8141%" height="15" fill="rgb(212,13,2)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="405" width="0.8141%" height="15" fill="rgb(240,114,20)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="389" width="0.8141%" height="15" fill="rgb(228,41,40)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="399.50"></text></g><g><title>cfree (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="373" width="0.8141%" height="15" fill="rgb(244,132,35)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="383.50"></text></g><g><title>[libc.so.6] (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="357" width="0.8141%" height="15" fill="rgb(253,189,4)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="367.50"></text></g><g><title>[libc.so.6] (37,211,567 samples, 0.81%)</title><rect x="74.3037%" y="341" width="0.8141%" height="15" fill="rgb(224,37,19)" fg:x="3396453656" fg:w="37211567"/><text x="74.5537%" y="351.50"></text></g><g><title>[libc.so.6] (9,659,041 samples, 0.21%)</title><rect x="74.9064%" y="325" width="0.2113%" height="15" fill="rgb(235,223,18)" fg:x="3424006182" fg:w="9659041"/><text x="75.1564%" y="335.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (2,663,612 samples, 0.06%)</title><rect x="75.1177%" y="389" width="0.0583%" height="15" fill="rgb(235,163,25)" fg:x="3433665223" fg:w="2663612"/><text x="75.3677%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2,663,612 samples, 0.06%)</title><rect x="75.1177%" y="373" width="0.0583%" height="15" fill="rgb(217,145,28)" fg:x="3433665223" fg:w="2663612"/><text x="75.3677%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2,663,612 samples, 0.06%)</title><rect x="75.1177%" y="357" width="0.0583%" height="15" fill="rgb(223,223,32)" fg:x="3433665223" fg:w="2663612"/><text x="75.3677%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (5,371,729 samples, 0.12%)</title><rect x="75.1177%" y="421" width="0.1175%" height="15" fill="rgb(227,189,39)" fg:x="3433665223" fg:w="5371729"/><text x="75.3677%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,371,729 samples, 0.12%)</title><rect x="75.1177%" y="405" width="0.1175%" height="15" fill="rgb(248,10,22)" fg:x="3433665223" fg:w="5371729"/><text x="75.3677%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,708,117 samples, 0.06%)</title><rect x="75.1760%" y="389" width="0.0592%" height="15" fill="rgb(248,46,39)" fg:x="3436328835" fg:w="2708117"/><text x="75.4260%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,708,117 samples, 0.06%)</title><rect x="75.1760%" y="373" width="0.0592%" height="15" fill="rgb(248,113,48)" fg:x="3436328835" fg:w="2708117"/><text x="75.4260%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (2,708,117 samples, 0.06%)</title><rect x="75.1760%" y="357" width="0.0592%" height="15" fill="rgb(245,16,25)" fg:x="3436328835" fg:w="2708117"/><text x="75.4260%" y="367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,708,117 samples, 0.06%)</title><rect x="75.1760%" y="341" width="0.0592%" height="15" fill="rgb(249,152,16)" fg:x="3436328835" fg:w="2708117"/><text x="75.4260%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,708,117 samples, 0.06%)</title><rect x="75.1760%" y="325" width="0.0592%" height="15" fill="rgb(250,16,1)" fg:x="3436328835" fg:w="2708117"/><text x="75.4260%" y="335.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (1,932,296 samples, 0.04%)</title><rect x="75.2352%" y="373" width="0.0423%" height="15" fill="rgb(249,138,3)" fg:x="3439036952" fg:w="1932296"/><text x="75.4852%" y="383.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4,960,981 samples, 0.11%)</title><rect x="75.2775%" y="373" width="0.1085%" height="15" fill="rgb(227,71,41)" fg:x="3440969248" fg:w="4960981"/><text x="75.5275%" y="383.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (4,960,981 samples, 0.11%)</title><rect x="75.2775%" y="357" width="0.1085%" height="15" fill="rgb(209,184,23)" fg:x="3440969248" fg:w="4960981"/><text x="75.5275%" y="367.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (4,960,981 samples, 0.11%)</title><rect x="75.2775%" y="341" width="0.1085%" height="15" fill="rgb(223,215,31)" fg:x="3440969248" fg:w="4960981"/><text x="75.5275%" y="351.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (4,960,981 samples, 0.11%)</title><rect x="75.2775%" y="325" width="0.1085%" height="15" fill="rgb(210,146,28)" fg:x="3440969248" fg:w="4960981"/><text x="75.5275%" y="335.50"></text></g><g><title>core::intrinsics::likely (25,222,674 samples, 0.55%)</title><rect x="75.3860%" y="373" width="0.5518%" height="15" fill="rgb(209,183,41)" fg:x="3445930229" fg:w="25222674"/><text x="75.6360%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (54,015,658 samples, 1.18%)</title><rect x="75.1177%" y="469" width="1.1817%" height="15" fill="rgb(209,224,45)" fg:x="3433665223" fg:w="54015658"/><text x="75.3677%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (54,015,658 samples, 1.18%)</title><rect x="75.1177%" y="453" width="1.1817%" height="15" fill="rgb(224,209,51)" fg:x="3433665223" fg:w="54015658"/><text x="75.3677%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (54,015,658 samples, 1.18%)</title><rect x="75.1177%" y="437" width="1.1817%" height="15" fill="rgb(223,17,39)" fg:x="3433665223" fg:w="54015658"/><text x="75.3677%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (48,643,929 samples, 1.06%)</title><rect x="75.2352%" y="421" width="1.0642%" height="15" fill="rgb(234,204,37)" fg:x="3439036952" fg:w="48643929"/><text x="75.4852%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (48,643,929 samples, 1.06%)</title><rect x="75.2352%" y="405" width="1.0642%" height="15" fill="rgb(236,120,5)" fg:x="3439036952" fg:w="48643929"/><text x="75.4852%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (48,643,929 samples, 1.06%)</title><rect x="75.2352%" y="389" width="1.0642%" height="15" fill="rgb(248,97,27)" fg:x="3439036952" fg:w="48643929"/><text x="75.4852%" y="399.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (16,527,978 samples, 0.36%)</title><rect x="75.9378%" y="373" width="0.3616%" height="15" fill="rgb(240,66,17)" fg:x="3471152903" fg:w="16527978"/><text x="76.1878%" y="383.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (16,527,978 samples, 0.36%)</title><rect x="75.9378%" y="357" width="0.3616%" height="15" fill="rgb(210,79,3)" fg:x="3471152903" fg:w="16527978"/><text x="76.1878%" y="367.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::mark (432,292,493 samples, 9.46%)</title><rect x="67.2516%" y="485" width="9.4572%" height="15" fill="rgb(214,176,27)" fg:x="3074100745" fg:w="432292493"/><text x="67.5016%" y="495.50">XLang_Rust::vm..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::keys (18,712,357 samples, 0.41%)</title><rect x="76.2994%" y="469" width="0.4094%" height="15" fill="rgb(235,185,3)" fg:x="3487680881" fg:w="18712357"/><text x="76.5494%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (18,712,357 samples, 0.41%)</title><rect x="76.2994%" y="453" width="0.4094%" height="15" fill="rgb(227,24,12)" fg:x="3487680881" fg:w="18712357"/><text x="76.5494%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (18,712,357 samples, 0.41%)</title><rect x="76.2994%" y="437" width="0.4094%" height="15" fill="rgb(252,169,48)" fg:x="3487680881" fg:w="18712357"/><text x="76.5494%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (18,712,357 samples, 0.41%)</title><rect x="76.2994%" y="421" width="0.4094%" height="15" fill="rgb(212,65,1)" fg:x="3487680881" fg:w="18712357"/><text x="76.5494%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (18,712,357 samples, 0.41%)</title><rect x="76.2994%" y="405" width="0.4094%" height="15" fill="rgb(242,39,24)" fg:x="3487680881" fg:w="18712357"/><text x="76.5494%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (5,336,648 samples, 0.12%)</title><rect x="76.5920%" y="389" width="0.1167%" height="15" fill="rgb(249,32,23)" fg:x="3501056590" fg:w="5336648"/><text x="76.8420%" y="399.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_full (5,336,648 samples, 0.12%)</title><rect x="76.5920%" y="373" width="0.1167%" height="15" fill="rgb(251,195,23)" fg:x="3501056590" fg:w="5336648"/><text x="76.8420%" y="383.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcgez_s8 (5,336,648 samples, 0.12%)</title><rect x="76.5920%" y="357" width="0.1167%" height="15" fill="rgb(236,174,8)" fg:x="3501056590" fg:w="5336648"/><text x="76.8420%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2,669,267 samples, 0.06%)</title><rect x="77.6063%" y="469" width="0.0584%" height="15" fill="rgb(220,197,8)" fg:x="3547419231" fg:w="2669267"/><text x="77.8563%" y="479.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2,669,267 samples, 0.06%)</title><rect x="77.6063%" y="453" width="0.0584%" height="15" fill="rgb(240,108,37)" fg:x="3547419231" fg:w="2669267"/><text x="77.8563%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2,669,267 samples, 0.06%)</title><rect x="77.6063%" y="437" width="0.0584%" height="15" fill="rgb(232,176,24)" fg:x="3547419231" fg:w="2669267"/><text x="77.8563%" y="447.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2,531,907 samples, 0.06%)</title><rect x="77.7689%" y="437" width="0.0554%" height="15" fill="rgb(243,35,29)" fg:x="3554851565" fg:w="2531907"/><text x="78.0189%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2,531,907 samples, 0.06%)</title><rect x="77.7689%" y="421" width="0.0554%" height="15" fill="rgb(210,37,18)" fg:x="3554851565" fg:w="2531907"/><text x="78.0189%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (2,531,907 samples, 0.06%)</title><rect x="77.7689%" y="405" width="0.0554%" height="15" fill="rgb(224,184,40)" fg:x="3554851565" fg:w="2531907"/><text x="78.0189%" y="415.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15,269,760 samples, 0.33%)</title><rect x="77.8243%" y="437" width="0.3341%" height="15" fill="rgb(236,39,29)" fg:x="3557383472" fg:w="15269760"/><text x="78.0743%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,743,133 samples, 0.06%)</title><rect x="78.1583%" y="421" width="0.0600%" height="15" fill="rgb(232,48,39)" fg:x="3572653232" fg:w="2743133"/><text x="78.4083%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,743,133 samples, 0.06%)</title><rect x="78.1583%" y="405" width="0.0600%" height="15" fill="rgb(236,34,42)" fg:x="3572653232" fg:w="2743133"/><text x="78.4083%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2,743,133 samples, 0.06%)</title><rect x="78.1583%" y="389" width="0.0600%" height="15" fill="rgb(243,106,37)" fg:x="3572653232" fg:w="2743133"/><text x="78.4083%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (2,703,867 samples, 0.06%)</title><rect x="78.2184%" y="229" width="0.0592%" height="15" fill="rgb(218,96,6)" fg:x="3575396365" fg:w="2703867"/><text x="78.4684%" y="239.50"></text></g><g><title>hashbrown::map::make_hash (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="373" width="0.1182%" height="15" fill="rgb(235,130,12)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="357" width="0.1182%" height="15" fill="rgb(231,95,0)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="341" width="0.1182%" height="15" fill="rgb(228,12,23)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="351.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="325" width="0.1182%" height="15" fill="rgb(216,12,1)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="309" width="0.1182%" height="15" fill="rgb(219,59,3)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="293" width="0.1182%" height="15" fill="rgb(215,208,46)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="277" width="0.1182%" height="15" fill="rgb(254,224,29)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="261" width="0.1182%" height="15" fill="rgb(232,14,29)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,403,322 samples, 0.12%)</title><rect x="78.2184%" y="245" width="0.1182%" height="15" fill="rgb(208,45,52)" fg:x="3575396365" fg:w="5403322"/><text x="78.4684%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,699,455 samples, 0.06%)</title><rect x="78.2775%" y="229" width="0.0591%" height="15" fill="rgb(234,191,28)" fg:x="3578100232" fg:w="2699455"/><text x="78.5275%" y="239.50"></text></g><g><title>&lt;hashbrown::control::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,731,703 samples, 0.06%)</title><rect x="78.3366%" y="325" width="0.0598%" height="15" fill="rgb(244,67,43)" fg:x="3580799687" fg:w="2731703"/><text x="78.5866%" y="335.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::lowest_set_bit (2,731,703 samples, 0.06%)</title><rect x="78.3366%" y="309" width="0.0598%" height="15" fill="rgb(236,189,24)" fg:x="3580799687" fg:w="2731703"/><text x="78.5866%" y="319.50"></text></g><g><title>hashbrown::control::bitmask::BitMask::nonzero_trailing_zeros (2,731,703 samples, 0.06%)</title><rect x="78.3366%" y="293" width="0.0598%" height="15" fill="rgb(239,214,33)" fg:x="3580799687" fg:w="2731703"/><text x="78.5866%" y="303.50"></text></g><g><title>core::num::nonzero::NonZero&lt;u64&gt;::trailing_zeros (2,731,703 samples, 0.06%)</title><rect x="78.3366%" y="277" width="0.0598%" height="15" fill="rgb(226,176,41)" fg:x="3580799687" fg:w="2731703"/><text x="78.5866%" y="287.50"></text></g><g><title>core::intrinsics::likely (5,648,847 samples, 0.12%)</title><rect x="78.3963%" y="325" width="0.1236%" height="15" fill="rgb(248,47,8)" fg:x="3583531390" fg:w="5648847"/><text x="78.6463%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11,092,064 samples, 0.24%)</title><rect x="78.3366%" y="357" width="0.2427%" height="15" fill="rgb(218,81,44)" fg:x="3580799687" fg:w="11092064"/><text x="78.5866%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (11,092,064 samples, 0.24%)</title><rect x="78.3366%" y="341" width="0.2427%" height="15" fill="rgb(213,98,6)" fg:x="3580799687" fg:w="11092064"/><text x="78.5866%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (2,711,514 samples, 0.06%)</title><rect x="78.5199%" y="325" width="0.0593%" height="15" fill="rgb(222,85,22)" fg:x="3589180237" fg:w="2711514"/><text x="78.7699%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (4,984,449 samples, 0.11%)</title><rect x="78.5792%" y="325" width="0.1090%" height="15" fill="rgb(239,46,39)" fg:x="3591891751" fg:w="4984449"/><text x="78.8292%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (4,984,449 samples, 0.11%)</title><rect x="78.5792%" y="309" width="0.1090%" height="15" fill="rgb(237,12,29)" fg:x="3591891751" fg:w="4984449"/><text x="78.8292%" y="319.50"></text></g><g><title>hashbrown::raw::offset_from (4,984,449 samples, 0.11%)</title><rect x="78.5792%" y="293" width="0.1090%" height="15" fill="rgb(214,77,8)" fg:x="3591891751" fg:w="4984449"/><text x="78.8292%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (4,984,449 samples, 0.11%)</title><rect x="78.5792%" y="277" width="0.1090%" height="15" fill="rgb(217,168,37)" fg:x="3591891751" fg:w="4984449"/><text x="78.8292%" y="287.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMTuple as XLang_Rust::vm::gc::gc::GCObject&gt;::free (47,087,439 samples, 1.03%)</title><rect x="77.7689%" y="453" width="1.0301%" height="15" fill="rgb(221,217,23)" fg:x="3554851565" fg:w="47087439"/><text x="78.0189%" y="463.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (29,285,772 samples, 0.64%)</title><rect x="78.1583%" y="437" width="0.6407%" height="15" fill="rgb(243,229,36)" fg:x="3572653232" fg:w="29285772"/><text x="78.4083%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (26,542,639 samples, 0.58%)</title><rect x="78.2184%" y="421" width="0.5807%" height="15" fill="rgb(251,163,40)" fg:x="3575396365" fg:w="26542639"/><text x="78.4684%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (26,542,639 samples, 0.58%)</title><rect x="78.2184%" y="405" width="0.5807%" height="15" fill="rgb(237,222,12)" fg:x="3575396365" fg:w="26542639"/><text x="78.4684%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (26,542,639 samples, 0.58%)</title><rect x="78.2184%" y="389" width="0.5807%" height="15" fill="rgb(248,132,6)" fg:x="3575396365" fg:w="26542639"/><text x="78.4684%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (21,139,317 samples, 0.46%)</title><rect x="78.3366%" y="373" width="0.4625%" height="15" fill="rgb(227,167,50)" fg:x="3580799687" fg:w="21139317"/><text x="78.5866%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (10,047,253 samples, 0.22%)</title><rect x="78.5792%" y="357" width="0.2198%" height="15" fill="rgb(242,84,37)" fg:x="3591891751" fg:w="10047253"/><text x="78.8292%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (10,047,253 samples, 0.22%)</title><rect x="78.5792%" y="341" width="0.2198%" height="15" fill="rgb(212,4,50)" fg:x="3591891751" fg:w="10047253"/><text x="78.8292%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (5,062,804 samples, 0.11%)</title><rect x="78.6883%" y="325" width="0.1108%" height="15" fill="rgb(230,228,32)" fg:x="3596876200" fg:w="5062804"/><text x="78.9383%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (10,574,163 samples, 0.23%)</title><rect x="78.8594%" y="389" width="0.2313%" height="15" fill="rgb(248,217,23)" fg:x="3604700651" fg:w="10574163"/><text x="79.1094%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10,574,163 samples, 0.23%)</title><rect x="78.8594%" y="373" width="0.2313%" height="15" fill="rgb(238,197,32)" fg:x="3604700651" fg:w="10574163"/><text x="79.1094%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8,287,917 samples, 0.18%)</title><rect x="78.9095%" y="357" width="0.1813%" height="15" fill="rgb(236,106,1)" fg:x="3606986897" fg:w="8287917"/><text x="79.1595%" y="367.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (8,287,917 samples, 0.18%)</title><rect x="78.9095%" y="341" width="0.1813%" height="15" fill="rgb(219,228,13)" fg:x="3606986897" fg:w="8287917"/><text x="79.1595%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (8,287,917 samples, 0.18%)</title><rect x="78.9095%" y="325" width="0.1813%" height="15" fill="rgb(238,30,35)" fg:x="3606986897" fg:w="8287917"/><text x="79.1595%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (8,287,917 samples, 0.18%)</title><rect x="78.9095%" y="309" width="0.1813%" height="15" fill="rgb(236,70,23)" fg:x="3606986897" fg:w="8287917"/><text x="79.1595%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8,287,917 samples, 0.18%)</title><rect x="78.9095%" y="293" width="0.1813%" height="15" fill="rgb(249,104,48)" fg:x="3606986897" fg:w="8287917"/><text x="79.1595%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8,287,917 samples, 0.18%)</title><rect x="78.9095%" y="277" width="0.1813%" height="15" fill="rgb(254,117,50)" fg:x="3606986897" fg:w="8287917"/><text x="79.1595%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8,287,917 samples, 0.18%)</title><rect x="78.9095%" y="261" width="0.1813%" height="15" fill="rgb(223,152,4)" fg:x="3606986897" fg:w="8287917"/><text x="79.1595%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,663,247 samples, 0.06%)</title><rect x="79.0325%" y="245" width="0.0583%" height="15" fill="rgb(245,6,2)" fg:x="3612611567" fg:w="2663247"/><text x="79.2825%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,663,247 samples, 0.06%)</title><rect x="79.0325%" y="229" width="0.0583%" height="15" fill="rgb(249,150,24)" fg:x="3612611567" fg:w="2663247"/><text x="79.2825%" y="239.50"></text></g><g><title>core::intrinsics::likely (5,607,432 samples, 0.12%)</title><rect x="79.0908%" y="341" width="0.1227%" height="15" fill="rgb(228,185,42)" fg:x="3615274814" fg:w="5607432"/><text x="79.3408%" y="351.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (6,489,739 samples, 0.14%)</title><rect x="79.2134%" y="341" width="0.1420%" height="15" fill="rgb(226,39,33)" fg:x="3620882246" fg:w="6489739"/><text x="79.4634%" y="351.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (6,489,739 samples, 0.14%)</title><rect x="79.2134%" y="325" width="0.1420%" height="15" fill="rgb(221,166,19)" fg:x="3620882246" fg:w="6489739"/><text x="79.4634%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19,846,558 samples, 0.43%)</title><rect x="79.0908%" y="389" width="0.4342%" height="15" fill="rgb(209,109,2)" fg:x="3615274814" fg:w="19846558"/><text x="79.3408%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19,846,558 samples, 0.43%)</title><rect x="79.0908%" y="373" width="0.4342%" height="15" fill="rgb(252,216,26)" fg:x="3615274814" fg:w="19846558"/><text x="79.3408%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (19,846,558 samples, 0.43%)</title><rect x="79.0908%" y="357" width="0.4342%" height="15" fill="rgb(227,173,36)" fg:x="3615274814" fg:w="19846558"/><text x="79.3408%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::probe_seq (7,749,387 samples, 0.17%)</title><rect x="79.3554%" y="341" width="0.1695%" height="15" fill="rgb(209,90,7)" fg:x="3627371985" fg:w="7749387"/><text x="79.6054%" y="351.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (35,857,108 samples, 0.78%)</title><rect x="78.8594%" y="437" width="0.7844%" height="15" fill="rgb(250,194,11)" fg:x="3604700651" fg:w="35857108"/><text x="79.1094%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (35,857,108 samples, 0.78%)</title><rect x="78.8594%" y="421" width="0.7844%" height="15" fill="rgb(220,72,50)" fg:x="3604700651" fg:w="35857108"/><text x="79.1094%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35,857,108 samples, 0.78%)</title><rect x="78.8594%" y="405" width="0.7844%" height="15" fill="rgb(222,106,48)" fg:x="3604700651" fg:w="35857108"/><text x="79.1094%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (5,436,387 samples, 0.12%)</title><rect x="79.5250%" y="389" width="0.1189%" height="15" fill="rgb(216,220,45)" fg:x="3635121372" fg:w="5436387"/><text x="79.7750%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (5,436,387 samples, 0.12%)</title><rect x="79.5250%" y="373" width="0.1189%" height="15" fill="rgb(234,112,18)" fg:x="3635121372" fg:w="5436387"/><text x="79.7750%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (7,988,007 samples, 0.17%)</title><rect x="79.6439%" y="389" width="0.1748%" height="15" fill="rgb(206,179,9)" fg:x="3640557759" fg:w="7988007"/><text x="79.8939%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,988,007 samples, 0.17%)</title><rect x="79.6439%" y="373" width="0.1748%" height="15" fill="rgb(215,115,40)" fg:x="3640557759" fg:w="7988007"/><text x="79.8939%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7,988,007 samples, 0.17%)</title><rect x="79.6439%" y="357" width="0.1748%" height="15" fill="rgb(222,69,34)" fg:x="3640557759" fg:w="7988007"/><text x="79.8939%" y="367.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCRef as core::hash::Hash&gt;::hash (7,988,007 samples, 0.17%)</title><rect x="79.6439%" y="341" width="0.1748%" height="15" fill="rgb(209,161,10)" fg:x="3640557759" fg:w="7988007"/><text x="79.8939%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2,741,272 samples, 0.06%)</title><rect x="79.7587%" y="325" width="0.0600%" height="15" fill="rgb(217,6,38)" fg:x="3645804494" fg:w="2741272"/><text x="80.0087%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (2,741,272 samples, 0.06%)</title><rect x="79.7587%" y="309" width="0.0600%" height="15" fill="rgb(229,229,48)" fg:x="3645804494" fg:w="2741272"/><text x="80.0087%" y="319.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (2,741,272 samples, 0.06%)</title><rect x="79.7587%" y="293" width="0.0600%" height="15" fill="rgb(225,21,28)" fg:x="3645804494" fg:w="2741272"/><text x="80.0087%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2,741,272 samples, 0.06%)</title><rect x="79.7587%" y="277" width="0.0600%" height="15" fill="rgb(206,33,13)" fg:x="3645804494" fg:w="2741272"/><text x="80.0087%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,741,272 samples, 0.06%)</title><rect x="79.7587%" y="261" width="0.0600%" height="15" fill="rgb(242,178,17)" fg:x="3645804494" fg:w="2741272"/><text x="80.0087%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (2,741,272 samples, 0.06%)</title><rect x="79.7587%" y="245" width="0.0600%" height="15" fill="rgb(220,162,5)" fg:x="3645804494" fg:w="2741272"/><text x="80.0087%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5,474,825 samples, 0.12%)</title><rect x="79.8186%" y="373" width="0.1198%" height="15" fill="rgb(210,33,43)" fg:x="3648545766" fg:w="5474825"/><text x="80.0686%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5,474,825 samples, 0.12%)</title><rect x="79.8186%" y="357" width="0.1198%" height="15" fill="rgb(216,116,54)" fg:x="3648545766" fg:w="5474825"/><text x="80.0686%" y="367.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (5,474,825 samples, 0.12%)</title><rect x="79.8186%" y="341" width="0.1198%" height="15" fill="rgb(249,92,24)" fg:x="3648545766" fg:w="5474825"/><text x="80.0686%" y="351.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (5,474,825 samples, 0.12%)</title><rect x="79.8186%" y="325" width="0.1198%" height="15" fill="rgb(231,189,14)" fg:x="3648545766" fg:w="5474825"/><text x="80.0686%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (2,782,253 samples, 0.06%)</title><rect x="79.9384%" y="341" width="0.0609%" height="15" fill="rgb(230,8,41)" fg:x="3654020591" fg:w="2782253"/><text x="80.1884%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (2,782,253 samples, 0.06%)</title><rect x="79.9384%" y="325" width="0.0609%" height="15" fill="rgb(249,7,27)" fg:x="3654020591" fg:w="2782253"/><text x="80.1884%" y="335.50"></text></g><g><title>hashbrown::raw::offset_from (2,782,253 samples, 0.06%)</title><rect x="79.9384%" y="309" width="0.0609%" height="15" fill="rgb(232,86,5)" fg:x="3654020591" fg:w="2782253"/><text x="80.1884%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (2,782,253 samples, 0.06%)</title><rect x="79.9384%" y="293" width="0.0609%" height="15" fill="rgb(224,175,18)" fg:x="3654020591" fg:w="2782253"/><text x="80.1884%" y="303.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::remove_reference (57,135,404 samples, 1.25%)</title><rect x="78.7990%" y="453" width="1.2499%" height="15" fill="rgb(220,129,12)" fg:x="3601939004" fg:w="57135404"/><text x="79.0490%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (18,516,649 samples, 0.41%)</title><rect x="79.6439%" y="437" width="0.4051%" height="15" fill="rgb(210,19,36)" fg:x="3640557759" fg:w="18516649"/><text x="79.8939%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (18,516,649 samples, 0.41%)</title><rect x="79.6439%" y="421" width="0.4051%" height="15" fill="rgb(219,96,14)" fg:x="3640557759" fg:w="18516649"/><text x="79.8939%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (18,516,649 samples, 0.41%)</title><rect x="79.6439%" y="405" width="0.4051%" height="15" fill="rgb(249,106,1)" fg:x="3640557759" fg:w="18516649"/><text x="79.8939%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (10,528,642 samples, 0.23%)</title><rect x="79.8186%" y="389" width="0.2303%" height="15" fill="rgb(249,155,20)" fg:x="3648545766" fg:w="10528642"/><text x="80.0686%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (5,053,817 samples, 0.11%)</title><rect x="79.9384%" y="373" width="0.1106%" height="15" fill="rgb(244,168,9)" fg:x="3654020591" fg:w="5053817"/><text x="80.1884%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (5,053,817 samples, 0.11%)</title><rect x="79.9384%" y="357" width="0.1106%" height="15" fill="rgb(216,23,50)" fg:x="3654020591" fg:w="5053817"/><text x="80.1884%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::erase (2,271,564 samples, 0.05%)</title><rect x="79.9993%" y="341" width="0.0497%" height="15" fill="rgb(224,219,20)" fg:x="3656802844" fg:w="2271564"/><text x="80.2493%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76,561,168 samples, 1.67%)</title><rect x="80.0490%" y="437" width="1.6749%" height="15" fill="rgb(222,156,15)" fg:x="3659074408" fg:w="76561168"/><text x="80.2990%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73,867,491 samples, 1.62%)</title><rect x="80.1079%" y="421" width="1.6160%" height="15" fill="rgb(231,97,17)" fg:x="3661768085" fg:w="73867491"/><text x="80.3579%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (73,867,491 samples, 1.62%)</title><rect x="80.1079%" y="405" width="1.6160%" height="15" fill="rgb(218,70,48)" fg:x="3661768085" fg:w="73867491"/><text x="80.3579%" y="415.50"></text></g><g><title>cfree (71,152,071 samples, 1.56%)</title><rect x="80.1673%" y="389" width="1.5566%" height="15" fill="rgb(212,196,52)" fg:x="3664483505" fg:w="71152071"/><text x="80.4173%" y="399.50"></text></g><g><title>[libc.so.6] (71,152,071 samples, 1.56%)</title><rect x="80.1673%" y="373" width="1.5566%" height="15" fill="rgb(243,203,18)" fg:x="3664483505" fg:w="71152071"/><text x="80.4173%" y="383.50"></text></g><g><title>[libc.so.6] (68,427,388 samples, 1.50%)</title><rect x="80.2269%" y="357" width="1.4970%" height="15" fill="rgb(252,125,41)" fg:x="3667208188" fg:w="68427388"/><text x="80.4769%" y="367.50"></text></g><g><title>[libc.so.6] (51,771,243 samples, 1.13%)</title><rect x="80.5913%" y="341" width="1.1326%" height="15" fill="rgb(223,180,33)" fg:x="3683864333" fg:w="51771243"/><text x="80.8413%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMInt&gt; (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="437" width="0.0588%" height="15" fill="rgb(254,159,46)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="421" width="0.0588%" height="15" fill="rgb(254,38,10)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="431.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="405" width="0.0588%" height="15" fill="rgb(208,217,32)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="389" width="0.0588%" height="15" fill="rgb(221,120,13)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="373" width="0.0588%" height="15" fill="rgb(246,54,52)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="357" width="0.0588%" height="15" fill="rgb(242,34,25)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="341" width="0.0588%" height="15" fill="rgb(247,209,9)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (2,688,125 samples, 0.06%)</title><rect x="81.7239%" y="325" width="0.0588%" height="15" fill="rgb(228,71,26)" fg:x="3735635576" fg:w="2688125"/><text x="81.9739%" y="335.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="405" width="0.1786%" height="15" fill="rgb(222,145,49)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="389" width="0.1786%" height="15" fill="rgb(218,121,17)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="373" width="0.1786%" height="15" fill="rgb(244,50,7)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="357" width="0.1786%" height="15" fill="rgb(246,229,37)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="341" width="0.1786%" height="15" fill="rgb(225,18,5)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="325" width="0.1786%" height="15" fill="rgb(213,204,8)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="309" width="0.1786%" height="15" fill="rgb(238,103,6)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="319.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_full (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="293" width="0.1786%" height="15" fill="rgb(222,25,35)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="303.50"></text></g><g><title>core::core_arch::aarch64::neon::generated::vcgez_s8 (8,161,613 samples, 0.18%)</title><rect x="81.7827%" y="277" width="0.1786%" height="15" fill="rgb(213,203,35)" fg:x="3738323701" fg:w="8161613"/><text x="82.0327%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (18,073,081 samples, 0.40%)</title><rect x="81.7827%" y="421" width="0.3954%" height="15" fill="rgb(221,79,53)" fg:x="3738323701" fg:w="18073081"/><text x="82.0327%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize&gt;&gt; (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="405" width="0.2168%" height="15" fill="rgb(243,200,35)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize,std::hash::random::RandomState&gt;&gt; (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="389" width="0.2168%" height="15" fill="rgb(248,60,25)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(XLang_Rust::vm::gc::gc::GCRef,usize)&gt;&gt; (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="373" width="0.2168%" height="15" fill="rgb(227,53,46)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="357" width="0.2168%" height="15" fill="rgb(216,120,32)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="341" width="0.2168%" height="15" fill="rgb(220,134,1)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="325" width="0.2168%" height="15" fill="rgb(237,168,5)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="309" width="0.2168%" height="15" fill="rgb(231,100,33)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="293" width="0.2168%" height="15" fill="rgb(236,177,47)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="303.50"></text></g><g><title>cfree (9,911,468 samples, 0.22%)</title><rect x="81.9612%" y="277" width="0.2168%" height="15" fill="rgb(235,7,49)" fg:x="3746485314" fg:w="9911468"/><text x="82.2112%" y="287.50"></text></g><g><title>[libc.so.6] (4,643,212 samples, 0.10%)</title><rect x="82.0765%" y="261" width="0.1016%" height="15" fill="rgb(232,119,22)" fg:x="3751753570" fg:w="4643212"/><text x="82.3265%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMRange&gt; (20,802,026 samples, 0.46%)</title><rect x="81.7827%" y="437" width="0.4551%" height="15" fill="rgb(254,73,53)" fg:x="3738323701" fg:w="20802026"/><text x="82.0327%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (2,728,945 samples, 0.06%)</title><rect x="82.1781%" y="421" width="0.0597%" height="15" fill="rgb(251,35,20)" fg:x="3756396782" fg:w="2728945"/><text x="82.4281%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,728,945 samples, 0.06%)</title><rect x="82.1781%" y="405" width="0.0597%" height="15" fill="rgb(241,119,20)" fg:x="3756396782" fg:w="2728945"/><text x="82.4281%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (2,728,945 samples, 0.06%)</title><rect x="82.1781%" y="389" width="0.0597%" height="15" fill="rgb(207,102,14)" fg:x="3756396782" fg:w="2728945"/><text x="82.4281%" y="399.50"></text></g><g><title>&lt;XLang_Rust::vm::gc::gc::GCTraceable as core::ops::drop::Drop&gt;::drop (5,504,033 samples, 0.12%)</title><rect x="82.2378%" y="405" width="0.1204%" height="15" fill="rgb(248,201,50)" fg:x="3759125727" fg:w="5504033"/><text x="82.4878%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2,761,576 samples, 0.06%)</title><rect x="82.2978%" y="389" width="0.0604%" height="15" fill="rgb(222,185,44)" fg:x="3761868184" fg:w="2761576"/><text x="82.5478%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&lt;&amp;usize&gt;&gt;::sum (2,761,576 samples, 0.06%)</title><rect x="82.2978%" y="373" width="0.0604%" height="15" fill="rgb(218,107,18)" fg:x="3761868184" fg:w="2761576"/><text x="82.5478%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::Values&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,761,576 samples, 0.06%)</title><rect x="82.2978%" y="357" width="0.0604%" height="15" fill="rgb(237,177,39)" fg:x="3761868184" fg:w="2761576"/><text x="82.5478%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,761,576 samples, 0.06%)</title><rect x="82.2978%" y="341" width="0.0604%" height="15" fill="rgb(246,69,6)" fg:x="3761868184" fg:w="2761576"/><text x="82.5478%" y="351.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,761,576 samples, 0.06%)</title><rect x="82.2978%" y="325" width="0.0604%" height="15" fill="rgb(234,208,37)" fg:x="3761868184" fg:w="2761576"/><text x="82.5478%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,761,576 samples, 0.06%)</title><rect x="82.2978%" y="309" width="0.0604%" height="15" fill="rgb(225,4,6)" fg:x="3761868184" fg:w="2761576"/><text x="82.5478%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (2,761,576 samples, 0.06%)</title><rect x="82.2978%" y="293" width="0.0604%" height="15" fill="rgb(233,45,0)" fg:x="3761868184" fg:w="2761576"/><text x="82.5478%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::gc::gc::GCTraceable&gt; (13,516,922 samples, 0.30%)</title><rect x="82.2378%" y="421" width="0.2957%" height="15" fill="rgb(226,136,5)" fg:x="3759125727" fg:w="13516922"/><text x="82.4878%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize&gt;&gt; (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="405" width="0.1753%" height="15" fill="rgb(211,91,47)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;XLang_Rust::vm::gc::gc::GCRef,usize,std::hash::random::RandomState&gt;&gt; (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="389" width="0.1753%" height="15" fill="rgb(242,88,51)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(XLang_Rust::vm::gc::gc::GCRef,usize)&gt;&gt; (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="373" width="0.1753%" height="15" fill="rgb(230,91,28)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="357" width="0.1753%" height="15" fill="rgb(254,186,29)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="341" width="0.1753%" height="15" fill="rgb(238,6,4)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="325" width="0.1753%" height="15" fill="rgb(221,151,16)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="309" width="0.1753%" height="15" fill="rgb(251,143,52)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="293" width="0.1753%" height="15" fill="rgb(206,90,15)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="303.50"></text></g><g><title>cfree (8,012,889 samples, 0.18%)</title><rect x="82.3582%" y="277" width="0.1753%" height="15" fill="rgb(218,35,8)" fg:x="3764629760" fg:w="8012889"/><text x="82.6082%" y="287.50"></text></g><g><title>[libc.so.6] (2,718,521 samples, 0.06%)</title><rect x="82.4740%" y="261" width="0.0595%" height="15" fill="rgb(239,215,6)" fg:x="3769924128" fg:w="2718521"/><text x="82.7240%" y="271.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::free (228,010,150 samples, 4.99%)</title><rect x="77.6647%" y="469" width="4.9881%" height="15" fill="rgb(245,116,39)" fg:x="3550088498" fg:w="228010150"/><text x="77.9147%" y="479.50">XLang_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn XLang_Rust::vm::gc::gc::GCObject&gt;&gt; (119,024,240 samples, 2.60%)</title><rect x="80.0490%" y="453" width="2.6039%" height="15" fill="rgb(242,65,28)" fg:x="3659074408" fg:w="119024240"/><text x="80.2990%" y="463.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::executor::variable::VMTuple&gt; (18,972,921 samples, 0.42%)</title><rect x="82.2378%" y="437" width="0.4151%" height="15" fill="rgb(252,132,53)" fg:x="3759125727" fg:w="18972921"/><text x="82.4878%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="421" width="0.1194%" height="15" fill="rgb(224,159,50)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="405" width="0.1194%" height="15" fill="rgb(224,93,4)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="389" width="0.1194%" height="15" fill="rgb(208,81,34)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="373" width="0.1194%" height="15" fill="rgb(233,92,54)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="357" width="0.1194%" height="15" fill="rgb(237,21,14)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="341" width="0.1194%" height="15" fill="rgb(249,128,51)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="351.50"></text></g><g><title>cfree (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="325" width="0.1194%" height="15" fill="rgb(223,129,24)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="335.50"></text></g><g><title>[libc.so.6] (5,455,999 samples, 0.12%)</title><rect x="82.5335%" y="309" width="0.1194%" height="15" fill="rgb(231,168,25)" fg:x="3772642649" fg:w="5455999"/><text x="82.7835%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="469" width="0.0535%" height="15" fill="rgb(224,39,20)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="453" width="0.0535%" height="15" fill="rgb(225,152,53)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="437" width="0.0535%" height="15" fill="rgb(252,17,24)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="421" width="0.0535%" height="15" fill="rgb(250,114,30)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="405" width="0.0535%" height="15" fill="rgb(229,5,4)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="389" width="0.0535%" height="15" fill="rgb(225,176,49)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="373" width="0.0535%" height="15" fill="rgb(224,221,49)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2,444,232 samples, 0.05%)</title><rect x="82.6528%" y="357" width="0.0535%" height="15" fill="rgb(253,169,27)" fg:x="3778098648" fg:w="2444232"/><text x="82.9028%" y="367.50"></text></g><g><title>alloc::vec::from_elem (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="469" width="0.0584%" height="15" fill="rgb(211,206,16)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="479.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="453" width="0.0584%" height="15" fill="rgb(244,87,35)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="437" width="0.0584%" height="15" fill="rgb(246,28,10)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_zeroed_in (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="421" width="0.0584%" height="15" fill="rgb(229,12,44)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="405" width="0.0584%" height="15" fill="rgb(210,145,37)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="389" width="0.0584%" height="15" fill="rgb(227,112,52)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="373" width="0.0584%" height="15" fill="rgb(238,155,34)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="383.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="357" width="0.0584%" height="15" fill="rgb(239,226,36)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="367.50"></text></g><g><title>__libc_calloc (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="341" width="0.0584%" height="15" fill="rgb(230,16,23)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="351.50"></text></g><g><title>[libc.so.6] (2,669,248 samples, 0.06%)</title><rect x="82.7063%" y="325" width="0.0584%" height="15" fill="rgb(236,171,36)" fg:x="3780542880" fg:w="2669248"/><text x="82.9563%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,746,070 samples, 0.06%)</title><rect x="82.7647%" y="469" width="0.0601%" height="15" fill="rgb(221,22,14)" fg:x="3783212128" fg:w="2746070"/><text x="83.0147%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,746,070 samples, 0.06%)</title><rect x="82.7647%" y="453" width="0.0601%" height="15" fill="rgb(242,43,11)" fg:x="3783212128" fg:w="2746070"/><text x="83.0147%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,746,070 samples, 0.06%)</title><rect x="82.7647%" y="437" width="0.0601%" height="15" fill="rgb(232,69,23)" fg:x="3783212128" fg:w="2746070"/><text x="83.0147%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,746,070 samples, 0.06%)</title><rect x="82.7647%" y="421" width="0.0601%" height="15" fill="rgb(216,180,54)" fg:x="3783212128" fg:w="2746070"/><text x="83.0147%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,746,070 samples, 0.06%)</title><rect x="82.7647%" y="405" width="0.0601%" height="15" fill="rgb(216,5,24)" fg:x="3783212128" fg:w="2746070"/><text x="83.0147%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2,746,070 samples, 0.06%)</title><rect x="82.7647%" y="389" width="0.0601%" height="15" fill="rgb(225,89,9)" fg:x="3783212128" fg:w="2746070"/><text x="83.0147%" y="399.50"></text></g><g><title>core::ptr::write (2,746,070 samples, 0.06%)</title><rect x="82.7647%" y="373" width="0.0601%" height="15" fill="rgb(243,75,33)" fg:x="3783212128" fg:w="2746070"/><text x="83.0147%" y="383.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::collect (1,172,546,675 samples, 25.65%)</title><rect x="59.8899%" y="501" width="25.6516%" height="15" fill="rgb(247,141,45)" fg:x="2737596265" fg:w="1172546675"/><text x="60.1399%" y="511.50">XLang_Rust::vm::gc::gc::GCSystem::collect</text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::sweep (403,749,702 samples, 8.83%)</title><rect x="76.7088%" y="485" width="8.8328%" height="15" fill="rgb(232,177,36)" fg:x="3506393238" fg:w="403749702"/><text x="76.9588%" y="495.50">XLang_Rust::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="469" width="2.7168%" height="15" fill="rgb(219,125,36)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="479.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="453" width="2.7168%" height="15" fill="rgb(227,94,9)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="463.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;XLang_Rust::vm::gc::gc::GCRef,alloc::alloc::Global&gt;&gt; (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="437" width="2.7168%" height="15" fill="rgb(240,34,52)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="447.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="421" width="2.7168%" height="15" fill="rgb(216,45,12)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="431.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="405" width="2.7168%" height="15" fill="rgb(246,21,19)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="415.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="389" width="2.7168%" height="15" fill="rgb(213,98,42)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="399.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="373" width="2.7168%" height="15" fill="rgb(250,136,47)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="383.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="357" width="2.7168%" height="15" fill="rgb(251,124,27)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="367.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="341" width="2.7168%" height="15" fill="rgb(229,180,14)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="351.50">al..</text></g><g><title>cfree (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="325" width="2.7168%" height="15" fill="rgb(245,216,25)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="335.50">cf..</text></g><g><title>[libc.so.6] (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="309" width="2.7168%" height="15" fill="rgb(251,43,5)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="319.50">[l..</text></g><g><title>[libc.so.6] (124,184,742 samples, 2.72%)</title><rect x="82.8248%" y="293" width="2.7168%" height="15" fill="rgb(250,128,24)" fg:x="3785958198" fg:w="124184742"/><text x="83.0748%" y="303.50">[l..</text></g><g><title>[libc.so.6] (88,318,623 samples, 1.93%)</title><rect x="83.6094%" y="277" width="1.9321%" height="15" fill="rgb(217,117,27)" fg:x="3821824317" fg:w="88318623"/><text x="83.8594%" y="287.50">[..</text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (136,409,571 samples, 2.98%)</title><rect x="85.5416%" y="501" width="2.9842%" height="15" fill="rgb(245,147,4)" fg:x="3910142940" fg:w="136409571"/><text x="85.7916%" y="511.50">all..</text></g><g><title>alloc::alloc::exchange_malloc (91,805,014 samples, 2.01%)</title><rect x="86.5174%" y="485" width="2.0084%" height="15" fill="rgb(242,201,35)" fg:x="3954747497" fg:w="91805014"/><text x="86.7674%" y="495.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (88,999,685 samples, 1.95%)</title><rect x="86.5787%" y="469" width="1.9470%" height="15" fill="rgb(218,181,1)" fg:x="3957552826" fg:w="88999685"/><text x="86.8287%" y="479.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (88,999,685 samples, 1.95%)</title><rect x="86.5787%" y="453" width="1.9470%" height="15" fill="rgb(222,6,29)" fg:x="3957552826" fg:w="88999685"/><text x="86.8287%" y="463.50">a..</text></g><g><title>alloc::alloc::alloc (88,999,685 samples, 1.95%)</title><rect x="86.5787%" y="437" width="1.9470%" height="15" fill="rgb(208,186,3)" fg:x="3957552826" fg:w="88999685"/><text x="86.8287%" y="447.50">a..</text></g><g><title>malloc (86,785,846 samples, 1.90%)</title><rect x="86.6272%" y="421" width="1.8986%" height="15" fill="rgb(216,36,26)" fg:x="3959766665" fg:w="86785846"/><text x="86.8772%" y="431.50">m..</text></g><g><title>[libc.so.6] (60,034,615 samples, 1.31%)</title><rect x="87.2124%" y="405" width="1.3134%" height="15" fill="rgb(248,201,23)" fg:x="3986517896" fg:w="60034615"/><text x="87.4624%" y="415.50"></text></g><g><title>[libc.so.6] (8,026,052 samples, 0.18%)</title><rect x="88.3502%" y="389" width="0.1756%" height="15" fill="rgb(251,170,31)" fg:x="4038526459" fg:w="8026052"/><text x="88.6002%" y="399.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCSystem::new_object (1,333,772,145 samples, 29.18%)</title><rect x="59.4503%" y="517" width="29.1787%" height="15" fill="rgb(207,110,25)" fg:x="2717501546" fg:w="1333772145"/><text x="59.7003%" y="527.50">XLang_Rust::vm::gc::gc::GCSystem::new_object</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,721,180 samples, 0.10%)</title><rect x="88.5258%" y="501" width="0.1033%" height="15" fill="rgb(250,54,15)" fg:x="4046552511" fg:w="4721180"/><text x="88.7758%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2,812,589 samples, 0.06%)</title><rect x="88.5675%" y="485" width="0.0615%" height="15" fill="rgb(227,68,33)" fg:x="4048461102" fg:w="2812589"/><text x="88.8175%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2,812,589 samples, 0.06%)</title><rect x="88.5675%" y="469" width="0.0615%" height="15" fill="rgb(238,34,41)" fg:x="4048461102" fg:w="2812589"/><text x="88.8175%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (2,812,589 samples, 0.06%)</title><rect x="88.5675%" y="453" width="0.0615%" height="15" fill="rgb(220,11,15)" fg:x="4048461102" fg:w="2812589"/><text x="88.8175%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (2,812,589 samples, 0.06%)</title><rect x="88.5675%" y="437" width="0.0615%" height="15" fill="rgb(246,111,35)" fg:x="4048461102" fg:w="2812589"/><text x="88.8175%" y="447.50"></text></g><g><title>__rdl_alloc (2,918,500 samples, 0.06%)</title><rect x="88.8180%" y="437" width="0.0638%" height="15" fill="rgb(209,88,53)" fg:x="4059908891" fg:w="2918500"/><text x="89.0680%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2,332,043 samples, 0.05%)</title><rect x="88.8818%" y="437" width="0.0510%" height="15" fill="rgb(231,185,47)" fg:x="4062827391" fg:w="2332043"/><text x="89.1318%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (30,472,466 samples, 0.67%)</title><rect x="88.6929%" y="501" width="0.6666%" height="15" fill="rgb(233,154,1)" fg:x="4054192145" fg:w="30472466"/><text x="88.9429%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (30,472,466 samples, 0.67%)</title><rect x="88.6929%" y="485" width="0.6666%" height="15" fill="rgb(225,15,46)" fg:x="4054192145" fg:w="30472466"/><text x="88.9429%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (27,567,469 samples, 0.60%)</title><rect x="88.7564%" y="469" width="0.6031%" height="15" fill="rgb(211,135,41)" fg:x="4057097142" fg:w="27567469"/><text x="89.0064%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (27,567,469 samples, 0.60%)</title><rect x="88.7564%" y="453" width="0.6031%" height="15" fill="rgb(208,54,0)" fg:x="4057097142" fg:w="27567469"/><text x="89.0064%" y="463.50"></text></g><g><title>malloc (19,505,177 samples, 0.43%)</title><rect x="88.9328%" y="437" width="0.4267%" height="15" fill="rgb(244,136,14)" fg:x="4065159434" fg:w="19505177"/><text x="89.1828%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (36,245,154 samples, 0.79%)</title><rect x="88.6290%" y="517" width="0.7929%" height="15" fill="rgb(241,56,14)" fg:x="4051273691" fg:w="36245154"/><text x="88.8790%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (2,854,234 samples, 0.06%)</title><rect x="89.3595%" y="501" width="0.0624%" height="15" fill="rgb(205,80,24)" fg:x="4084664611" fg:w="2854234"/><text x="89.6095%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="517" width="0.0471%" height="15" fill="rgb(220,57,4)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="501" width="0.0471%" height="15" fill="rgb(226,193,50)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="485" width="0.0471%" height="15" fill="rgb(231,168,22)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="469" width="0.0471%" height="15" fill="rgb(254,215,14)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="453" width="0.0471%" height="15" fill="rgb(211,115,16)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="437" width="0.0471%" height="15" fill="rgb(236,210,16)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="421" width="0.0471%" height="15" fill="rgb(221,94,12)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="405" width="0.0471%" height="15" fill="rgb(235,218,49)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="389" width="0.0471%" height="15" fill="rgb(217,114,14)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="373" width="0.0471%" height="15" fill="rgb(216,145,22)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="357" width="0.0471%" height="15" fill="rgb(217,112,39)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="341" width="0.0471%" height="15" fill="rgb(225,85,32)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="351.50"></text></g><g><title>malloc (2,151,248 samples, 0.05%)</title><rect x="89.4220%" y="325" width="0.0471%" height="15" fill="rgb(245,209,47)" fg:x="4087518845" fg:w="2151248"/><text x="89.6720%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (8,598,107 samples, 0.19%)</title><rect x="89.4690%" y="517" width="0.1881%" height="15" fill="rgb(218,220,15)" fg:x="4089670093" fg:w="8598107"/><text x="89.7190%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2,866,470 samples, 0.06%)</title><rect x="89.6571%" y="517" width="0.0627%" height="15" fill="rgb(222,202,31)" fg:x="4098268200" fg:w="2866470"/><text x="89.9071%" y="527.50"></text></g><g><title>__rust_dealloc (2,863,557 samples, 0.06%)</title><rect x="90.0119%" y="437" width="0.0626%" height="15" fill="rgb(243,203,4)" fg:x="4114483799" fg:w="2863557"/><text x="90.2619%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;XLang_Rust::vm::ir::IR&gt; (32,097,056 samples, 0.70%)</title><rect x="89.7198%" y="517" width="0.7022%" height="15" fill="rgb(237,92,17)" fg:x="4101134670" fg:w="32097056"/><text x="89.9698%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18,747,927 samples, 0.41%)</title><rect x="90.0119%" y="501" width="0.4101%" height="15" fill="rgb(231,119,7)" fg:x="4114483799" fg:w="18747927"/><text x="90.2619%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (18,747,927 samples, 0.41%)</title><rect x="90.0119%" y="485" width="0.4101%" height="15" fill="rgb(237,82,41)" fg:x="4114483799" fg:w="18747927"/><text x="90.2619%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18,747,927 samples, 0.41%)</title><rect x="90.0119%" y="469" width="0.4101%" height="15" fill="rgb(226,81,48)" fg:x="4114483799" fg:w="18747927"/><text x="90.2619%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (18,747,927 samples, 0.41%)</title><rect x="90.0119%" y="453" width="0.4101%" height="15" fill="rgb(234,70,51)" fg:x="4114483799" fg:w="18747927"/><text x="90.2619%" y="463.50"></text></g><g><title>cfree (15,884,370 samples, 0.35%)</title><rect x="90.0745%" y="437" width="0.3475%" height="15" fill="rgb(251,86,4)" fg:x="4117347356" fg:w="15884370"/><text x="90.3245%" y="447.50"></text></g><g><title>__rdl_dealloc (1,818,952 samples, 0.04%)</title><rect x="90.4220%" y="421" width="0.0398%" height="15" fill="rgb(244,144,28)" fg:x="4133231726" fg:w="1818952"/><text x="90.6720%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (10,455,764 samples, 0.23%)</title><rect x="90.4220%" y="517" width="0.2287%" height="15" fill="rgb(232,161,39)" fg:x="4133231726" fg:w="10455764"/><text x="90.6720%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;XLang_Rust::vm::gc::gc::GCRef&gt;&gt; (10,455,764 samples, 0.23%)</title><rect x="90.4220%" y="501" width="0.2287%" height="15" fill="rgb(247,34,51)" fg:x="4133231726" fg:w="10455764"/><text x="90.6720%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10,455,764 samples, 0.23%)</title><rect x="90.4220%" y="485" width="0.2287%" height="15" fill="rgb(225,132,2)" fg:x="4133231726" fg:w="10455764"/><text x="90.6720%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (10,455,764 samples, 0.23%)</title><rect x="90.4220%" y="469" width="0.2287%" height="15" fill="rgb(209,159,44)" fg:x="4133231726" fg:w="10455764"/><text x="90.6720%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10,455,764 samples, 0.23%)</title><rect x="90.4220%" y="453" width="0.2287%" height="15" fill="rgb(251,214,1)" fg:x="4133231726" fg:w="10455764"/><text x="90.6720%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (10,455,764 samples, 0.23%)</title><rect x="90.4220%" y="437" width="0.2287%" height="15" fill="rgb(247,84,47)" fg:x="4133231726" fg:w="10455764"/><text x="90.6720%" y="447.50"></text></g><g><title>cfree (8,636,812 samples, 0.19%)</title><rect x="90.4618%" y="421" width="0.1889%" height="15" fill="rgb(240,111,43)" fg:x="4135050678" fg:w="8636812"/><text x="90.7118%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2,337,665 samples, 0.05%)</title><rect x="90.6508%" y="517" width="0.0511%" height="15" fill="rgb(215,214,35)" fg:x="4143687490" fg:w="2337665"/><text x="90.9008%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,789,509 samples, 0.06%)</title><rect x="90.8160%" y="341" width="0.0610%" height="15" fill="rgb(248,207,23)" fg:x="4151239537" fg:w="2789509"/><text x="91.0660%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (7,790,728 samples, 0.17%)</title><rect x="90.7529%" y="469" width="0.1704%" height="15" fill="rgb(214,186,4)" fg:x="4148357306" fg:w="7790728"/><text x="91.0029%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,790,728 samples, 0.17%)</title><rect x="90.7529%" y="453" width="0.1704%" height="15" fill="rgb(220,133,22)" fg:x="4148357306" fg:w="7790728"/><text x="91.0029%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,908,497 samples, 0.11%)</title><rect x="90.8160%" y="437" width="0.1074%" height="15" fill="rgb(239,134,19)" fg:x="4151239537" fg:w="4908497"/><text x="91.0660%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4,908,497 samples, 0.11%)</title><rect x="90.8160%" y="421" width="0.1074%" height="15" fill="rgb(250,140,9)" fg:x="4151239537" fg:w="4908497"/><text x="91.0660%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4,908,497 samples, 0.11%)</title><rect x="90.8160%" y="405" width="0.1074%" height="15" fill="rgb(225,59,14)" fg:x="4151239537" fg:w="4908497"/><text x="91.0660%" y="415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (4,908,497 samples, 0.11%)</title><rect x="90.8160%" y="389" width="0.1074%" height="15" fill="rgb(214,152,51)" fg:x="4151239537" fg:w="4908497"/><text x="91.0660%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4,908,497 samples, 0.11%)</title><rect x="90.8160%" y="373" width="0.1074%" height="15" fill="rgb(251,227,43)" fg:x="4151239537" fg:w="4908497"/><text x="91.0660%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4,908,497 samples, 0.11%)</title><rect x="90.8160%" y="357" width="0.1074%" height="15" fill="rgb(241,96,17)" fg:x="4151239537" fg:w="4908497"/><text x="91.0660%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (2,118,988 samples, 0.05%)</title><rect x="90.8770%" y="341" width="0.0464%" height="15" fill="rgb(234,198,43)" fg:x="4154029046" fg:w="2118988"/><text x="91.1270%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,118,988 samples, 0.05%)</title><rect x="90.8770%" y="325" width="0.0464%" height="15" fill="rgb(220,108,29)" fg:x="4154029046" fg:w="2118988"/><text x="91.1270%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (2,118,988 samples, 0.05%)</title><rect x="90.8770%" y="309" width="0.0464%" height="15" fill="rgb(226,163,33)" fg:x="4154029046" fg:w="2118988"/><text x="91.1270%" y="319.50"></text></g><g><title>hashbrown::control::group::neon::Group::match_tag (10,463,994 samples, 0.23%)</title><rect x="90.9234%" y="421" width="0.2289%" height="15" fill="rgb(205,194,45)" fg:x="4156148034" fg:w="10463994"/><text x="91.1734%" y="431.50"></text></g><g><title>core::core_arch::arm_shared::neon::generated::vceq_u8 (10,463,994 samples, 0.23%)</title><rect x="90.9234%" y="405" width="0.2289%" height="15" fill="rgb(206,143,44)" fg:x="4156148034" fg:w="10463994"/><text x="91.1734%" y="415.50"></text></g><g><title>XLang_Rust::vm::executor::vm::IRExecutor::execute_instruction (3,629,592,501 samples, 79.40%)</title><rect x="11.8096%" y="533" width="79.4040%" height="15" fill="rgb(236,136,36)" fg:x="539823453" fg:w="3629592501"/><text x="12.0596%" y="543.50">XLang_Rust::vm::executor::vm::IRExecutor::execute_instruction</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (23,390,799 samples, 0.51%)</title><rect x="90.7019%" y="517" width="0.5117%" height="15" fill="rgb(249,172,42)" fg:x="4146025155" fg:w="23390799"/><text x="90.9519%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (23,390,799 samples, 0.51%)</title><rect x="90.7019%" y="501" width="0.5117%" height="15" fill="rgb(216,139,23)" fg:x="4146025155" fg:w="23390799"/><text x="90.9519%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (23,390,799 samples, 0.51%)</title><rect x="90.7019%" y="485" width="0.5117%" height="15" fill="rgb(207,166,20)" fg:x="4146025155" fg:w="23390799"/><text x="90.9519%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13,267,920 samples, 0.29%)</title><rect x="90.9234%" y="469" width="0.2903%" height="15" fill="rgb(210,209,22)" fg:x="4156148034" fg:w="13267920"/><text x="91.1734%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13,267,920 samples, 0.29%)</title><rect x="90.9234%" y="453" width="0.2903%" height="15" fill="rgb(232,118,20)" fg:x="4156148034" fg:w="13267920"/><text x="91.1734%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (13,267,920 samples, 0.29%)</title><rect x="90.9234%" y="437" width="0.2903%" height="15" fill="rgb(238,113,42)" fg:x="4156148034" fg:w="13267920"/><text x="91.1734%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="421" width="0.0613%" height="15" fill="rgb(231,42,5)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="431.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="405" width="0.0613%" height="15" fill="rgb(243,166,24)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="415.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="389" width="0.0613%" height="15" fill="rgb(237,226,12)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="373" width="0.0613%" height="15" fill="rgb(229,133,24)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="357" width="0.0613%" height="15" fill="rgb(238,33,43)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="367.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="341" width="0.0613%" height="15" fill="rgb(227,59,38)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="325" width="0.0613%" height="15" fill="rgb(230,97,0)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2,803,926 samples, 0.06%)</title><rect x="91.1523%" y="309" width="0.0613%" height="15" fill="rgb(250,173,50)" fg:x="4166612028" fg:w="2803926"/><text x="91.4023%" y="319.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMInstructions as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (7,162,504 samples, 0.16%)</title><rect x="93.6114%" y="485" width="0.1567%" height="15" fill="rgb(240,15,50)" fg:x="4279018403" fg:w="7162504"/><text x="93.8614%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (68,516,365 samples, 1.50%)</title><rect x="92.3303%" y="501" width="1.4989%" height="15" fill="rgb(221,93,22)" fg:x="4220457574" fg:w="68516365"/><text x="92.5803%" y="511.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMLambda as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (2,793,032 samples, 0.06%)</title><rect x="93.7681%" y="485" width="0.0611%" height="15" fill="rgb(245,180,53)" fg:x="4286180907" fg:w="2793032"/><text x="94.0181%" y="495.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_const_type (122,395,618 samples, 2.68%)</title><rect x="91.2136%" y="533" width="2.6776%" height="15" fill="rgb(231,88,51)" fg:x="4169415954" fg:w="122395618"/><text x="91.4636%" y="543.50">XL..</text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (71,353,998 samples, 1.56%)</title><rect x="92.3303%" y="517" width="1.5610%" height="15" fill="rgb(240,58,21)" fg:x="4220457574" fg:w="71353998"/><text x="92.5803%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCTraceable::isinstance (2,837,633 samples, 0.06%)</title><rect x="93.8292%" y="501" width="0.0621%" height="15" fill="rgb(237,21,10)" fg:x="4288973939" fg:w="2837633"/><text x="94.0792%" y="511.50"></text></g><g><title>&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (2,837,633 samples, 0.06%)</title><rect x="93.8292%" y="485" width="0.0621%" height="15" fill="rgb(218,43,11)" fg:x="4288973939" fg:w="2837633"/><text x="94.0792%" y="495.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (2,837,633 samples, 0.06%)</title><rect x="93.8292%" y="469" width="0.0621%" height="15" fill="rgb(218,221,29)" fg:x="4288973939" fg:w="2837633"/><text x="94.0792%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (2,837,633 samples, 0.06%)</title><rect x="93.8292%" y="453" width="0.0621%" height="15" fill="rgb(214,118,42)" fg:x="4288973939" fg:w="2837633"/><text x="94.0792%" y="463.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_type (33,763,383 samples, 0.74%)</title><rect x="93.8913%" y="533" width="0.7386%" height="15" fill="rgb(251,200,26)" fg:x="4291811572" fg:w="33763383"/><text x="94.1413%" y="543.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (26,086,458 samples, 0.57%)</title><rect x="94.0592%" y="517" width="0.5707%" height="15" fill="rgb(237,101,39)" fg:x="4299488497" fg:w="26086458"/><text x="94.3092%" y="527.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (26,086,458 samples, 0.57%)</title><rect x="94.0592%" y="501" width="0.5707%" height="15" fill="rgb(251,117,11)" fg:x="4299488497" fg:w="26086458"/><text x="94.3092%" y="511.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMVariableWrapper as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (4,685,549 samples, 0.10%)</title><rect x="94.5274%" y="485" width="0.1025%" height="15" fill="rgb(216,223,23)" fg:x="4320889406" fg:w="4685549"/><text x="94.7774%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (15,794,389 samples, 0.35%)</title><rect x="94.6299%" y="533" width="0.3455%" height="15" fill="rgb(251,54,12)" fg:x="4325574955" fg:w="15794389"/><text x="94.8799%" y="543.50"></text></g><g><title>XLang_Rust::vm::executor::vm::IRExecutor::step (4,143,415,551 samples, 90.64%)</title><rect x="4.4339%" y="549" width="90.6448%" height="15" fill="rgb(254,176,54)" fg:x="202675521" fg:w="4143415551"/><text x="4.6839%" y="559.50">XLang_Rust::vm::executor::vm::IRExecutor::step</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (4,721,728 samples, 0.10%)</title><rect x="94.9754%" y="533" width="0.1033%" height="15" fill="rgb(210,32,8)" fg:x="4341369344" fg:w="4721728"/><text x="95.2254%" y="543.50"></text></g><g><title>XLang_Rust::vm::executor::vm::VMCoroutinePool::step_all (4,224,112,130 samples, 92.41%)</title><rect x="2.7295%" y="565" width="92.4102%" height="15" fill="rgb(235,52,38)" fg:x="124768742" fg:w="4224112130"/><text x="2.9795%" y="575.50">XLang_Rust::vm::executor::vm::VMCoroutinePool::step_all</text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2,789,800 samples, 0.06%)</title><rect x="95.0787%" y="549" width="0.0610%" height="15" fill="rgb(231,4,44)" fg:x="4346091072" fg:w="2789800"/><text x="95.3287%" y="559.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMCoroutineStatus as core::cmp::PartialEq&gt;::eq (5,450,525 samples, 0.12%)</title><rect x="95.4343%" y="549" width="0.1192%" height="15" fill="rgb(249,2,32)" fg:x="4362346376" fg:w="5450525"/><text x="95.6843%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,672,052 samples, 0.12%)</title><rect x="95.5536%" y="549" width="0.1241%" height="15" fill="rgb(224,65,26)" fg:x="4367796901" fg:w="5672052"/><text x="95.8036%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,672,052 samples, 0.12%)</title><rect x="95.5536%" y="533" width="0.1241%" height="15" fill="rgb(250,73,40)" fg:x="4367796901" fg:w="5672052"/><text x="95.8036%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5,672,052 samples, 0.12%)</title><rect x="95.5536%" y="517" width="0.1241%" height="15" fill="rgb(253,177,16)" fg:x="4367796901" fg:w="5672052"/><text x="95.8036%" y="527.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMLambda as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (2,838,883 samples, 0.06%)</title><rect x="97.8979%" y="501" width="0.0621%" height="15" fill="rgb(217,32,34)" fg:x="4474955610" fg:w="2838883"/><text x="98.1479%" y="511.50"></text></g><g><title>XLang_Rust::vm::executor::vm::VMCoroutinePool::sweep_finished (139,515,719 samples, 3.05%)</title><rect x="95.1398%" y="565" width="3.0522%" height="15" fill="rgb(212,7,10)" fg:x="4348880872" fg:w="139515719"/><text x="95.3898%" y="575.50">XLa..</text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::as_const_type (114,927,638 samples, 2.51%)</title><rect x="95.6777%" y="549" width="2.5143%" height="15" fill="rgb(245,89,8)" fg:x="4373468953" fg:w="114927638"/><text x="95.9277%" y="559.50">XL..</text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::isinstance (68,836,186 samples, 1.51%)</title><rect x="96.6860%" y="533" width="1.5059%" height="15" fill="rgb(237,16,53)" fg:x="4419560405" fg:w="68836186"/><text x="96.9360%" y="543.50"></text></g><g><title>XLang_Rust::vm::gc::gc::GCRef::get_const_traceable (68,836,186 samples, 1.51%)</title><rect x="96.6860%" y="517" width="1.5059%" height="15" fill="rgb(250,204,30)" fg:x="4419560405" fg:w="68836186"/><text x="96.9360%" y="527.50"></text></g><g><title>&lt;XLang_Rust::vm::executor::variable::VMVariableWrapper as XLang_Rust::vm::gc::gc::GCObject&gt;::get_const_traceable (10,602,098 samples, 0.23%)</title><rect x="97.9600%" y="501" width="0.2319%" height="15" fill="rgb(208,77,27)" fg:x="4477794493" fg:w="10602098"/><text x="98.2100%" y="511.50"></text></g><g><title>_start (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="757" width="96.6968%" height="15" fill="rgb(250,204,28)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="767.50">_start</text></g><g><title>__libc_start_main (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="741" width="96.6968%" height="15" fill="rgb(244,63,21)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="751.50">__libc_start_main</text></g><g><title>[libc.so.6] (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="725" width="96.6968%" height="15" fill="rgb(236,85,44)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="735.50">[libc.so.6]</text></g><g><title>main (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="709" width="96.6968%" height="15" fill="rgb(215,98,4)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="719.50">main</text></g><g><title>std::rt::lang_start_internal (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="693" width="96.6968%" height="15" fill="rgb(235,38,11)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="703.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="677" width="96.6968%" height="15" fill="rgb(254,186,25)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="687.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="661" width="96.6968%" height="15" fill="rgb(225,55,31)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="671.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="645" width="96.6968%" height="15" fill="rgb(211,15,21)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="655.50">core::ops::function::FnOnce::call_once</text></g><g><title>XLang_Rust::main (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="629" width="96.6968%" height="15" fill="rgb(215,187,41)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="639.50">XLang_Rust::main</text></g><g><title>XLang_Rust::run_file (4,420,053,703 samples, 96.70%)</title><rect x="1.5566%" y="613" width="96.6968%" height="15" fill="rgb(248,69,32)" fg:x="71152091" fg:w="4420053703"/><text x="1.8066%" y="623.50">XLang_Rust::run_file</text></g><g><title>XLang_Rust::execute_ir (4,377,275,473 samples, 95.76%)</title><rect x="2.4924%" y="597" width="95.7609%" height="15" fill="rgb(252,102,52)" fg:x="113930321" fg:w="4377275473"/><text x="2.7424%" y="607.50">XLang_Rust::execute_ir</text></g><g><title>XLang_Rust::vm::executor::vm::VMCoroutinePool::run_until_finished (4,374,932,079 samples, 95.71%)</title><rect x="2.5437%" y="581" width="95.7097%" height="15" fill="rgb(253,140,32)" fg:x="116273715" fg:w="4374932079"/><text x="2.7937%" y="591.50">XLang_Rust::vm::executor::vm::VMCoroutinePool::run_until_finished</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;XLang_Rust::vm::executor::vm::SpawnedCoroutine&gt;&gt; (2,809,203 samples, 0.06%)</title><rect x="98.1919%" y="565" width="0.0615%" height="15" fill="rgb(216,56,42)" fg:x="4488396591" fg:w="2809203"/><text x="98.4419%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5,104,321 samples, 0.11%)</title><rect x="98.3782%" y="693" width="0.1117%" height="15" fill="rgb(216,184,14)" fg:x="4496912040" fg:w="5104321"/><text x="98.6282%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2,793,730 samples, 0.06%)</title><rect x="98.4288%" y="677" width="0.0611%" height="15" fill="rgb(237,187,27)" fg:x="4499222631" fg:w="2793730"/><text x="98.6788%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,882,201 samples, 0.06%)</title><rect x="98.5979%" y="677" width="0.0631%" height="15" fill="rgb(219,65,3)" fg:x="4506952469" fg:w="2882201"/><text x="98.8479%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29,932,265 samples, 0.65%)</title><rect x="98.2534%" y="757" width="0.6548%" height="15" fill="rgb(245,83,25)" fg:x="4491205794" fg:w="29932265"/><text x="98.5034%" y="767.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (29,932,265 samples, 0.65%)</title><rect x="98.2534%" y="741" width="0.6548%" height="15" fill="rgb(214,205,45)" fg:x="4491205794" fg:w="29932265"/><text x="98.5034%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (29,932,265 samples, 0.65%)</title><rect x="98.2534%" y="725" width="0.6548%" height="15" fill="rgb(241,20,18)" fg:x="4491205794" fg:w="29932265"/><text x="98.5034%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (29,932,265 samples, 0.65%)</title><rect x="98.2534%" y="709" width="0.6548%" height="15" fill="rgb(232,163,23)" fg:x="4491205794" fg:w="29932265"/><text x="98.5034%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (19,121,698 samples, 0.42%)</title><rect x="98.4899%" y="693" width="0.4183%" height="15" fill="rgb(214,5,46)" fg:x="4502016361" fg:w="19121698"/><text x="98.7399%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11,303,389 samples, 0.25%)</title><rect x="98.6609%" y="677" width="0.2473%" height="15" fill="rgb(229,78,17)" fg:x="4509834670" fg:w="11303389"/><text x="98.9109%" y="687.50"></text></g><g><title>free@plt (1,996,916 samples, 0.04%)</title><rect x="98.9082%" y="757" width="0.0437%" height="15" fill="rgb(248,89,10)" fg:x="4521138059" fg:w="1996916"/><text x="99.1582%" y="767.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="757" width="0.0522%" height="15" fill="rgb(248,54,15)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="767.50"></text></g><g><title>regex::builders::Builder::build_one_string (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="741" width="0.0522%" height="15" fill="rgb(223,116,6)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="751.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="725" width="0.0522%" height="15" fill="rgb(205,125,38)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="735.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="709" width="0.0522%" height="15" fill="rgb(251,78,38)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="719.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="693" width="0.0522%" height="15" fill="rgb(253,78,28)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="703.50"></text></g><g><title>regex_automata::meta::strategy::new (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="677" width="0.0522%" height="15" fill="rgb(209,120,3)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="687.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="661" width="0.0522%" height="15" fill="rgb(238,229,9)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="645" width="0.0522%" height="15" fill="rgb(253,159,18)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="629" width="0.0522%" height="15" fill="rgb(244,42,34)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="613" width="0.0522%" height="15" fill="rgb(224,8,7)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="597" width="0.0522%" height="15" fill="rgb(210,201,45)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="581" width="0.0522%" height="15" fill="rgb(252,185,21)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="565" width="0.0522%" height="15" fill="rgb(223,131,1)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="549" width="0.0522%" height="15" fill="rgb(245,141,16)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="533" width="0.0522%" height="15" fill="rgb(229,55,45)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="517" width="0.0522%" height="15" fill="rgb(208,92,15)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="501" width="0.0522%" height="15" fill="rgb(234,185,47)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="485" width="0.0522%" height="15" fill="rgb(253,104,50)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="469" width="0.0522%" height="15" fill="rgb(205,70,7)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="453" width="0.0522%" height="15" fill="rgb(240,178,43)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="437" width="0.0522%" height="15" fill="rgb(214,112,2)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="421" width="0.0522%" height="15" fill="rgb(206,46,17)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="405" width="0.0522%" height="15" fill="rgb(225,220,16)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="389" width="0.0522%" height="15" fill="rgb(238,65,40)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="373" width="0.0522%" height="15" fill="rgb(230,151,21)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="357" width="0.0522%" height="15" fill="rgb(218,58,49)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="341" width="0.0522%" height="15" fill="rgb(219,179,14)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::get (2,386,802 samples, 0.05%)</title><rect x="98.9519%" y="325" width="0.0522%" height="15" fill="rgb(223,72,1)" fg:x="4523134975" fg:w="2386802"/><text x="99.2019%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1,954,432 samples, 0.04%)</title><rect x="99.0041%" y="309" width="0.0428%" height="15" fill="rgb(238,126,10)" fg:x="4525521777" fg:w="1954432"/><text x="99.2541%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1,954,432 samples, 0.04%)</title><rect x="99.0041%" y="293" width="0.0428%" height="15" fill="rgb(224,206,38)" fg:x="4525521777" fg:w="1954432"/><text x="99.2541%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_slice (1,954,432 samples, 0.04%)</title><rect x="99.0041%" y="277" width="0.0428%" height="15" fill="rgb(212,201,54)" fg:x="4525521777" fg:w="1954432"/><text x="99.2541%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1,954,432 samples, 0.04%)</title><rect x="99.0041%" y="261" width="0.0428%" height="15" fill="rgb(218,154,48)" fg:x="4525521777" fg:w="1954432"/><text x="99.2541%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1,954,432 samples, 0.04%)</title><rect x="99.0041%" y="245" width="0.0428%" height="15" fill="rgb(232,93,24)" fg:x="4525521777" fg:w="1954432"/><text x="99.2541%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (1,954,432 samples, 0.04%)</title><rect x="99.0041%" y="229" width="0.0428%" height="15" fill="rgb(245,30,21)" fg:x="4525521777" fg:w="1954432"/><text x="99.2541%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (1,954,432 samples, 0.04%)</title><rect x="99.0041%" y="213" width="0.0428%" height="15" fill="rgb(242,148,29)" fg:x="4525521777" fg:w="1954432"/><text x="99.2541%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (4,214,832 samples, 0.09%)</title><rect x="99.0041%" y="357" width="0.0922%" height="15" fill="rgb(244,153,54)" fg:x="4525521777" fg:w="4214832"/><text x="99.2541%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (4,214,832 samples, 0.09%)</title><rect x="99.0041%" y="341" width="0.0922%" height="15" fill="rgb(252,87,22)" fg:x="4525521777" fg:w="4214832"/><text x="99.2541%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::top_last_freeze (4,214,832 samples, 0.09%)</title><rect x="99.0041%" y="325" width="0.0922%" height="15" fill="rgb(210,51,29)" fg:x="4525521777" fg:w="4214832"/><text x="99.2541%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Node::set_last_transition (2,260,400 samples, 0.05%)</title><rect x="99.0469%" y="309" width="0.0495%" height="15" fill="rgb(242,136,47)" fg:x="4527476209" fg:w="2260400"/><text x="99.2969%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,260,400 samples, 0.05%)</title><rect x="99.0469%" y="293" width="0.0495%" height="15" fill="rgb(238,68,4)" fg:x="4527476209" fg:w="2260400"/><text x="99.2969%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2,260,400 samples, 0.05%)</title><rect x="99.0469%" y="277" width="0.0495%" height="15" fill="rgb(242,161,30)" fg:x="4527476209" fg:w="2260400"/><text x="99.2969%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (2,260,400 samples, 0.05%)</title><rect x="99.0469%" y="261" width="0.0495%" height="15" fill="rgb(218,58,44)" fg:x="4527476209" fg:w="2260400"/><text x="99.2969%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (2,260,400 samples, 0.05%)</title><rect x="99.0469%" y="245" width="0.0495%" height="15" fill="rgb(252,125,32)" fg:x="4527476209" fg:w="2260400"/><text x="99.2969%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,260,400 samples, 0.05%)</title><rect x="99.0469%" y="229" width="0.0495%" height="15" fill="rgb(219,178,0)" fg:x="4527476209" fg:w="2260400"/><text x="99.2969%" y="239.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2,395,997 samples, 0.05%)</title><rect x="99.0963%" y="261" width="0.0524%" height="15" fill="rgb(213,152,7)" fg:x="4529736609" fg:w="2395997"/><text x="99.3463%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2,395,997 samples, 0.05%)</title><rect x="99.0963%" y="245" width="0.0524%" height="15" fill="rgb(249,109,34)" fg:x="4529736609" fg:w="2395997"/><text x="99.3463%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2,395,997 samples, 0.05%)</title><rect x="99.0963%" y="229" width="0.0524%" height="15" fill="rgb(232,96,21)" fg:x="4529736609" fg:w="2395997"/><text x="99.3463%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2,313,896 samples, 0.05%)</title><rect x="99.1487%" y="261" width="0.0506%" height="15" fill="rgb(228,27,39)" fg:x="4532132606" fg:w="2313896"/><text x="99.3987%" y="271.50"></text></g><g><title>regex::regex::string::Regex::new (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="757" width="0.3962%" height="15" fill="rgb(211,182,52)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="767.50"></text></g><g><title>regex::builders::string::RegexBuilder::build (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="741" width="0.3962%" height="15" fill="rgb(234,178,38)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="751.50"></text></g><g><title>regex::builders::Builder::build_one_string (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="725" width="0.3962%" height="15" fill="rgb(221,111,3)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="735.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="709" width="0.3962%" height="15" fill="rgb(228,175,21)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="719.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="693" width="0.3962%" height="15" fill="rgb(228,174,43)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="703.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="677" width="0.3962%" height="15" fill="rgb(211,191,0)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="687.50"></text></g><g><title>regex_automata::meta::strategy::new (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="661" width="0.3962%" height="15" fill="rgb(253,117,3)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="671.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="645" width="0.3962%" height="15" fill="rgb(241,127,19)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="655.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="629" width="0.3962%" height="15" fill="rgb(218,103,12)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="639.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="613" width="0.3962%" height="15" fill="rgb(236,214,43)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="623.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="597" width="0.3962%" height="15" fill="rgb(244,144,19)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="581" width="0.3962%" height="15" fill="rgb(246,188,10)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="565" width="0.3962%" height="15" fill="rgb(212,193,33)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="549" width="0.3962%" height="15" fill="rgb(241,51,29)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="533" width="0.3962%" height="15" fill="rgb(211,58,19)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="543.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="517" width="0.3962%" height="15" fill="rgb(229,111,26)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="527.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="501" width="0.3962%" height="15" fill="rgb(213,115,40)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="485" width="0.3962%" height="15" fill="rgb(209,56,44)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="469" width="0.3962%" height="15" fill="rgb(230,108,32)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="453" width="0.3962%" height="15" fill="rgb(216,165,31)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="437" width="0.3962%" height="15" fill="rgb(218,122,21)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="421" width="0.3962%" height="15" fill="rgb(223,224,47)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="405" width="0.3962%" height="15" fill="rgb(238,102,44)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="389" width="0.3962%" height="15" fill="rgb(236,46,40)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (18,112,737 samples, 0.40%)</title><rect x="99.0041%" y="373" width="0.3962%" height="15" fill="rgb(247,202,50)" fg:x="4525521777" fg:w="18112737"/><text x="99.2541%" y="383.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::new (13,897,905 samples, 0.30%)</title><rect x="99.0963%" y="357" width="0.3040%" height="15" fill="rgb(209,99,20)" fg:x="4529736609" fg:w="13897905"/><text x="99.3463%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8State::clear (13,897,905 samples, 0.30%)</title><rect x="99.0963%" y="341" width="0.3040%" height="15" fill="rgb(252,27,34)" fg:x="4529736609" fg:w="13897905"/><text x="99.3463%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8BoundedMap::clear (13,897,905 samples, 0.30%)</title><rect x="99.0963%" y="325" width="0.3040%" height="15" fill="rgb(215,206,23)" fg:x="4529736609" fg:w="13897905"/><text x="99.3463%" y="335.50"></text></g><g><title>alloc::vec::from_elem (13,897,905 samples, 0.30%)</title><rect x="99.0963%" y="309" width="0.3040%" height="15" fill="rgb(212,135,36)" fg:x="4529736609" fg:w="13897905"/><text x="99.3463%" y="319.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (13,897,905 samples, 0.30%)</title><rect x="99.0963%" y="293" width="0.3040%" height="15" fill="rgb(240,189,1)" fg:x="4529736609" fg:w="13897905"/><text x="99.3463%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (13,897,905 samples, 0.30%)</title><rect x="99.0963%" y="277" width="0.3040%" height="15" fill="rgb(242,56,20)" fg:x="4529736609" fg:w="13897905"/><text x="99.3463%" y="287.50"></text></g><g><title>core::ptr::write (9,188,012 samples, 0.20%)</title><rect x="99.1993%" y="261" width="0.2010%" height="15" fill="rgb(247,132,33)" fg:x="4534446502" fg:w="9188012"/><text x="99.4493%" y="271.50"></text></g><g><title>__rdl_dealloc (1,644,712 samples, 0.04%)</title><rect x="99.4003%" y="149" width="0.0360%" height="15" fill="rgb(208,149,11)" fg:x="4543634514" fg:w="1644712"/><text x="99.6503%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex_syntax::utf8::Utf8Sequences&gt; (3,281,117 samples, 0.07%)</title><rect x="99.4003%" y="261" width="0.0718%" height="15" fill="rgb(211,33,11)" fg:x="4543634514" fg:w="3281117"/><text x="99.6503%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex_syntax::utf8::ScalarRange&gt;&gt; (3,281,117 samples, 0.07%)</title><rect x="99.4003%" y="245" width="0.0718%" height="15" fill="rgb(221,29,38)" fg:x="4543634514" fg:w="3281117"/><text x="99.6503%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;regex_syntax::utf8::ScalarRange&gt;&gt; (3,281,117 samples, 0.07%)</title><rect x="99.4003%" y="229" width="0.0718%" height="15" fill="rgb(206,182,49)" fg:x="4543634514" fg:w="3281117"/><text x="99.6503%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,281,117 samples, 0.07%)</title><rect x="99.4003%" y="213" width="0.0718%" height="15" fill="rgb(216,140,1)" fg:x="4543634514" fg:w="3281117"/><text x="99.6503%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (3,281,117 samples, 0.07%)</title><rect x="99.4003%" y="197" width="0.0718%" height="15" fill="rgb(232,57,40)" fg:x="4543634514" fg:w="3281117"/><text x="99.6503%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,281,117 samples, 0.07%)</title><rect x="99.4003%" y="181" width="0.0718%" height="15" fill="rgb(224,186,18)" fg:x="4543634514" fg:w="3281117"/><text x="99.6503%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (3,281,117 samples, 0.07%)</title><rect x="99.4003%" y="165" width="0.0718%" height="15" fill="rgb(215,121,11)" fg:x="4543634514" fg:w="3281117"/><text x="99.6503%" y="175.50"></text></g><g><title>cfree (1,636,405 samples, 0.04%)</title><rect x="99.4363%" y="149" width="0.0358%" height="15" fill="rgb(245,147,10)" fg:x="4545279226" fg:w="1636405"/><text x="99.6863%" y="159.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::clear (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="261" width="0.0396%" height="15" fill="rgb(238,153,13)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="271.50"></text></g><g><title>alloc::vec::from_elem (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="245" width="0.0396%" height="15" fill="rgb(233,108,0)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="255.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="229" width="0.0396%" height="15" fill="rgb(212,157,17)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="213" width="0.0396%" height="15" fill="rgb(225,213,38)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="197" width="0.0396%" height="15" fill="rgb(248,16,11)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="181" width="0.0396%" height="15" fill="rgb(241,33,4)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="165" width="0.0396%" height="15" fill="rgb(222,26,43)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="149" width="0.0396%" height="15" fill="rgb(243,29,36)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="133" width="0.0396%" height="15" fill="rgb(241,9,27)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="117" width="0.0396%" height="15" fill="rgb(205,117,26)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="127.50"></text></g><g><title>malloc (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="101" width="0.0396%" height="15" fill="rgb(209,80,39)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="111.50"></text></g><g><title>[libc.so.6] (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="85" width="0.0396%" height="15" fill="rgb(239,155,6)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="95.50"></text></g><g><title>[libc.so.6] (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="69" width="0.0396%" height="15" fill="rgb(212,104,12)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="79.50"></text></g><g><title>[libc.so.6] (1,811,316 samples, 0.04%)</title><rect x="99.4721%" y="53" width="0.0396%" height="15" fill="rgb(234,204,3)" fg:x="4546915631" fg:w="1811316"/><text x="99.7221%" y="63.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="565" width="0.1472%" height="15" fill="rgb(251,218,7)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="549" width="0.1472%" height="15" fill="rgb(221,81,32)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="533" width="0.1472%" height="15" fill="rgb(214,152,26)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="517" width="0.1472%" height="15" fill="rgb(223,22,3)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="501" width="0.1472%" height="15" fill="rgb(207,174,7)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="511.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="485" width="0.1472%" height="15" fill="rgb(224,19,52)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="469" width="0.1472%" height="15" fill="rgb(228,24,14)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_repetition (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="453" width="0.1472%" height="15" fill="rgb(230,153,43)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_zero_or_one (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="437" width="0.1472%" height="15" fill="rgb(231,106,12)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="421" width="0.1472%" height="15" fill="rgb(215,92,2)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="405" width="0.1472%" height="15" fill="rgb(249,143,25)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="389" width="0.1472%" height="15" fill="rgb(252,7,35)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="373" width="0.1472%" height="15" fill="rgb(216,69,40)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="357" width="0.1472%" height="15" fill="rgb(240,36,33)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="367.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="341" width="0.1472%" height="15" fill="rgb(231,128,14)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="351.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="325" width="0.1472%" height="15" fill="rgb(245,143,14)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="309" width="0.1472%" height="15" fill="rgb(222,130,28)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="293" width="0.1472%" height="15" fill="rgb(212,10,48)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class_reverse_with_suffix (6,730,191 samples, 0.15%)</title><rect x="99.4003%" y="277" width="0.1472%" height="15" fill="rgb(254,118,45)" fg:x="4543634514" fg:w="6730191"/><text x="99.6503%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::map::Utf8SuffixMap::get (1,637,758 samples, 0.04%)</title><rect x="99.5118%" y="261" width="0.0358%" height="15" fill="rgb(228,6,45)" fg:x="4548726947" fg:w="1637758"/><text x="99.7618%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (2,763,565 samples, 0.06%)</title><rect x="99.5856%" y="229" width="0.0605%" height="15" fill="rgb(241,18,35)" fg:x="4552101861" fg:w="2763565"/><text x="99.8356%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,763,565 samples, 0.06%)</title><rect x="99.5856%" y="213" width="0.0605%" height="15" fill="rgb(227,214,53)" fg:x="4552101861" fg:w="2763565"/><text x="99.8356%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2,763,565 samples, 0.06%)</title><rect x="99.5856%" y="197" width="0.0605%" height="15" fill="rgb(224,107,51)" fg:x="4552101861" fg:w="2763565"/><text x="99.8356%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,763,565 samples, 0.06%)</title><rect x="99.5856%" y="181" width="0.0605%" height="15" fill="rgb(248,60,28)" fg:x="4552101861" fg:w="2763565"/><text x="99.8356%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::_{{closure}} (2,763,565 samples, 0.06%)</title><rect x="99.5856%" y="165" width="0.0605%" height="15" fill="rgb(249,101,23)" fg:x="4552101861" fg:w="2763565"/><text x="99.8356%" y="175.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add::_{{closure}} (1,078,202 samples, 0.02%)</title><rect x="99.6225%" y="149" width="0.0236%" height="15" fill="rgb(228,51,19)" fg:x="4553787224" fg:w="1078202"/><text x="99.8725%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,692,182 samples, 0.08%)</title><rect x="99.6460%" y="181" width="0.0808%" height="15" fill="rgb(213,20,6)" fg:x="4554865426" fg:w="3692182"/><text x="99.8960%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,692,182 samples, 0.08%)</title><rect x="99.6460%" y="165" width="0.0808%" height="15" fill="rgb(212,124,10)" fg:x="4554865426" fg:w="3692182"/><text x="99.8960%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_one (3,692,182 samples, 0.08%)</title><rect x="99.6460%" y="149" width="0.0808%" height="15" fill="rgb(248,3,40)" fg:x="4554865426" fg:w="3692182"/><text x="99.8960%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,692,182 samples, 0.08%)</title><rect x="99.6460%" y="133" width="0.0808%" height="15" fill="rgb(223,178,23)" fg:x="4554865426" fg:w="3692182"/><text x="99.8960%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,692,182 samples, 0.08%)</title><rect x="99.6460%" y="117" width="0.0808%" height="15" fill="rgb(240,132,45)" fg:x="4554865426" fg:w="3692182"/><text x="99.8960%" y="127.50"></text></g><g><title>malloc (1,721,284 samples, 0.04%)</title><rect x="99.6892%" y="101" width="0.0377%" height="15" fill="rgb(245,164,36)" fg:x="4556836324" fg:w="1721284"/><text x="99.9392%" y="111.50"></text></g><g><title>[libc.so.6] (1,721,284 samples, 0.04%)</title><rect x="99.6892%" y="85" width="0.0377%" height="15" fill="rgb(231,188,53)" fg:x="4556836324" fg:w="1721284"/><text x="99.9392%" y="95.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::pop_freeze (7,997,614 samples, 0.17%)</title><rect x="99.6460%" y="213" width="0.1750%" height="15" fill="rgb(237,198,39)" fg:x="4554865426" fg:w="7997614"/><text x="99.8960%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Node::set_last_transition (7,997,614 samples, 0.17%)</title><rect x="99.6460%" y="197" width="0.1750%" height="15" fill="rgb(223,120,35)" fg:x="4554865426" fg:w="7997614"/><text x="99.8960%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4,305,432 samples, 0.09%)</title><rect x="99.7268%" y="181" width="0.0942%" height="15" fill="rgb(253,107,49)" fg:x="4558557608" fg:w="4305432"/><text x="99.9768%" y="191.50"></text></g><g><title>core::mem::replace (4,305,432 samples, 0.09%)</title><rect x="99.7268%" y="165" width="0.0942%" height="15" fill="rgb(216,44,31)" fg:x="4558557608" fg:w="4305432"/><text x="99.9768%" y="175.50"></text></g><g><title>core::ptr::read (4,305,432 samples, 0.09%)</title><rect x="99.7268%" y="149" width="0.0942%" height="15" fill="rgb(253,87,21)" fg:x="4558557608" fg:w="4305432"/><text x="99.9768%" y="159.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::add (14,486,445 samples, 0.32%)</title><rect x="99.5476%" y="245" width="0.3169%" height="15" fill="rgb(226,18,2)" fg:x="4550364705" fg:w="14486445"/><text x="99.7976%" y="255.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::compile_from (9,985,724 samples, 0.22%)</title><rect x="99.6460%" y="229" width="0.2185%" height="15" fill="rgb(216,8,46)" fg:x="4554865426" fg:w="9985724"/><text x="99.8960%" y="239.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Compiler::top_last_freeze (1,988,110 samples, 0.04%)</title><rect x="99.8210%" y="213" width="0.0435%" height="15" fill="rgb(226,140,39)" fg:x="4562863040" fg:w="1988110"/><text x="100.0710%" y="223.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Utf8Node::set_last_transition (1,988,110 samples, 0.04%)</title><rect x="99.8210%" y="197" width="0.0435%" height="15" fill="rgb(221,194,54)" fg:x="4562863040" fg:w="1988110"/><text x="100.0710%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,988,110 samples, 0.04%)</title><rect x="99.8210%" y="181" width="0.0435%" height="15" fill="rgb(213,92,11)" fg:x="4562863040" fg:w="1988110"/><text x="100.0710%" y="191.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::is_ascii (1,989,849 samples, 0.04%)</title><rect x="99.8645%" y="245" width="0.0435%" height="15" fill="rgb(229,162,46)" fg:x="4564851150" fg:w="1989849"/><text x="100.1145%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1,989,849 samples, 0.04%)</title><rect x="99.8645%" y="229" width="0.0435%" height="15" fill="rgb(214,111,36)" fg:x="4564851150" fg:w="1989849"/><text x="100.1145%" y="239.50"></text></g><g><title>regex_syntax::hir::ClassUnicode::is_ascii::_{{closure}} (1,989,849 samples, 0.04%)</title><rect x="99.8645%" y="213" width="0.0435%" height="15" fill="rgb(207,6,21)" fg:x="4564851150" fg:w="1989849"/><text x="100.1145%" y="223.50"></text></g><g><title>regex_automata::meta::regex::Builder::build (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="757" width="0.5531%" height="15" fill="rgb(213,127,38)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="767.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="741" width="0.5531%" height="15" fill="rgb(238,118,32)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="751.50"></text></g><g><title>regex_automata::meta::regex::Builder::build_many_from_hir (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="725" width="0.5531%" height="15" fill="rgb(240,139,39)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="735.50"></text></g><g><title>regex_automata::meta::strategy::new (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="709" width="0.5531%" height="15" fill="rgb(235,10,37)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="719.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="693" width="0.5531%" height="15" fill="rgb(249,171,38)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="703.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::build_many_from_hir (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="677" width="0.5531%" height="15" fill="rgb(242,144,32)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="687.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="661" width="0.5531%" height="15" fill="rgb(217,117,21)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="671.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_alt_iter (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="645" width="0.5531%" height="15" fill="rgb(249,87,1)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="629" width="0.5531%" height="15" fill="rgb(248,196,48)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="613" width="0.5531%" height="15" fill="rgb(251,206,33)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="597" width="0.5531%" height="15" fill="rgb(232,141,28)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="607.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::compile::_{{closure}} (25,283,147 samples, 0.55%)</title><rect x="99.4003%" y="581" width="0.5531%" height="15" fill="rgb(209,167,14)" fg:x="4543634514" fg:w="25283147"/><text x="99.6503%" y="591.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="565" width="0.4059%" height="15" fill="rgb(225,11,50)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="575.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="549" width="0.4059%" height="15" fill="rgb(209,50,20)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="559.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="533" width="0.4059%" height="15" fill="rgb(212,17,46)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="517" width="0.4059%" height="15" fill="rgb(216,101,39)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="501" width="0.4059%" height="15" fill="rgb(212,228,48)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="485" width="0.4059%" height="15" fill="rgb(250,6,50)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="495.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="469" width="0.4059%" height="15" fill="rgb(250,160,48)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="479.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="453" width="0.4059%" height="15" fill="rgb(244,216,33)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="463.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_repetition (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="437" width="0.4059%" height="15" fill="rgb(207,157,5)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="447.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_zero_or_one (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="421" width="0.4059%" height="15" fill="rgb(228,199,8)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="431.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_cap (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="405" width="0.4059%" height="15" fill="rgb(227,80,20)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="415.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="389" width="0.4059%" height="15" fill="rgb(222,9,33)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="399.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_concat (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="373" width="0.4059%" height="15" fill="rgb(239,44,28)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="357" width="0.4059%" height="15" fill="rgb(249,187,43)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="341" width="0.4059%" height="15" fill="rgb(216,141,28)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="351.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="325" width="0.4059%" height="15" fill="rgb(230,154,53)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="335.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c::_{{closure}} (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="309" width="0.4059%" height="15" fill="rgb(227,82,4)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="319.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_at_least (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="293" width="0.4059%" height="15" fill="rgb(220,107,16)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="303.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="277" width="0.4059%" height="15" fill="rgb(207,187,2)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="287.50"></text></g><g><title>regex_automata::nfa::thompson::compiler::Compiler::c_unicode_class (18,552,956 samples, 0.41%)</title><rect x="99.5476%" y="261" width="0.4059%" height="15" fill="rgb(210,162,52)" fg:x="4550364705" fg:w="18552956"/><text x="99.7976%" y="271.50"></text></g><g><title>regex_syntax::utf8::Utf8Sequences::new (2,076,662 samples, 0.05%)</title><rect x="99.9080%" y="245" width="0.0454%" height="15" fill="rgb(217,216,49)" fg:x="4566840999" fg:w="2076662"/><text x="100.1580%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,076,662 samples, 0.05%)</title><rect x="99.9080%" y="229" width="0.0454%" height="15" fill="rgb(218,146,49)" fg:x="4566840999" fg:w="2076662"/><text x="100.1580%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,076,662 samples, 0.05%)</title><rect x="99.9080%" y="213" width="0.0454%" height="15" fill="rgb(216,55,40)" fg:x="4566840999" fg:w="2076662"/><text x="100.1580%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,076,662 samples, 0.05%)</title><rect x="99.9080%" y="197" width="0.0454%" height="15" fill="rgb(208,196,21)" fg:x="4566840999" fg:w="2076662"/><text x="100.1580%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2,076,662 samples, 0.05%)</title><rect x="99.9080%" y="181" width="0.0454%" height="15" fill="rgb(242,117,42)" fg:x="4566840999" fg:w="2076662"/><text x="100.1580%" y="191.50"></text></g><g><title>malloc (2,076,662 samples, 0.05%)</title><rect x="99.9080%" y="165" width="0.0454%" height="15" fill="rgb(210,11,23)" fg:x="4566840999" fg:w="2076662"/><text x="100.1580%" y="175.50"></text></g><g><title>all (4,571,045,047 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(217,110,2)" fg:x="0" fg:w="4571045047"/><text x="0.2500%" y="799.50"></text></g><g><title>XLang-Rust (4,571,045,047 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(229,77,54)" fg:x="0" fg:w="4571045047"/><text x="0.2500%" y="783.50">XLang-Rust</text></g><g><title>regex_automata::meta::strategy::new (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="757" width="0.0465%" height="15" fill="rgb(218,53,16)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="767.50"></text></g><g><title>regex_automata::meta::strategy::Core::new (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="741" width="0.0465%" height="15" fill="rgb(215,38,13)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="751.50"></text></g><g><title>regex_automata::meta::wrappers::Hybrid::new (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="725" width="0.0465%" height="15" fill="rgb(235,42,18)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="735.50"></text></g><g><title>regex_automata::meta::wrappers::HybridEngine::new (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="709" width="0.0465%" height="15" fill="rgb(219,66,54)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="719.50"></text></g><g><title>regex_automata::hybrid::dfa::Builder::build_from_nfa (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="693" width="0.0465%" height="15" fill="rgb(222,205,4)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="703.50"></text></g><g><title>regex_automata::hybrid::dfa::Config::byte_classes_from_nfa (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="677" width="0.0465%" height="15" fill="rgb(227,213,46)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="687.50"></text></g><g><title>regex_automata::util::alphabet::ByteClassSet::byte_classes (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="661" width="0.0465%" height="15" fill="rgb(250,145,42)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="671.50"></text></g><g><title>regex_automata::util::alphabet::ByteSet::contains (2,127,386 samples, 0.05%)</title><rect x="99.9535%" y="645" width="0.0465%" height="15" fill="rgb(219,15,2)" fg:x="4568917661" fg:w="2127386"/><text x="100.2035%" y="655.50"></text></g></svg></svg>